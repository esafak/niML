#****************************************************************************
#  Copyright (c) 2010, Intel Corp.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#
#     Redistributions of source code must retain the above copyright notice,
#      this list of conditions and the following disclaimer.
#     Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#     Neither the name of Intel Corporation nor the names of its contributors
#      may be used to endorse or promote products derived from this software
#      without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
#  THE POSSIBILITY OF SUCH DAMAGE.
#*****************************************************************************
# Contents: Native C interface to LAPACK
# Author: Intel Corporation
# Generated November, 2011
#***************************************************************************

import niml.vec

when not defined(LAPACKE_H):
  const LAPACKE_H* = true
  #
  #  Turn on HAVE_LAPACK_CONFIG_H to redefine C-LAPACK datatypes
  #
  when defined(HAVE_LAPACK_CONFIG_H): 
    import "lapacke_config"

  when not defined(lapack_int):
    type lapack_int* = int
  when not defined(lapack_logical):
    type lapack_logical* = lapack_int

  # Complex types are structures equivalent to the
  # Fortran complex types COMPLEX(4) and COMPLEX(8).
  #
  # One can also redefine the types with his own types
  # for example by including in the code definitions like
  #
  # #define lapack_complex_float std::complex<float>
  # #define lapack_complex_double std::complex<double>
  #
  # or define these types in the command line:
  #
  # -Dlapack_complex_float="std::complex<float>"
  # -Dlapack_complex_double="std::complex<double>"
  #
  type TComplex[T: Tfloat] = tuple[re, im: T]

  when not defined(LAPACK_COMPLEX_CUSTOM):
    
    # Complex type (single precision)
    when not defined(lapack_complex_float):
      type lapack_complex_float = TComplex[cfloat]
    when not defined(lapack_complex_float_real):
      template lapack_complex_float_real*(z: expr): expr = (creal(z))
    when not defined(lapack_complex_float_imag):
      template lapack_complex_float_imag*(z: expr): expr = (cimag(z))

    # proc lapack_make_complex_float*(re: cfloat; im: cfloat): lapack_complex_float

    # Complex type (double precision) 
    when not defined(lapack_complex_double):
      type lapack_complex_double = TComplex[cdouble]
    when not defined(lapack_complex_double_real):
      template lapack_complex_double_real*(z: expr): expr = (creal(z))
    when not defined(lapack_complex_double_imag):
      template lapack_complex_double_imag*(z: expr): expr = (cimag(z))

    # proc lapack_make_complex_double*(re: cdouble; im: cdouble): lapack_complex_double
    
  when not defined(LAPACKE_malloc):
    template LAPACKE_malloc*(size: expr): expr = malloc(size)

  when not defined(LAPACKE_free):
    template LAPACKE_free*(p: expr): expr = free(p)

  template LAPACK_C2INT*(x: expr): expr = 
    (lapack_int)((cast[ptr cfloat](addr(x)))[])

  template LAPACK_Z2INT*(x: expr): expr = 
    (lapack_int)((cast[ptr cdouble](addr(x)))[])

  const 
    LAPACK_ROW_MAJOR* : cint = 101
    LAPACK_COL_MAJOR* : cint = 102
    LAPACK_WORK_MEMORY_ERROR* : cint = -1010
    LAPACK_TRANSPOSE_MEMORY_ERROR* : cint = -1011
  # Callback logical functions of one, two, or three arguments are used
  #  to select eigenvalues to sort to the top left of the Schur form.
  #  The value is selected if function returns TRUE (non-zero). 
  type 
    LAPACK_S_SELECT2* = proc (a2: ptr cfloat; a3: ptr cfloat): lapack_logical
    LAPACK_S_SELECT3* = proc (a2: ptr cfloat; a3: ptr cfloat; a4: ptr cfloat): lapack_logical
    LAPACK_D_SELECT2* = proc (a2: ptr cdouble; a3: ptr cdouble): lapack_logical
    LAPACK_D_SELECT3* = proc (a2: ptr cdouble; a3: ptr cdouble; a4: ptr cdouble): lapack_logical
    LAPACK_C_SELECT1* = proc (a2: ptr lapack_complex_float): lapack_logical
    LAPACK_C_SELECT2* = proc (a2: ptr lapack_complex_float;                                 a3: ptr lapack_complex_float): lapack_logical
    LAPACK_Z_SELECT1* = proc (a2: ptr lapack_complex_double): lapack_logical
    LAPACK_Z_SELECT2* = proc (a2: ptr lapack_complex_double;                               a3: ptr lapack_complex_double): lapack_logical
  
  # unconvinced this bit is necessary so I did not translate it:
  # import "lapacke_mangling"
  # const LAPACK_lsame* = LAPACK_GLOBAL(lsame, LSAME)
  # proc LAPACK_lsame*(ca: cstring; cb: cstring; lca: lapack_int; lcb: lapack_int): lapack_logical

  # C-LAPACK function prototypes 
  proc sbdsdc *(matrix_order: cint; uplo: char; compq: char;                           n: lapack_int; d: ptr cfloat; e: ptr cfloat;                          u: ptr cfloat; ldu: lapack_int; vt: ptr cfloat;                          ldvt: lapack_int; q: ptr cfloat; iq: ptr lapack_int): lapack_int {.importc: "LAPACKE_sbdsdc".}   
  proc dbdsdc *(matrix_order: cint; uplo: char; compq: char;                           n: lapack_int; d: ptr cdouble; e: ptr cdouble;                          u: ptr cdouble; ldu: lapack_int; vt: ptr cdouble;                          ldvt: lapack_int; q: ptr cdouble; iq: ptr lapack_int): lapack_int {.importc: "LAPACKE_dbdsdc".}   
  proc sbdsqr *(matrix_order: cint; uplo: char; n: lapack_int;                        ncvt: lapack_int; nru: lapack_int; ncc: lapack_int;                        d: ptr cfloat; e: ptr cfloat; vt: ptr cfloat;                          ldvt: lapack_int; u: ptr cfloat; ldu: lapack_int;                        c: ptr cfloat; ldc: lapack_int): lapack_int {.importc: "LAPACKE_sbdsqr".}   
  proc dbdsqr *(matrix_order: cint; uplo: char; n: lapack_int;                        ncvt: lapack_int; nru: lapack_int; ncc: lapack_int;                        d: ptr cdouble; e: ptr cdouble; vt: ptr cdouble;                          ldvt: lapack_int; u: ptr cdouble; ldu: lapack_int;                        c: ptr cdouble; ldc: lapack_int): lapack_int {.importc: "LAPACKE_dbdsqr".}   
  proc cbdsqr *(matrix_order: cint; uplo: char; n: lapack_int;                        ncvt: lapack_int; nru: lapack_int; ncc: lapack_int;                        d: ptr cfloat; e: ptr cfloat;                          vt: ptr lapack_complex_float; ldvt: lapack_int;                        u: ptr lapack_complex_float; ldu: lapack_int;                        c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cbdsqr".}   
  proc zbdsqr *(matrix_order: cint; uplo: char; n: lapack_int;                        ncvt: lapack_int; nru: lapack_int; ncc: lapack_int;                        d: ptr cdouble; e: ptr cdouble;                          vt: ptr lapack_complex_double; ldvt: lapack_int;                        u: ptr lapack_complex_double; ldu: lapack_int;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zbdsqr".}   
  proc sdisna *(job: char; m: lapack_int; n: lapack_int; d: ptr cfloat;                          sep: ptr cfloat): lapack_int {.importc: "LAPACKE_sdisna".}   
  proc ddisna *(job: char; m: lapack_int; n: lapack_int; d: ptr cdouble;                          sep: ptr cdouble): lapack_int {.importc: "LAPACKE_ddisna".}   
  proc sgbbrd *(matrix_order: cint; vect: char; m: lapack_int;                        n: lapack_int; ncc: lapack_int; kl: lapack_int;                        ku: lapack_int; ab: ptr cfloat; ldab: lapack_int;                        d: ptr cfloat; e: ptr cfloat; q: ptr cfloat;                          ldq: lapack_int; pt: ptr cfloat; ldpt: lapack_int;                        c: ptr cfloat; ldc: lapack_int): lapack_int {.importc: "LAPACKE_sgbbrd".}   
  proc dgbbrd *(matrix_order: cint; vect: char; m: lapack_int;                        n: lapack_int; ncc: lapack_int; kl: lapack_int;                        ku: lapack_int; ab: ptr cdouble; ldab: lapack_int;                        d: ptr cdouble; e: ptr cdouble; q: ptr cdouble;                          ldq: lapack_int; pt: ptr cdouble; ldpt: lapack_int;                        c: ptr cdouble; ldc: lapack_int): lapack_int {.importc: "LAPACKE_dgbbrd".}   
  proc cgbbrd *(matrix_order: cint; vect: char; m: lapack_int;                        n: lapack_int; ncc: lapack_int; kl: lapack_int;                        ku: lapack_int; ab: ptr lapack_complex_float;                          ldab: lapack_int; d: ptr cfloat; e: ptr cfloat;                          q: ptr lapack_complex_float; ldq: lapack_int;                        pt: ptr lapack_complex_float; ldpt: lapack_int;                        c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cgbbrd".}   
  proc zgbbrd *(matrix_order: cint; vect: char; m: lapack_int;                        n: lapack_int; ncc: lapack_int; kl: lapack_int;                        ku: lapack_int; ab: ptr lapack_complex_double;                        ldab: lapack_int; d: ptr cdouble; e: ptr cdouble;                          q: ptr lapack_complex_double; ldq: lapack_int;                        pt: ptr lapack_complex_double; ldpt: lapack_int;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zgbbrd".}   
  proc sgbcon *(matrix_order: cint; norm: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int; ab: ptr cfloat;                          ldab: lapack_int; ipiv: ptr lapack_int; anorm: cfloat;                          rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_sgbcon".}   
  proc dgbcon *(matrix_order: cint; norm: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int; ab: ptr cdouble;                          ldab: lapack_int; ipiv: ptr lapack_int; anorm: cdouble;                          rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dgbcon".}   
  proc cgbcon *(matrix_order: cint; norm: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        ipiv: ptr lapack_int; anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbcon".}   
  proc zgbcon *(matrix_order: cint; norm: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        ipiv: ptr lapack_int; anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbcon".}   
  proc sgbequ *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int; ab: ptr cfloat;                          ldab: lapack_int; r: ptr cfloat; c: ptr cfloat;                          rowcnd: ptr cfloat; colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_sgbequ".}   
  proc dgbequ *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int; ab: ptr cdouble;                          ldab: lapack_int; r: ptr cdouble; c: ptr cdouble;                          rowcnd: ptr cdouble; colcnd: ptr cdouble;                          amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dgbequ".}   
  proc cgbequ *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                          colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbequ".}   
  proc zgbequ *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        r: ptr cdouble; c: ptr cdouble; rowcnd: ptr cdouble;                          colcnd: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbequ".}   
  proc sgbequb *(matrix_order: cint; m: lapack_int; n: lapack_int;                         kl: lapack_int; ku: lapack_int; ab: ptr cfloat;                           ldab: lapack_int; r: ptr cfloat; c: ptr cfloat;                           rowcnd: ptr cfloat; colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_sgbequb".}   
  proc dgbequb *(matrix_order: cint; m: lapack_int; n: lapack_int;                         kl: lapack_int; ku: lapack_int; ab: ptr cdouble;                           ldab: lapack_int; r: ptr cdouble; c: ptr cdouble;                           rowcnd: ptr cdouble; colcnd: ptr cdouble;                           amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dgbequb".}   
  proc cgbequb *(matrix_order: cint; m: lapack_int; n: lapack_int;                         kl: lapack_int; ku: lapack_int;                         ab: ptr lapack_complex_float; ldab: lapack_int;                         r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                           colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbequb".}   
  proc zgbequb *(matrix_order: cint; m: lapack_int; n: lapack_int;                         kl: lapack_int; ku: lapack_int;                         ab: ptr lapack_complex_double; ldab: lapack_int;                         r: ptr cdouble; c: ptr cdouble; rowcnd: ptr cdouble;                           colcnd: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbequb".}   
  proc sgbrfs *(matrix_order: cint; trans: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                        ab: ptr cfloat; ldab: lapack_int; afb: ptr cfloat;                          ldafb: lapack_int; ipiv: ptr lapack_int; b: ptr cfloat;                          ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_sgbrfs".}   
  proc dgbrfs *(matrix_order: cint; trans: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                        ab: ptr cdouble; ldab: lapack_int; afb: ptr cdouble;                          ldafb: lapack_int; ipiv: ptr lapack_int; b: ptr cdouble;                          ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dgbrfs".}   
  proc cgbrfs *(matrix_order: cint; trans: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        afb: ptr lapack_complex_float; ldafb: lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; x: ptr lapack_complex_float;                          ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbrfs".}   
  proc zgbrfs *(matrix_order: cint; trans: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        afb: ptr lapack_complex_double; ldafb: lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; x: ptr lapack_complex_double;                        ldx: lapack_int; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbrfs".}   
  proc sgbrfsx *(matrix_order: cint; trans: char; equed: char;                            n: lapack_int; kl: lapack_int; ku: lapack_int;                         nrhs: lapack_int; ab: ptr cfloat; ldab: lapack_int;                         afb: ptr cfloat; ldafb: lapack_int;                         ipiv: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                           b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                           ldx: lapack_int; rcond: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_sgbrfsx".}   
  proc dgbrfsx *(matrix_order: cint; trans: char; equed: char;                            n: lapack_int; kl: lapack_int; ku: lapack_int;                         nrhs: lapack_int; ab: ptr cdouble; ldab: lapack_int;                         afb: ptr cdouble; ldafb: lapack_int;                         ipiv: ptr lapack_int; r: ptr cdouble; c: ptr cdouble;                           b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                           ldx: lapack_int; rcond: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_dgbrfsx".}   
  proc cgbrfsx *(matrix_order: cint; trans: char; equed: char;                            n: lapack_int; kl: lapack_int; ku: lapack_int;                         nrhs: lapack_int; ab: ptr lapack_complex_float;                           ldab: lapack_int; afb: ptr lapack_complex_float;                           ldafb: lapack_int; ipiv: ptr lapack_int; r: ptr cfloat;                           c: ptr cfloat; b: ptr lapack_complex_float;                           ldb: lapack_int; x: ptr lapack_complex_float;                           ldx: lapack_int; rcond: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbrfsx".}   
  proc zgbrfsx *(matrix_order: cint; trans: char; equed: char;                            n: lapack_int; kl: lapack_int; ku: lapack_int;                         nrhs: lapack_int; ab: ptr lapack_complex_double;                         ldab: lapack_int; afb: ptr lapack_complex_double;                         ldafb: lapack_int; ipiv: ptr lapack_int; r: ptr cdouble;                           c: ptr cdouble; b: ptr lapack_complex_double;                         ldb: lapack_int; x: ptr lapack_complex_double;                         ldx: lapack_int; rcond: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbrfsx".}   
  proc sgbsv *(matrix_order: cint; n: lapack_int; kl: lapack_int;                       ku: lapack_int; nrhs: lapack_int; ab: ptr cfloat;                         ldab: lapack_int; ipiv: ptr lapack_int; b: ptr cfloat;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgbsv".}   
  proc dgbsv *(matrix_order: cint; n: lapack_int; kl: lapack_int;                       ku: lapack_int; nrhs: lapack_int; ab: ptr cdouble;                         ldab: lapack_int; ipiv: ptr lapack_int; b: ptr cdouble;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgbsv".}   
  proc cgbsv *(matrix_order: cint; n: lapack_int; kl: lapack_int;                       ku: lapack_int; nrhs: lapack_int;                       ab: ptr lapack_complex_float; ldab: lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgbsv".}   
  proc zgbsv *(matrix_order: cint; n: lapack_int; kl: lapack_int;                       ku: lapack_int; nrhs: lapack_int;                       ab: ptr lapack_complex_double; ldab: lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgbsv".}   
  proc sgbsvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; kl: lapack_int; ku: lapack_int;                        nrhs: lapack_int; ab: ptr cfloat; ldab: lapack_int;                        afb: ptr cfloat; ldafb: lapack_int; ipiv: ptr lapack_int;                        equed: cstring; r: ptr cfloat; c: ptr cfloat;                          b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                          ldx: lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                          berr: ptr cfloat; rpivot: ptr cfloat): lapack_int {.importc: "LAPACKE_sgbsvx".}   
  proc dgbsvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; kl: lapack_int; ku: lapack_int;                        nrhs: lapack_int; ab: ptr cdouble; ldab: lapack_int;                        afb: ptr cdouble; ldafb: lapack_int;                        ipiv: ptr lapack_int; equed: cstring; r: ptr cdouble;                          c: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                        x: ptr cdouble; ldx: lapack_int; rcond: ptr cdouble;                          ferr: ptr cdouble; berr: ptr cdouble; rpivot: ptr cdouble): lapack_int {.importc: "LAPACKE_dgbsvx".}   
  proc cgbsvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; kl: lapack_int; ku: lapack_int;                        nrhs: lapack_int; ab: ptr lapack_complex_float;                          ldab: lapack_int; afb: ptr lapack_complex_float;                          ldafb: lapack_int; ipiv: ptr lapack_int; equed: cstring;                         r: ptr cfloat; c: ptr cfloat;                          b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                          rpivot: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbsvx".}   
  proc zgbsvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; kl: lapack_int; ku: lapack_int;                        nrhs: lapack_int; ab: ptr lapack_complex_double;                        ldab: lapack_int; afb: ptr lapack_complex_double;                        ldafb: lapack_int; ipiv: ptr lapack_int; equed: cstring;                         r: ptr cdouble; c: ptr cdouble;                          b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                          rpivot: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbsvx".}   
  proc sgbsvxx *(matrix_order: cint; fact: char; trans: char;                            n: lapack_int; kl: lapack_int; ku: lapack_int;                         nrhs: lapack_int; ab: ptr cfloat; ldab: lapack_int;                         afb: ptr cfloat; ldafb: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; r: ptr cfloat;                           c: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                         x: ptr cfloat; ldx: lapack_int; rcond: ptr cfloat;                           rpvgrw: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_sgbsvxx".}   
  proc dgbsvxx *(matrix_order: cint; fact: char; trans: char;                            n: lapack_int; kl: lapack_int; ku: lapack_int;                         nrhs: lapack_int; ab: ptr cdouble; ldab: lapack_int;                         afb: ptr cdouble; ldafb: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; r: ptr cdouble;                           c: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                         x: ptr cdouble; ldx: lapack_int; rcond: ptr cdouble;                           rpvgrw: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_dgbsvxx".}   
  proc cgbsvxx *(matrix_order: cint; fact: char; trans: char;                            n: lapack_int; kl: lapack_int; ku: lapack_int;                         nrhs: lapack_int; ab: ptr lapack_complex_float;                           ldab: lapack_int; afb: ptr lapack_complex_float;                           ldafb: lapack_int; ipiv: ptr lapack_int; equed: cstring;                          r: ptr cfloat; c: ptr cfloat;                           b: ptr lapack_complex_float; ldb: lapack_int;                         x: ptr lapack_complex_float; ldx: lapack_int;                         rcond: ptr cfloat; rpvgrw: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbsvxx".}   
  proc zgbsvxx *(matrix_order: cint; fact: char; trans: char;                            n: lapack_int; kl: lapack_int; ku: lapack_int;                         nrhs: lapack_int; ab: ptr lapack_complex_double;                         ldab: lapack_int; afb: ptr lapack_complex_double;                         ldafb: lapack_int; ipiv: ptr lapack_int; equed: cstring;                          r: ptr cdouble; c: ptr cdouble;                           b: ptr lapack_complex_double; ldb: lapack_int;                         x: ptr lapack_complex_double; ldx: lapack_int;                         rcond: ptr cdouble; rpvgrw: ptr cdouble;                           berr: ptr cdouble; n_err_bnds: lapack_int;                         err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                           nparams: lapack_int; params: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbsvxx".}   
  proc sgbtrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int; ab: ptr cfloat;                          ldab: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgbtrf".}   
  proc dgbtrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int; ab: ptr cdouble;                          ldab: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgbtrf".}   
  proc cgbtrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgbtrf".}   
  proc zgbtrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgbtrf".}   
  proc sgbtrs *(matrix_order: cint; trans: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                        ab: ptr cfloat; ldab: lapack_int; ipiv: ptr lapack_int;                        b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgbtrs".}   
  proc dgbtrs *(matrix_order: cint; trans: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                        ab: ptr cdouble; ldab: lapack_int; ipiv: ptr lapack_int;                        b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgbtrs".}   
  proc cgbtrs *(matrix_order: cint; trans: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgbtrs".}   
  proc zgbtrs *(matrix_order: cint; trans: char; n: lapack_int;                        kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgbtrs".}   
  proc sgebak *(matrix_order: cint; job: char; side: char; n: lapack_int;                        ilo: lapack_int; ihi: lapack_int; scale: ptr cfloat;                          m: lapack_int; v: ptr cfloat; ldv: lapack_int): lapack_int {.importc: "LAPACKE_sgebak".}   
  proc dgebak *(matrix_order: cint; job: char; side: char; n: lapack_int;                        ilo: lapack_int; ihi: lapack_int; scale: ptr cdouble;                          m: lapack_int; v: ptr cdouble; ldv: lapack_int): lapack_int {.importc: "LAPACKE_dgebak".}   
  proc cgebak *(matrix_order: cint; job: char; side: char; n: lapack_int;                        ilo: lapack_int; ihi: lapack_int; scale: ptr cfloat;                          m: lapack_int; v: ptr lapack_complex_float;                          ldv: lapack_int): lapack_int {.importc: "LAPACKE_cgebak".}   
  proc zgebak *(matrix_order: cint; job: char; side: char; n: lapack_int;                        ilo: lapack_int; ihi: lapack_int; scale: ptr cdouble;                          m: lapack_int; v: ptr lapack_complex_double;                        ldv: lapack_int): lapack_int {.importc: "LAPACKE_zgebak".}   
  proc sgebal *(matrix_order: cint; job: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; ilo: ptr lapack_int;                        ihi: ptr lapack_int; scale: ptr cfloat): lapack_int {.importc: "LAPACKE_sgebal".}   
  proc dgebal *(matrix_order: cint; job: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; ilo: ptr lapack_int;                        ihi: ptr lapack_int; scale: ptr cdouble): lapack_int {.importc: "LAPACKE_dgebal".}   
  proc cgebal *(matrix_order: cint; job: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ilo: ptr lapack_int; ihi: ptr lapack_int;                        scale: ptr cfloat): lapack_int {.importc: "LAPACKE_cgebal".}   
  proc zgebal *(matrix_order: cint; job: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ilo: ptr lapack_int; ihi: ptr lapack_int;                        scale: ptr cdouble): lapack_int {.importc: "LAPACKE_zgebal".}   
  proc sgebrd *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; d: ptr cfloat;                          e: ptr cfloat; tauq: ptr cfloat; taup: ptr cfloat): lapack_int {.importc: "LAPACKE_sgebrd".}   
  proc dgebrd *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; d: ptr cdouble;                          e: ptr cdouble; tauq: ptr cdouble; taup: ptr cdouble): lapack_int {.importc: "LAPACKE_dgebrd".}   
  proc cgebrd *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        d: ptr cfloat; e: ptr cfloat;                          tauq: ptr lapack_complex_float;                          taup: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgebrd".}   
  proc zgebrd *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        d: ptr cdouble; e: ptr cdouble;                          tauq: ptr lapack_complex_double;                        taup: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgebrd".}   
  proc sgecon *(matrix_order: cint; norm: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; anorm: cfloat;                          rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_sgecon".}   
  proc dgecon *(matrix_order: cint; norm: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; anorm: cdouble;                          rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dgecon".}   
  proc cgecon *(matrix_order: cint; norm: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_cgecon".}   
  proc zgecon *(matrix_order: cint; norm: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zgecon".}   
  proc sgeequ *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; r: ptr cfloat;                          c: ptr cfloat; rowcnd: ptr cfloat; colcnd: ptr cfloat;                          amax: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeequ".}   
  proc dgeequ *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; r: ptr cdouble;                          c: ptr cdouble; rowcnd: ptr cdouble; colcnd: ptr cdouble;                          amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeequ".}   
  proc cgeequ *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                          colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cgeequ".}   
  proc zgeequ *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        r: ptr cdouble; c: ptr cdouble; rowcnd: ptr cdouble;                          colcnd: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zgeequ".}   
  proc sgeequb *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr cfloat; lda: lapack_int; r: ptr cfloat;                           c: ptr cfloat; rowcnd: ptr cfloat; colcnd: ptr cfloat;                           amax: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeequb".}   
  proc dgeequb *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr cdouble; lda: lapack_int; r: ptr cdouble;                           c: ptr cdouble; rowcnd: ptr cdouble;                           colcnd: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeequb".}   
  proc cgeequb *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                           colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cgeequb".}   
  proc zgeequb *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         r: ptr cdouble; c: ptr cdouble; rowcnd: ptr cdouble;                           colcnd: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zgeequb".}   
  proc sgees *(matrix_order: cint; jobvs: char; sort: char;                          select: LAPACK_S_SELECT2; n: lapack_int; a: ptr cfloat;                         lda: lapack_int; sdim: ptr lapack_int; wr: ptr cfloat;                         wi: ptr cfloat; vs: ptr cfloat; ldvs: lapack_int): lapack_int {.importc: "LAPACKE_sgees".}   
  proc dgees *(matrix_order: cint; jobvs: char; sort: char;                          select: LAPACK_D_SELECT2; n: lapack_int; a: ptr cdouble;                         lda: lapack_int; sdim: ptr lapack_int; wr: ptr cdouble;                         wi: ptr cdouble; vs: ptr cdouble; ldvs: lapack_int): lapack_int {.importc: "LAPACKE_dgees".}   
  proc cgees *(matrix_order: cint; jobvs: char; sort: char;                          select: LAPACK_C_SELECT1; n: lapack_int;                       a: ptr lapack_complex_float; lda: lapack_int;                       sdim: ptr lapack_int; w: ptr lapack_complex_float;                         vs: ptr lapack_complex_float; ldvs: lapack_int): lapack_int {.importc: "LAPACKE_cgees".}   
  proc zgees *(matrix_order: cint; jobvs: char; sort: char;                          select: LAPACK_Z_SELECT1; n: lapack_int;                       a: ptr lapack_complex_double; lda: lapack_int;                       sdim: ptr lapack_int; w: ptr lapack_complex_double;                       vs: ptr lapack_complex_double; ldvs: lapack_int): lapack_int {.importc: "LAPACKE_zgees".}   
  proc sgeesx *(matrix_order: cint; jobvs: char; sort: char;                           select: LAPACK_S_SELECT2; sense: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; sdim: ptr lapack_int;                        wr: ptr cfloat; wi: ptr cfloat; vs: ptr cfloat;                          ldvs: lapack_int; rconde: ptr cfloat; rcondv: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeesx".}   
  proc dgeesx *(matrix_order: cint; jobvs: char; sort: char;                           select: LAPACK_D_SELECT2; sense: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; sdim: ptr lapack_int;                        wr: ptr cdouble; wi: ptr cdouble; vs: ptr cdouble;                          ldvs: lapack_int; rconde: ptr cdouble;                          rcondv: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeesx".}   
  proc cgeesx *(matrix_order: cint; jobvs: char; sort: char;                           select: LAPACK_C_SELECT1; sense: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        sdim: ptr lapack_int; w: ptr lapack_complex_float;                          vs: ptr lapack_complex_float; ldvs: lapack_int;                        rconde: ptr cfloat; rcondv: ptr cfloat): lapack_int {.importc: "LAPACKE_cgeesx".}   
  proc zgeesx *(matrix_order: cint; jobvs: char; sort: char;                           select: LAPACK_Z_SELECT1; sense: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        sdim: ptr lapack_int; w: ptr lapack_complex_double;                        vs: ptr lapack_complex_double; ldvs: lapack_int;                        rconde: ptr cdouble; rcondv: ptr cdouble): lapack_int {.importc: "LAPACKE_zgeesx".}   
  proc sgeev *(matrix_order: cint; jobvl: char; jobvr: char;                          n: lapack_int; a: ptr cfloat; lda: lapack_int;                       wr: ptr cfloat; wi: ptr cfloat; vl: ptr cfloat;                         ldvl: lapack_int; vr: ptr cfloat; ldvr: lapack_int): lapack_int {.importc: "LAPACKE_sgeev".}   
  proc dgeev *(matrix_order: cint; jobvl: char; jobvr: char;                          n: lapack_int; a: ptr cdouble; lda: lapack_int;                       wr: ptr cdouble; wi: ptr cdouble; vl: ptr cdouble;                         ldvl: lapack_int; vr: ptr cdouble; ldvr: lapack_int): lapack_int {.importc: "LAPACKE_dgeev".}   
  proc cgeev *(matrix_order: cint; jobvl: char; jobvr: char;                          n: lapack_int; a: ptr lapack_complex_float;                         lda: lapack_int; w: ptr lapack_complex_float;                         vl: ptr lapack_complex_float; ldvl: lapack_int;                       vr: ptr lapack_complex_float; ldvr: lapack_int): lapack_int {.importc: "LAPACKE_cgeev".}   
  proc zgeev *(matrix_order: cint; jobvl: char; jobvr: char;                          n: lapack_int; a: ptr lapack_complex_double;                       lda: lapack_int; w: ptr lapack_complex_double;                       vl: ptr lapack_complex_double; ldvl: lapack_int;                       vr: ptr lapack_complex_double; ldvr: lapack_int): lapack_int {.importc: "LAPACKE_zgeev".}   
  proc sgeevx *(matrix_order: cint; balanc: char; jobvl: char;                           jobvr: char; sense: char; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; wr: ptr cfloat; wi: ptr cfloat;                          vl: ptr cfloat; ldvl: lapack_int; vr: ptr cfloat;                          ldvr: lapack_int; ilo: ptr lapack_int;                        ihi: ptr lapack_int; scale: ptr cfloat;                          abnrm: ptr cfloat; rconde: ptr cfloat; rcondv: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeevx".}   
  proc dgeevx *(matrix_order: cint; balanc: char; jobvl: char;                           jobvr: char; sense: char; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; wr: ptr cdouble; wi: ptr cdouble;                          vl: ptr cdouble; ldvl: lapack_int; vr: ptr cdouble;                          ldvr: lapack_int; ilo: ptr lapack_int;                        ihi: ptr lapack_int; scale: ptr cdouble;                          abnrm: ptr cdouble; rconde: ptr cdouble;                          rcondv: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeevx".}   
  proc cgeevx *(matrix_order: cint; balanc: char; jobvl: char;                           jobvr: char; sense: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        w: ptr lapack_complex_float;                          vl: ptr lapack_complex_float; ldvl: lapack_int;                        vr: ptr lapack_complex_float; ldvr: lapack_int;                        ilo: ptr lapack_int; ihi: ptr lapack_int;                        scale: ptr cfloat; abnrm: ptr cfloat; rconde: ptr cfloat;                          rcondv: ptr cfloat): lapack_int {.importc: "LAPACKE_cgeevx".}   
  proc zgeevx *(matrix_order: cint; balanc: char; jobvl: char;                           jobvr: char; sense: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        w: ptr lapack_complex_double;                        vl: ptr lapack_complex_double; ldvl: lapack_int;                        vr: ptr lapack_complex_double; ldvr: lapack_int;                        ilo: ptr lapack_int; ihi: ptr lapack_int;                        scale: ptr cdouble; abnrm: ptr cdouble;                          rconde: ptr cdouble; rcondv: ptr cdouble): lapack_int {.importc: "LAPACKE_zgeevx".}   
  proc sgehrd *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr cfloat; lda: lapack_int;                        tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sgehrd".}   
  proc dgehrd *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr cdouble; lda: lapack_int;                        tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dgehrd".}   
  proc cgehrd *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgehrd".}   
  proc zgehrd *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgehrd".}   
  proc sgejsv *(matrix_order: cint; joba: char; jobu: char; jobv: char;                           jobr: char; jobt: char; jobp: char; m: lapack_int;                        n: lapack_int; a: ptr cfloat; lda: lapack_int;                        sva: ptr cfloat; u: ptr cfloat; ldu: lapack_int;                        v: ptr cfloat; ldv: lapack_int; stat: ptr cfloat;                          istat: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgejsv".}   
  proc dgejsv *(matrix_order: cint; joba: char; jobu: char; jobv: char;                           jobr: char; jobt: char; jobp: char; m: lapack_int;                        n: lapack_int; a: ptr cdouble; lda: lapack_int;                        sva: ptr cdouble; u: ptr cdouble; ldu: lapack_int;                        v: ptr cdouble; ldv: lapack_int; stat: ptr cdouble;                          istat: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgejsv".}   
  proc sgelq2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sgelq2".}   
  proc dgelq2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dgelq2".}   
  proc cgelq2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgelq2".}   
  proc zgelq2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgelq2".}   
  proc sgelqf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sgelqf".}   
  proc dgelqf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dgelqf".}   
  proc cgelqf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgelqf".}   
  proc zgelqf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgelqf".}   
  proc sgels *(matrix_order: cint; trans: char; m: lapack_int;                       n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                         lda: lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgels".}   
  proc dgels *(matrix_order: cint; trans: char; m: lapack_int;                       n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                         lda: lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgels".}   
  proc cgels *(matrix_order: cint; trans: char; m: lapack_int;                       n: lapack_int; nrhs: lapack_int;                       a: ptr lapack_complex_float; lda: lapack_int;                       b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgels".}   
  proc zgels *(matrix_order: cint; trans: char; m: lapack_int;                       n: lapack_int; nrhs: lapack_int;                       a: ptr lapack_complex_double; lda: lapack_int;                       b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgels".}   
  proc sgelsd *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                        b: ptr cfloat; ldb: lapack_int; s: ptr cfloat;                          rcond: cfloat; rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgelsd".}   
  proc dgelsd *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                        b: ptr cdouble; ldb: lapack_int; s: ptr cdouble;                          rcond: cdouble; rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgelsd".}   
  proc cgelsd *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; s: ptr cfloat; rcond: cfloat;                          rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgelsd".}   
  proc zgelsd *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; s: ptr cdouble; rcond: cdouble;                          rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgelsd".}   
  proc sgelss *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                        b: ptr cfloat; ldb: lapack_int; s: ptr cfloat;                          rcond: cfloat; rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgelss".}   
  proc dgelss *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                        b: ptr cdouble; ldb: lapack_int; s: ptr cdouble;                          rcond: cdouble; rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgelss".}   
  proc cgelss *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; s: ptr cfloat; rcond: cfloat;                          rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgelss".}   
  proc zgelss *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; s: ptr cdouble; rcond: cdouble;                          rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgelss".}   
  proc sgelsy *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                        b: ptr cfloat; ldb: lapack_int; jpvt: ptr lapack_int;                        rcond: cfloat; rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgelsy".}   
  proc dgelsy *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                        b: ptr cdouble; ldb: lapack_int; jpvt: ptr lapack_int;                        rcond: cdouble; rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgelsy".}   
  proc cgelsy *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; jpvt: ptr lapack_int; rcond: cfloat;                          rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgelsy".}   
  proc zgelsy *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; jpvt: ptr lapack_int; rcond: cdouble;                          rank: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgelsy".}   
  proc sgeqlf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeqlf".}   
  proc dgeqlf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeqlf".}   
  proc cgeqlf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgeqlf".}   
  proc zgeqlf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgeqlf".}   
  proc sgeqp3 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; jpvt: ptr lapack_int;                        tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeqp3".}   
  proc dgeqp3 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; jpvt: ptr lapack_int;                        tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeqp3".}   
  proc cgeqp3 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        jpvt: ptr lapack_int; tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgeqp3".}   
  proc zgeqp3 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        jpvt: ptr lapack_int; tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgeqp3".}   
  proc sgeqpf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; jpvt: ptr lapack_int;                        tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeqpf".}   
  proc dgeqpf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; jpvt: ptr lapack_int;                        tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeqpf".}   
  proc cgeqpf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        jpvt: ptr lapack_int; tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgeqpf".}   
  proc zgeqpf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        jpvt: ptr lapack_int; tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgeqpf".}   
  proc sgeqr2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeqr2".}   
  proc dgeqr2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeqr2".}   
  proc cgeqr2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgeqr2".}   
  proc zgeqr2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgeqr2".}   
  proc sgeqrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeqrf".}   
  proc dgeqrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeqrf".}   
  proc cgeqrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgeqrf".}   
  proc zgeqrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgeqrf".}   
  proc sgeqrfp *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr cfloat; lda: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeqrfp".}   
  proc dgeqrfp *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr cdouble; lda: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeqrfp".}   
  proc cgeqrfp *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgeqrfp".}   
  proc zgeqrfp *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgeqrfp".}   
  proc sgerfs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                        af: ptr cfloat; ldaf: lapack_int; ipiv: ptr lapack_int;                        b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                          ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_sgerfs".}   
  proc dgerfs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                        af: ptr cdouble; ldaf: lapack_int; ipiv: ptr lapack_int;                        b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                          ldx: lapack_int; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dgerfs".}   
  proc cgerfs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; af: ptr lapack_complex_float;                          ldaf: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cgerfs".}   
  proc zgerfs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; af: ptr lapack_complex_double;                        ldaf: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zgerfs".}   
  proc sgerfsx *(matrix_order: cint; trans: char; equed: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                           lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                         ipiv: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                           b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                           ldx: lapack_int; rcond: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_sgerfsx".}   
  proc dgerfsx *(matrix_order: cint; trans: char; equed: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                           lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                         ipiv: ptr lapack_int; r: ptr cdouble; c: ptr cdouble;                           b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                           ldx: lapack_int; rcond: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_dgerfsx".}   
  proc cgerfsx *(matrix_order: cint; trans: char; equed: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         af: ptr lapack_complex_float; ldaf: lapack_int;                         ipiv: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                           b: ptr lapack_complex_float; ldb: lapack_int;                         x: ptr lapack_complex_float; ldx: lapack_int;                         rcond: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_cgerfsx".}   
  proc zgerfsx *(matrix_order: cint; trans: char; equed: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         af: ptr lapack_complex_double; ldaf: lapack_int;                         ipiv: ptr lapack_int; r: ptr cdouble; c: ptr cdouble;                           b: ptr lapack_complex_double; ldb: lapack_int;                         x: ptr lapack_complex_double; ldx: lapack_int;                         rcond: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_zgerfsx".}   
  proc sgerqf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sgerqf".}   
  proc dgerqf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dgerqf".}   
  proc cgerqf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgerqf".}   
  proc zgerqf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgerqf".}   
  proc sgesdd *(matrix_order: cint; jobz: char; m: lapack_int;                        n: lapack_int; a: ptr cfloat; lda: lapack_int;                        s: ptr cfloat; u: ptr cfloat; ldu: lapack_int;                        vt: ptr cfloat; ldvt: lapack_int): lapack_int {.importc: "LAPACKE_sgesdd".}   
  proc dgesdd *(matrix_order: cint; jobz: char; m: lapack_int;                        n: lapack_int; a: ptr cdouble; lda: lapack_int;                        s: ptr cdouble; u: ptr cdouble; ldu: lapack_int;                        vt: ptr cdouble; ldvt: lapack_int): lapack_int {.importc: "LAPACKE_dgesdd".}   
  proc cgesdd *(matrix_order: cint; jobz: char; m: lapack_int;                        n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; s: ptr cfloat;                          u: ptr lapack_complex_float; ldu: lapack_int;                        vt: ptr lapack_complex_float; ldvt: lapack_int): lapack_int {.importc: "LAPACKE_cgesdd".}   
  proc zgesdd *(matrix_order: cint; jobz: char; m: lapack_int;                        n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; s: ptr cdouble;                          u: ptr lapack_complex_double; ldu: lapack_int;                        vt: ptr lapack_complex_double; ldvt: lapack_int): lapack_int {.importc: "LAPACKE_zgesdd".}   
  proc sgesv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int;                       b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgesv".}   
  proc dgesv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       a: ptr cdouble; lda: lapack_int; ipiv: ptr lapack_int;                       b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgesv".}   
  proc cgesv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       a: ptr lapack_complex_float; lda: lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgesv".}   
  proc zgesv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       a: ptr lapack_complex_double; lda: lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgesv".}   
  proc dsgesv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                        a: ptr cdouble; lda: lapack_int; ipiv: ptr lapack_int;                        b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                          ldx: lapack_int; iter: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsgesv".}   
  proc zcgesv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; x: ptr lapack_complex_double;                        ldx: lapack_int; iter: ptr lapack_int): lapack_int {.importc: "LAPACKE_zcgesv".}   
  proc sgesvd *(matrix_order: cint; jobu: char; jobvt: char;                           m: lapack_int; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; s: ptr cfloat; u: ptr cfloat;                          ldu: lapack_int; vt: ptr cfloat; ldvt: lapack_int;                        superb: ptr cfloat): lapack_int {.importc: "LAPACKE_sgesvd".}   
  proc dgesvd *(matrix_order: cint; jobu: char; jobvt: char;                           m: lapack_int; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; s: ptr cdouble; u: ptr cdouble;                          ldu: lapack_int; vt: ptr cdouble; ldvt: lapack_int;                        superb: ptr cdouble): lapack_int {.importc: "LAPACKE_dgesvd".}   
  proc cgesvd *(matrix_order: cint; jobu: char; jobvt: char;                           m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        s: ptr cfloat; u: ptr lapack_complex_float;                          ldu: lapack_int; vt: ptr lapack_complex_float;                          ldvt: lapack_int; superb: ptr cfloat): lapack_int {.importc: "LAPACKE_cgesvd".}   
  proc zgesvd *(matrix_order: cint; jobu: char; jobvt: char;                           m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        s: ptr cdouble; u: ptr lapack_complex_double;                        ldu: lapack_int; vt: ptr lapack_complex_double;                        ldvt: lapack_int; superb: ptr cdouble): lapack_int {.importc: "LAPACKE_zgesvd".}   
  proc sgesvj *(matrix_order: cint; joba: char; jobu: char; jobv: char;                           m: lapack_int; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; sva: ptr cfloat; mv: lapack_int;                        v: ptr cfloat; ldv: lapack_int; stat: ptr cfloat): lapack_int {.importc: "LAPACKE_sgesvj".}   
  proc dgesvj *(matrix_order: cint; joba: char; jobu: char; jobv: char;                           m: lapack_int; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; sva: ptr cdouble; mv: lapack_int;                        v: ptr cdouble; ldv: lapack_int; stat: ptr cdouble): lapack_int {.importc: "LAPACKE_dgesvj".}   
  proc sgesvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                          lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                        ipiv: ptr lapack_int; equed: cstring; r: ptr cfloat;                          c: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                        x: ptr cfloat; ldx: lapack_int; rcond: ptr cfloat;                          ferr: ptr cfloat; berr: ptr cfloat; rpivot: ptr cfloat): lapack_int {.importc: "LAPACKE_sgesvx".}   
  proc dgesvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                          lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                        ipiv: ptr lapack_int; equed: cstring; r: ptr cdouble;                          c: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                        x: ptr cdouble; ldx: lapack_int; rcond: ptr cdouble;                          ferr: ptr cdouble; berr: ptr cdouble; rpivot: ptr cdouble): lapack_int {.importc: "LAPACKE_dgesvx".}   
  proc cgesvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        af: ptr lapack_complex_float; ldaf: lapack_int;                        ipiv: ptr lapack_int; equed: cstring; r: ptr cfloat;                          c: ptr cfloat; b: ptr lapack_complex_float;                          ldb: lapack_int; x: ptr lapack_complex_float;                          ldx: lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                          berr: ptr cfloat; rpivot: ptr cfloat): lapack_int {.importc: "LAPACKE_cgesvx".}   
  proc zgesvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        af: ptr lapack_complex_double; ldaf: lapack_int;                        ipiv: ptr lapack_int; equed: cstring; r: ptr cdouble;                          c: ptr cdouble; b: ptr lapack_complex_double;                        ldb: lapack_int; x: ptr lapack_complex_double;                        ldx: lapack_int; rcond: ptr cdouble; ferr: ptr cdouble;                          berr: ptr cdouble; rpivot: ptr cdouble): lapack_int {.importc: "LAPACKE_zgesvx".}   
  proc sgesvxx *(matrix_order: cint; fact: char; trans: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                           lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; r: ptr cfloat;                           c: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                         x: ptr cfloat; ldx: lapack_int; rcond: ptr cfloat;                           rpvgrw: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_sgesvxx".}   
  proc dgesvxx *(matrix_order: cint; fact: char; trans: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                           lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; r: ptr cdouble;                           c: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                         x: ptr cdouble; ldx: lapack_int; rcond: ptr cdouble;                           rpvgrw: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_dgesvxx".}   
  proc cgesvxx *(matrix_order: cint; fact: char; trans: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         af: ptr lapack_complex_float; ldaf: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; r: ptr cfloat;                           c: ptr cfloat; b: ptr lapack_complex_float;                           ldb: lapack_int; x: ptr lapack_complex_float;                           ldx: lapack_int; rcond: ptr cfloat; rpvgrw: ptr cfloat;                           berr: ptr cfloat; n_err_bnds: lapack_int;                         err_bnds_norm: ptr cfloat; err_bnds_comp: ptr cfloat;                           nparams: lapack_int; params: ptr cfloat): lapack_int {.importc: "LAPACKE_cgesvxx".}   
  proc zgesvxx *(matrix_order: cint; fact: char; trans: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         af: ptr lapack_complex_double; ldaf: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; r: ptr cdouble;                           c: ptr cdouble; b: ptr lapack_complex_double;                         ldb: lapack_int; x: ptr lapack_complex_double;                         ldx: lapack_int; rcond: ptr cdouble;                           rpvgrw: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_zgesvxx".}   
  proc sgetf2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgetf2".}   
  proc dgetf2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgetf2".}   
  proc cgetf2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgetf2".}   
  proc zgetf2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgetf2".}   
  proc sgetrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgetrf".}   
  proc dgetrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgetrf".}   
  proc cgetrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgetrf".}   
  proc zgetrf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgetrf".}   
  proc sgetri *(matrix_order: cint; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgetri".}   
  proc dgetri *(matrix_order: cint; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgetri".}   
  proc cgetri *(matrix_order: cint; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgetri".}   
  proc zgetri *(matrix_order: cint; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgetri".}   
  proc sgetrs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                        ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgetrs".}   
  proc dgetrs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                        ipiv: ptr lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgetrs".}   
  proc cgetrs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgetrs".}   
  proc zgetrs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgetrs".}   
  proc sggbak *(matrix_order: cint; job: char; side: char; n: lapack_int;                        ilo: lapack_int; ihi: lapack_int; lscale: ptr cfloat;                          rscale: ptr cfloat; m: lapack_int; v: ptr cfloat;                          ldv: lapack_int): lapack_int {.importc: "LAPACKE_sggbak".}   
  proc dggbak *(matrix_order: cint; job: char; side: char; n: lapack_int;                        ilo: lapack_int; ihi: lapack_int; lscale: ptr cdouble;                          rscale: ptr cdouble; m: lapack_int; v: ptr cdouble;                          ldv: lapack_int): lapack_int {.importc: "LAPACKE_dggbak".}   
  proc cggbak *(matrix_order: cint; job: char; side: char; n: lapack_int;                        ilo: lapack_int; ihi: lapack_int; lscale: ptr cfloat;                          rscale: ptr cfloat; m: lapack_int;                        v: ptr lapack_complex_float; ldv: lapack_int): lapack_int {.importc: "LAPACKE_cggbak".}   
  proc zggbak *(matrix_order: cint; job: char; side: char; n: lapack_int;                        ilo: lapack_int; ihi: lapack_int; lscale: ptr cdouble;                          rscale: ptr cdouble; m: lapack_int;                        v: ptr lapack_complex_double; ldv: lapack_int): lapack_int {.importc: "LAPACKE_zggbak".}   
  proc sggbal *(matrix_order: cint; job: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                          ldb: lapack_int; ilo: ptr lapack_int;                        ihi: ptr lapack_int; lscale: ptr cfloat;                          rscale: ptr cfloat): lapack_int {.importc: "LAPACKE_sggbal".}   
  proc dggbal *(matrix_order: cint; job: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                          ldb: lapack_int; ilo: ptr lapack_int;                        ihi: ptr lapack_int; lscale: ptr cdouble;                          rscale: ptr cdouble): lapack_int {.importc: "LAPACKE_dggbal".}   
  proc cggbal *(matrix_order: cint; job: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        ilo: ptr lapack_int; ihi: ptr lapack_int;                        lscale: ptr cfloat; rscale: ptr cfloat): lapack_int {.importc: "LAPACKE_cggbal".}   
  proc zggbal *(matrix_order: cint; job: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        ilo: ptr lapack_int; ihi: ptr lapack_int;                        lscale: ptr cdouble; rscale: ptr cdouble): lapack_int {.importc: "LAPACKE_zggbal".}   
  proc sgges *(matrix_order: cint; jobvsl: char; jobvsr: char;                          sort: char; selctg: LAPACK_S_SELECT3; n: lapack_int;                       a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                         ldb: lapack_int; sdim: ptr lapack_int; alphar: ptr cfloat;                         alphai: ptr cfloat; beta: ptr cfloat; vsl: ptr cfloat;                         ldvsl: lapack_int; vsr: ptr cfloat; ldvsr: lapack_int): lapack_int {.importc: "LAPACKE_sgges".}   
  proc dgges *(matrix_order: cint; jobvsl: char; jobvsr: char;                          sort: char; selctg: LAPACK_D_SELECT3; n: lapack_int;                       a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                         ldb: lapack_int; sdim: ptr lapack_int;                       alphar: ptr cdouble; alphai: ptr cdouble;                         beta: ptr cdouble; vsl: ptr cdouble; ldvsl: lapack_int;                       vsr: ptr cdouble; ldvsr: lapack_int): lapack_int {.importc: "LAPACKE_dgges".}   
  proc cgges *(matrix_order: cint; jobvsl: char; jobvsr: char;                          sort: char; selctg: LAPACK_C_SELECT2; n: lapack_int;                       a: ptr lapack_complex_float; lda: lapack_int;                       b: ptr lapack_complex_float; ldb: lapack_int;                       sdim: ptr lapack_int; alpha: ptr lapack_complex_float;                         beta: ptr lapack_complex_float;                         vsl: ptr lapack_complex_float; ldvsl: lapack_int;                       vsr: ptr lapack_complex_float; ldvsr: lapack_int): lapack_int {.importc: "LAPACKE_cgges".}   
  proc zgges *(matrix_order: cint; jobvsl: char; jobvsr: char;                          sort: char; selctg: LAPACK_Z_SELECT2; n: lapack_int;                       a: ptr lapack_complex_double; lda: lapack_int;                       b: ptr lapack_complex_double; ldb: lapack_int;                       sdim: ptr lapack_int; alpha: ptr lapack_complex_double;                       beta: ptr lapack_complex_double;                       vsl: ptr lapack_complex_double; ldvsl: lapack_int;                       vsr: ptr lapack_complex_double; ldvsr: lapack_int): lapack_int {.importc: "LAPACKE_zgges".}   
  proc sggesx *(matrix_order: cint; jobvsl: char; jobvsr: char;                           sort: char; selctg: LAPACK_S_SELECT3; sense: char;                           n: lapack_int; a: ptr cfloat; lda: lapack_int;                        b: ptr cfloat; ldb: lapack_int; sdim: ptr lapack_int;                        alphar: ptr cfloat; alphai: ptr cfloat; beta: ptr cfloat;                          vsl: ptr cfloat; ldvsl: lapack_int; vsr: ptr cfloat;                          ldvsr: lapack_int; rconde: ptr cfloat; rcondv: ptr cfloat): lapack_int {.importc: "LAPACKE_sggesx".}   
  proc dggesx *(matrix_order: cint; jobvsl: char; jobvsr: char;                           sort: char; selctg: LAPACK_D_SELECT3; sense: char;                           n: lapack_int; a: ptr cdouble; lda: lapack_int;                        b: ptr cdouble; ldb: lapack_int; sdim: ptr lapack_int;                        alphar: ptr cdouble; alphai: ptr cdouble;                          beta: ptr cdouble; vsl: ptr cdouble; ldvsl: lapack_int;                        vsr: ptr cdouble; ldvsr: lapack_int; rconde: ptr cdouble;                          rcondv: ptr cdouble): lapack_int {.importc: "LAPACKE_dggesx".}   
  proc cggesx *(matrix_order: cint; jobvsl: char; jobvsr: char;                           sort: char; selctg: LAPACK_C_SELECT2; sense: char;                           n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; sdim: ptr lapack_int;                        alpha: ptr lapack_complex_float;                          beta: ptr lapack_complex_float;                          vsl: ptr lapack_complex_float; ldvsl: lapack_int;                        vsr: ptr lapack_complex_float; ldvsr: lapack_int;                        rconde: ptr cfloat; rcondv: ptr cfloat): lapack_int {.importc: "LAPACKE_cggesx".}   
  proc zggesx *(matrix_order: cint; jobvsl: char; jobvsr: char;                           sort: char; selctg: LAPACK_Z_SELECT2; sense: char;                           n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; sdim: ptr lapack_int;                        alpha: ptr lapack_complex_double;                        beta: ptr lapack_complex_double;                        vsl: ptr lapack_complex_double; ldvsl: lapack_int;                        vsr: ptr lapack_complex_double; ldvsr: lapack_int;                        rconde: ptr cdouble; rcondv: ptr cdouble): lapack_int {.importc: "LAPACKE_zggesx".}   
  proc sggev *(matrix_order: cint; jobvl: char; jobvr: char;                          n: lapack_int; a: ptr cfloat; lda: lapack_int;                       b: ptr cfloat; ldb: lapack_int; alphar: ptr cfloat;                         alphai: ptr cfloat; beta: ptr cfloat; vl: ptr cfloat;                         ldvl: lapack_int; vr: ptr cfloat; ldvr: lapack_int): lapack_int {.importc: "LAPACKE_sggev".}   
  proc dggev *(matrix_order: cint; jobvl: char; jobvr: char;                          n: lapack_int; a: ptr cdouble; lda: lapack_int;                       b: ptr cdouble; ldb: lapack_int; alphar: ptr cdouble;                         alphai: ptr cdouble; beta: ptr cdouble; vl: ptr cdouble;                         ldvl: lapack_int; vr: ptr cdouble; ldvr: lapack_int): lapack_int {.importc: "LAPACKE_dggev".}   
  proc cggev *(matrix_order: cint; jobvl: char; jobvr: char;                          n: lapack_int; a: ptr lapack_complex_float;                         lda: lapack_int; b: ptr lapack_complex_float;                         ldb: lapack_int; alpha: ptr lapack_complex_float;                         beta: ptr lapack_complex_float;                         vl: ptr lapack_complex_float; ldvl: lapack_int;                       vr: ptr lapack_complex_float; ldvr: lapack_int): lapack_int {.importc: "LAPACKE_cggev".}   
  proc zggev *(matrix_order: cint; jobvl: char; jobvr: char;                          n: lapack_int; a: ptr lapack_complex_double;                       lda: lapack_int; b: ptr lapack_complex_double;                       ldb: lapack_int; alpha: ptr lapack_complex_double;                       beta: ptr lapack_complex_double;                       vl: ptr lapack_complex_double; ldvl: lapack_int;                       vr: ptr lapack_complex_double; ldvr: lapack_int): lapack_int {.importc: "LAPACKE_zggev".}   
  proc sggevx *(matrix_order: cint; balanc: char; jobvl: char;                           jobvr: char; sense: char; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                        alphar: ptr cfloat; alphai: ptr cfloat; beta: ptr cfloat;                          vl: ptr cfloat; ldvl: lapack_int; vr: ptr cfloat;                          ldvr: lapack_int; ilo: ptr lapack_int;                        ihi: ptr lapack_int; lscale: ptr cfloat;                          rscale: ptr cfloat; abnrm: ptr cfloat; bbnrm: ptr cfloat;                          rconde: ptr cfloat; rcondv: ptr cfloat): lapack_int {.importc: "LAPACKE_sggevx".}   
  proc dggevx *(matrix_order: cint; balanc: char; jobvl: char;                           jobvr: char; sense: char; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                        alphar: ptr cdouble; alphai: ptr cdouble;                          beta: ptr cdouble; vl: ptr cdouble; ldvl: lapack_int;                        vr: ptr cdouble; ldvr: lapack_int; ilo: ptr lapack_int;                        ihi: ptr lapack_int; lscale: ptr cdouble;                          rscale: ptr cdouble; abnrm: ptr cdouble;                          bbnrm: ptr cdouble; rconde: ptr cdouble;                          rcondv: ptr cdouble): lapack_int {.importc: "LAPACKE_dggevx".}   
  proc cggevx *(matrix_order: cint; balanc: char; jobvl: char;                           jobvr: char; sense: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        alpha: ptr lapack_complex_float;                          beta: ptr lapack_complex_float;                          vl: ptr lapack_complex_float; ldvl: lapack_int;                        vr: ptr lapack_complex_float; ldvr: lapack_int;                        ilo: ptr lapack_int; ihi: ptr lapack_int;                        lscale: ptr cfloat; rscale: ptr cfloat;                          abnrm: ptr cfloat; bbnrm: ptr cfloat; rconde: ptr cfloat;                          rcondv: ptr cfloat): lapack_int {.importc: "LAPACKE_cggevx".}   
  proc zggevx *(matrix_order: cint; balanc: char; jobvl: char;                           jobvr: char; sense: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        alpha: ptr lapack_complex_double;                        beta: ptr lapack_complex_double;                        vl: ptr lapack_complex_double; ldvl: lapack_int;                        vr: ptr lapack_complex_double; ldvr: lapack_int;                        ilo: ptr lapack_int; ihi: ptr lapack_int;                        lscale: ptr cdouble; rscale: ptr cdouble;                          abnrm: ptr cdouble; bbnrm: ptr cdouble;                          rconde: ptr cdouble; rcondv: ptr cdouble): lapack_int {.importc: "LAPACKE_zggevx".}   
  proc sggglm *(matrix_order: cint; n: lapack_int; m: lapack_int;                        p: lapack_int; a: ptr cfloat; lda: lapack_int;                        b: ptr cfloat; ldb: lapack_int; d: ptr cfloat;                          x: ptr cfloat; y: ptr cfloat): lapack_int {.importc: "LAPACKE_sggglm".}   
  proc dggglm *(matrix_order: cint; n: lapack_int; m: lapack_int;                        p: lapack_int; a: ptr cdouble; lda: lapack_int;                        b: ptr cdouble; ldb: lapack_int; d: ptr cdouble;                          x: ptr cdouble; y: ptr cdouble): lapack_int {.importc: "LAPACKE_dggglm".}   
  proc cggglm *(matrix_order: cint; n: lapack_int; m: lapack_int;                        p: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; d: ptr lapack_complex_float;                          x: ptr lapack_complex_float; y: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cggglm".}   
  proc zggglm *(matrix_order: cint; n: lapack_int; m: lapack_int;                        p: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; d: ptr lapack_complex_double;                        x: ptr lapack_complex_double;                        y: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zggglm".}   
  proc sgghrd *(matrix_order: cint; compq: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                          ldb: lapack_int; q: ptr cfloat; ldq: lapack_int;                        z: ptr cfloat; ldz: lapack_int): lapack_int {.importc: "LAPACKE_sgghrd".}   
  proc dgghrd *(matrix_order: cint; compq: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                          ldb: lapack_int; q: ptr cdouble; ldq: lapack_int;                        z: ptr cdouble; ldz: lapack_int): lapack_int {.importc: "LAPACKE_dgghrd".}   
  proc cgghrd *(matrix_order: cint; compq: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        q: ptr lapack_complex_float; ldq: lapack_int;                        z: ptr lapack_complex_float; ldz: lapack_int): lapack_int {.importc: "LAPACKE_cgghrd".}   
  proc zgghrd *(matrix_order: cint; compq: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        q: ptr lapack_complex_double; ldq: lapack_int;                        z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zgghrd".}   
  proc sgglse *(matrix_order: cint; m: lapack_int; n: lapack_int;                        p: lapack_int; a: ptr cfloat; lda: lapack_int;                        b: ptr cfloat; ldb: lapack_int; c: ptr cfloat;                          d: ptr cfloat; x: ptr cfloat): lapack_int {.importc: "LAPACKE_sgglse".}   
  proc dgglse *(matrix_order: cint; m: lapack_int; n: lapack_int;                        p: lapack_int; a: ptr cdouble; lda: lapack_int;                        b: ptr cdouble; ldb: lapack_int; c: ptr cdouble;                          d: ptr cdouble; x: ptr cdouble): lapack_int {.importc: "LAPACKE_dgglse".}   
  proc cgglse *(matrix_order: cint; m: lapack_int; n: lapack_int;                        p: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; c: ptr lapack_complex_float;                          d: ptr lapack_complex_float; x: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgglse".}   
  proc zgglse *(matrix_order: cint; m: lapack_int; n: lapack_int;                        p: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; c: ptr lapack_complex_double;                        d: ptr lapack_complex_double;                        x: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgglse".}   
  proc sggqrf *(matrix_order: cint; n: lapack_int; m: lapack_int;                        p: lapack_int; a: ptr cfloat; lda: lapack_int;                        taua: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                        taub: ptr cfloat): lapack_int {.importc: "LAPACKE_sggqrf".}   
  proc dggqrf *(matrix_order: cint; n: lapack_int; m: lapack_int;                        p: lapack_int; a: ptr cdouble; lda: lapack_int;                        taua: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                        taub: ptr cdouble): lapack_int {.importc: "LAPACKE_dggqrf".}   
  proc cggqrf *(matrix_order: cint; n: lapack_int; m: lapack_int;                        p: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; taua: ptr lapack_complex_float;                          b: ptr lapack_complex_float; ldb: lapack_int;                        taub: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cggqrf".}   
  proc zggqrf *(matrix_order: cint; n: lapack_int; m: lapack_int;                        p: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; taua: ptr lapack_complex_double;                        b: ptr lapack_complex_double; ldb: lapack_int;                        taub: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zggqrf".}   
  proc sggrqf *(matrix_order: cint; m: lapack_int; p: lapack_int;                        n: lapack_int; a: ptr cfloat; lda: lapack_int;                        taua: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                        taub: ptr cfloat): lapack_int {.importc: "LAPACKE_sggrqf".}   
  proc dggrqf *(matrix_order: cint; m: lapack_int; p: lapack_int;                        n: lapack_int; a: ptr cdouble; lda: lapack_int;                        taua: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                        taub: ptr cdouble): lapack_int {.importc: "LAPACKE_dggrqf".}   
  proc cggrqf *(matrix_order: cint; m: lapack_int; p: lapack_int;                        n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; taua: ptr lapack_complex_float;                          b: ptr lapack_complex_float; ldb: lapack_int;                        taub: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cggrqf".}   
  proc zggrqf *(matrix_order: cint; m: lapack_int; p: lapack_int;                        n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; taua: ptr lapack_complex_double;                        b: ptr lapack_complex_double; ldb: lapack_int;                        taub: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zggrqf".}   
  proc sggsvd *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; n: lapack_int; p: lapack_int;                        k: ptr lapack_int; l: ptr lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                        alpha: ptr cfloat; beta: ptr cfloat; u: ptr cfloat;                          ldu: lapack_int; v: ptr cfloat; ldv: lapack_int;                        q: ptr cfloat; ldq: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sggsvd".}   
  proc dggsvd *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; n: lapack_int; p: lapack_int;                        k: ptr lapack_int; l: ptr lapack_int; a: ptr cdouble;                          lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                        alpha: ptr cdouble; beta: ptr cdouble; u: ptr cdouble;                          ldu: lapack_int; v: ptr cdouble; ldv: lapack_int;                        q: ptr cdouble; ldq: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dggsvd".}   
  proc cggsvd *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; n: lapack_int; p: lapack_int;                        k: ptr lapack_int; l: ptr lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        alpha: ptr cfloat; beta: ptr cfloat;                          u: ptr lapack_complex_float; ldu: lapack_int;                        v: ptr lapack_complex_float; ldv: lapack_int;                        q: ptr lapack_complex_float; ldq: lapack_int;                        iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_cggsvd".}   
  proc zggsvd *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; n: lapack_int; p: lapack_int;                        k: ptr lapack_int; l: ptr lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        alpha: ptr cdouble; beta: ptr cdouble;                          u: ptr lapack_complex_double; ldu: lapack_int;                        v: ptr lapack_complex_double; ldv: lapack_int;                        q: ptr lapack_complex_double; ldq: lapack_int;                        iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_zggsvd".}   
  proc sggsvp *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; p: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                          ldb: lapack_int; tola: cfloat; tolb: cfloat;                          k: ptr lapack_int; l: ptr lapack_int; u: ptr cfloat;                          ldu: lapack_int; v: ptr cfloat; ldv: lapack_int;                        q: ptr cfloat; ldq: lapack_int): lapack_int {.importc: "LAPACKE_sggsvp".}   
  proc dggsvp *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; p: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                          ldb: lapack_int; tola: cdouble; tolb: cdouble;                          k: ptr lapack_int; l: ptr lapack_int; u: ptr cdouble;                          ldu: lapack_int; v: ptr cdouble; ldv: lapack_int;                        q: ptr cdouble; ldq: lapack_int): lapack_int {.importc: "LAPACKE_dggsvp".}   
  proc cggsvp *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; p: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        tola: cfloat; tolb: cfloat; k: ptr lapack_int;                        l: ptr lapack_int; u: ptr lapack_complex_float;                          ldu: lapack_int; v: ptr lapack_complex_float;                          ldv: lapack_int; q: ptr lapack_complex_float;                          ldq: lapack_int): lapack_int {.importc: "LAPACKE_cggsvp".}   
  proc zggsvp *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; p: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        tola: cdouble; tolb: cdouble; k: ptr lapack_int;                        l: ptr lapack_int; u: ptr lapack_complex_double;                        ldu: lapack_int; v: ptr lapack_complex_double;                        ldv: lapack_int; q: ptr lapack_complex_double;                        ldq: lapack_int): lapack_int {.importc: "LAPACKE_zggsvp".}   
  proc sgtcon *(norm: char; n: lapack_int; dl: ptr cfloat; d: ptr cfloat;                          du: ptr cfloat; du2: ptr cfloat; ipiv: ptr lapack_int;                        anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_sgtcon".}   
  proc dgtcon *(norm: char; n: lapack_int; dl: ptr cdouble;                          d: ptr cdouble; du: ptr cdouble; du2: ptr cdouble;                          ipiv: ptr lapack_int; anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dgtcon".}   
  proc cgtcon *(norm: char; n: lapack_int; dl: ptr lapack_complex_float;                          d: ptr lapack_complex_float;                          du: ptr lapack_complex_float;                          du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                        anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_cgtcon".}   
  proc zgtcon *(norm: char; n: lapack_int; dl: ptr lapack_complex_double;                        d: ptr lapack_complex_double;                        du: ptr lapack_complex_double;                        du2: ptr lapack_complex_double; ipiv: ptr lapack_int;                        anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zgtcon".}   
  proc sgtrfs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; dl: ptr cfloat; d: ptr cfloat;                          du: ptr cfloat; dlf: ptr cfloat; df: ptr cfloat;                          duf: ptr cfloat; du2: ptr cfloat; ipiv: ptr lapack_int;                        b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                          ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_sgtrfs".}   
  proc dgtrfs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; dl: ptr cdouble; d: ptr cdouble;                          du: ptr cdouble; dlf: ptr cdouble; df: ptr cdouble;                          duf: ptr cdouble; du2: ptr cdouble; ipiv: ptr lapack_int;                        b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                          ldx: lapack_int; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dgtrfs".}   
  proc cgtrfs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; dl: ptr lapack_complex_float;                          d: ptr lapack_complex_float;                          du: ptr lapack_complex_float;                          dlf: ptr lapack_complex_float;                          df: ptr lapack_complex_float;                          duf: ptr lapack_complex_float;                          du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cgtrfs".}   
  proc zgtrfs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; dl: ptr lapack_complex_double;                        d: ptr lapack_complex_double;                        du: ptr lapack_complex_double;                        dlf: ptr lapack_complex_double;                        df: ptr lapack_complex_double;                        duf: ptr lapack_complex_double;                        du2: ptr lapack_complex_double; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zgtrfs".}   
  proc sgtsv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       dl: ptr cfloat; d: ptr cfloat; du: ptr cfloat;                         b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgtsv".}   
  proc dgtsv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       dl: ptr cdouble; d: ptr cdouble; du: ptr cdouble;                         b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgtsv".}   
  proc cgtsv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       dl: ptr lapack_complex_float; d: ptr lapack_complex_float;                         du: ptr lapack_complex_float; b: ptr lapack_complex_float;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgtsv".}   
  proc zgtsv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       dl: ptr lapack_complex_double;                       d: ptr lapack_complex_double;                       du: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgtsv".}   
  proc sgtsvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; nrhs: lapack_int; dl: ptr cfloat;                          d: ptr cfloat; du: ptr cfloat; dlf: ptr cfloat;                          df: ptr cfloat; duf: ptr cfloat; du2: ptr cfloat;                          ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int;                        x: ptr cfloat; ldx: lapack_int; rcond: ptr cfloat;                          ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_sgtsvx".}   
  proc dgtsvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; nrhs: lapack_int; dl: ptr cdouble;                          d: ptr cdouble; du: ptr cdouble; dlf: ptr cdouble;                          df: ptr cdouble; duf: ptr cdouble; du2: ptr cdouble;                          ipiv: ptr lapack_int; b: ptr cdouble; ldb: lapack_int;                        x: ptr cdouble; ldx: lapack_int; rcond: ptr cdouble;                          ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dgtsvx".}   
  proc cgtsvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; nrhs: lapack_int;                        dl: ptr lapack_complex_float;                          d: ptr lapack_complex_float;                          du: ptr lapack_complex_float;                          dlf: ptr lapack_complex_float;                          df: ptr lapack_complex_float;                          duf: ptr lapack_complex_float;                          du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cgtsvx".}   
  proc zgtsvx *(matrix_order: cint; fact: char; trans: char;                           n: lapack_int; nrhs: lapack_int;                        dl: ptr lapack_complex_double;                        d: ptr lapack_complex_double;                        du: ptr lapack_complex_double;                        dlf: ptr lapack_complex_double;                        df: ptr lapack_complex_double;                        duf: ptr lapack_complex_double;                        du2: ptr lapack_complex_double; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zgtsvx".}   
  proc sgttrf *(n: lapack_int; dl: ptr cfloat; d: ptr cfloat;                          du: ptr cfloat; du2: ptr cfloat; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgttrf".}   
  proc dgttrf *(n: lapack_int; dl: ptr cdouble; d: ptr cdouble;                          du: ptr cdouble; du2: ptr cdouble; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgttrf".}   
  proc cgttrf *(n: lapack_int; dl: ptr lapack_complex_float;                          d: ptr lapack_complex_float;                          du: ptr lapack_complex_float;                          du2: ptr lapack_complex_float; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgttrf".}   
  proc zgttrf *(n: lapack_int; dl: ptr lapack_complex_double;                        d: ptr lapack_complex_double;                        du: ptr lapack_complex_double;                        du2: ptr lapack_complex_double; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgttrf".}   
  proc sgttrs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; dl: ptr cfloat; d: ptr cfloat;                          du: ptr cfloat; du2: ptr cfloat; ipiv: ptr lapack_int;                        b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgttrs".}   
  proc dgttrs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; dl: ptr cdouble; d: ptr cdouble;                          du: ptr cdouble; du2: ptr cdouble; ipiv: ptr lapack_int;                        b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgttrs".}   
  proc cgttrs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; dl: ptr lapack_complex_float;                          d: ptr lapack_complex_float;                          du: ptr lapack_complex_float;                          du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgttrs".}   
  proc zgttrs *(matrix_order: cint; trans: char; n: lapack_int;                        nrhs: lapack_int; dl: ptr lapack_complex_double;                        d: ptr lapack_complex_double;                        du: ptr lapack_complex_double;                        du2: ptr lapack_complex_double; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgttrs".}   
  proc chbev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       kd: lapack_int; ab: ptr lapack_complex_float;                         ldab: lapack_int; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: lapack_int): lapack_int {.importc: "LAPACKE_chbev".}   
  proc zhbev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       kd: lapack_int; ab: ptr lapack_complex_double;                       ldab: lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zhbev".}   
  proc chbevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; kd: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        w: ptr cfloat; z: ptr lapack_complex_float;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_chbevd".}   
  proc zhbevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; kd: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        w: ptr cdouble; z: ptr lapack_complex_double;                        ldz: lapack_int): lapack_int {.importc: "LAPACKE_zhbevd".}   
  proc chbevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; kd: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        q: ptr lapack_complex_float; ldq: lapack_int; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_chbevx".}   
  proc zhbevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; kd: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        q: ptr lapack_complex_double; ldq: lapack_int;                        vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhbevx".}   
  proc chbgst *(matrix_order: cint; vect: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        bb: ptr lapack_complex_float; ldbb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int): lapack_int {.importc: "LAPACKE_chbgst".}   
  proc zhbgst *(matrix_order: cint; vect: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        bb: ptr lapack_complex_double; ldbb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int): lapack_int {.importc: "LAPACKE_zhbgst".}   
  proc chbgv *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       ka: lapack_int; kb: lapack_int;                       ab: ptr lapack_complex_float; ldab: lapack_int;                       bb: ptr lapack_complex_float; ldbb: lapack_int;                       w: ptr cfloat; z: ptr lapack_complex_float;                         ldz: lapack_int): lapack_int {.importc: "LAPACKE_chbgv".}   
  proc zhbgv *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       ka: lapack_int; kb: lapack_int;                       ab: ptr lapack_complex_double; ldab: lapack_int;                       bb: ptr lapack_complex_double; ldbb: lapack_int;                       w: ptr cdouble; z: ptr lapack_complex_double;                       ldz: lapack_int): lapack_int {.importc: "LAPACKE_zhbgv".}   
  proc chbgvd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        bb: ptr lapack_complex_float; ldbb: lapack_int;                        w: ptr cfloat; z: ptr lapack_complex_float;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_chbgvd".}   
  proc zhbgvd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        bb: ptr lapack_complex_double; ldbb: lapack_int;                        w: ptr cdouble; z: ptr lapack_complex_double;                        ldz: lapack_int): lapack_int {.importc: "LAPACKE_zhbgvd".}   
  proc chbgvx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        bb: ptr lapack_complex_float; ldbb: lapack_int;                        q: ptr lapack_complex_float; ldq: lapack_int; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_chbgvx".}   
  proc zhbgvx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        bb: ptr lapack_complex_double; ldbb: lapack_int;                        q: ptr lapack_complex_double; ldq: lapack_int;                        vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhbgvx".}   
  proc chbtrd *(matrix_order: cint; vect: char; uplo: char;                           n: lapack_int; kd: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        d: ptr cfloat; e: ptr cfloat;                          q: ptr lapack_complex_float; ldq: lapack_int): lapack_int {.importc: "LAPACKE_chbtrd".}   
  proc zhbtrd *(matrix_order: cint; vect: char; uplo: char;                           n: lapack_int; kd: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        d: ptr cdouble; e: ptr cdouble;                          q: ptr lapack_complex_double; ldq: lapack_int): lapack_int {.importc: "LAPACKE_zhbtrd".}   
  proc checon *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ipiv: ptr lapack_int; anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_checon".}   
  proc zhecon *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ipiv: ptr lapack_int; anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zhecon".}   
  proc cheequb *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cheequb".}   
  proc zheequb *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zheequb".}   
  proc cheev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       a: ptr lapack_complex_float; lda: lapack_int;                       w: ptr cfloat): lapack_int {.importc: "LAPACKE_cheev".}   
  proc zheev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       a: ptr lapack_complex_double; lda: lapack_int;                       w: ptr cdouble): lapack_int {.importc: "LAPACKE_zheev".}   
  proc cheevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; w: ptr cfloat): lapack_int {.importc: "LAPACKE_cheevd".}   
  proc zheevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; w: ptr cdouble): lapack_int {.importc: "LAPACKE_zheevd".}   
  proc cheevr *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; vl: cfloat; vu: cfloat; il: lapack_int;                        iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                        w: ptr cfloat; z: ptr lapack_complex_float;                          ldz: lapack_int; isuppz: ptr lapack_int): lapack_int {.importc: "LAPACKE_cheevr".}   
  proc zheevr *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; vl: cdouble; vu: cdouble;                          il: lapack_int; iu: lapack_int; abstol: cdouble;                          m: ptr lapack_int; w: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int;                        isuppz: ptr lapack_int): lapack_int {.importc: "LAPACKE_zheevr".}   
  proc cheevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; vl: cfloat; vu: cfloat; il: lapack_int;                        iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                        w: ptr cfloat; z: ptr lapack_complex_float;                          ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_cheevx".}   
  proc zheevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; vl: cdouble; vu: cdouble;                          il: lapack_int; iu: lapack_int; abstol: cdouble;                          m: ptr lapack_int; w: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zheevx".}   
  proc chegst *(matrix_order: cint; itype: lapack_int; uplo: char;                           n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_chegst".}   
  proc zhegst *(matrix_order: cint; itype: lapack_int; uplo: char;                           n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int): lapack_int {.importc: "LAPACKE_zhegst".}   
  proc chegv *(matrix_order: cint; itype: lapack_int; jobz: char;                          uplo: char; n: lapack_int; a: ptr lapack_complex_float;                         lda: lapack_int; b: ptr lapack_complex_float;                         ldb: lapack_int; w: ptr cfloat): lapack_int {.importc: "LAPACKE_chegv".}   
  proc zhegv *(matrix_order: cint; itype: lapack_int; jobz: char;                          uplo: char; n: lapack_int; a: ptr lapack_complex_double;                       lda: lapack_int; b: ptr lapack_complex_double;                       ldb: lapack_int; w: ptr cdouble): lapack_int {.importc: "LAPACKE_zhegv".}   
  proc chegvd *(matrix_order: cint; itype: lapack_int; jobz: char;                           uplo: char; n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; w: ptr cfloat): lapack_int {.importc: "LAPACKE_chegvd".}   
  proc zhegvd *(matrix_order: cint; itype: lapack_int; jobz: char;                           uplo: char; n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; w: ptr cdouble): lapack_int {.importc: "LAPACKE_zhegvd".}   
  proc chegvx *(matrix_order: cint; itype: lapack_int; jobz: char;                           range: char; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_chegvx".}   
  proc zhegvx *(matrix_order: cint; itype: lapack_int; jobz: char;                           range: char; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhegvx".}   
  proc cherfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; af: ptr lapack_complex_float;                          ldaf: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cherfs".}   
  proc zherfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; af: ptr lapack_complex_double;                        ldaf: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zherfs".}   
  proc cherfsx *(matrix_order: cint; uplo: char; equed: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         af: ptr lapack_complex_float; ldaf: lapack_int;                         ipiv: ptr lapack_int; s: ptr cfloat;                           b: ptr lapack_complex_float; ldb: lapack_int;                         x: ptr lapack_complex_float; ldx: lapack_int;                         rcond: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_cherfsx".}   
  proc zherfsx *(matrix_order: cint; uplo: char; equed: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         af: ptr lapack_complex_double; ldaf: lapack_int;                         ipiv: ptr lapack_int; s: ptr cdouble;                           b: ptr lapack_complex_double; ldb: lapack_int;                         x: ptr lapack_complex_double; ldx: lapack_int;                         rcond: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_zherfsx".}   
  proc chesv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; a: ptr lapack_complex_float;                         lda: lapack_int; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_chesv".}   
  proc zhesv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; a: ptr lapack_complex_double;                       lda: lapack_int; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zhesv".}   
  proc chesvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        af: ptr lapack_complex_float; ldaf: lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; x: ptr lapack_complex_float;                          ldx: lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                          berr: ptr cfloat): lapack_int {.importc: "LAPACKE_chesvx".}   
  proc zhesvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        af: ptr lapack_complex_double; ldaf: lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; x: ptr lapack_complex_double;                        ldx: lapack_int; rcond: ptr cdouble; ferr: ptr cdouble;                          berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zhesvx".}   
  proc chesvxx *(matrix_order: cint; fact: char; uplo: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         af: ptr lapack_complex_float; ldaf: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; s: ptr cfloat;                           b: ptr lapack_complex_float; ldb: lapack_int;                         x: ptr lapack_complex_float; ldx: lapack_int;                         rcond: ptr cfloat; rpvgrw: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_chesvxx".}   
  proc zhesvxx *(matrix_order: cint; fact: char; uplo: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         af: ptr lapack_complex_double; ldaf: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; s: ptr cdouble;                           b: ptr lapack_complex_double; ldb: lapack_int;                         x: ptr lapack_complex_double; ldx: lapack_int;                         rcond: ptr cdouble; rpvgrw: ptr cdouble;                           berr: ptr cdouble; n_err_bnds: lapack_int;                         err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                           nparams: lapack_int; params: ptr cdouble): lapack_int {.importc: "LAPACKE_zhesvxx".}   
  proc chetrd *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        d: ptr cfloat; e: ptr cfloat;                          tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chetrd".}   
  proc zhetrd *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        d: ptr cdouble; e: ptr cdouble;                          tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhetrd".}   
  proc chetrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_chetrf".}   
  proc zhetrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhetrf".}   
  proc chetri *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_chetri".}   
  proc zhetri *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhetri".}   
  proc chetrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_chetrs".}   
  proc zhetrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zhetrs".}   
  proc chfrk *(matrix_order: cint; transr: char; uplo: char; trans: char;                          n: lapack_int; k: lapack_int; alpha: cfloat;                         a: ptr lapack_complex_float; lda: lapack_int;                       beta: cfloat; c: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chfrk".}   
  proc zhfrk *(matrix_order: cint; transr: char; uplo: char; trans: char;                          n: lapack_int; k: lapack_int; alpha: cdouble;                         a: ptr lapack_complex_double; lda: lapack_int;                       beta: cdouble; c: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhfrk".}   
  proc shgeqz *(matrix_order: cint; job: char; compq: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        h: ptr cfloat; ldh: lapack_int; t: ptr cfloat;                          ldt: lapack_int; alphar: ptr cfloat; alphai: ptr cfloat;                          beta: ptr cfloat; q: ptr cfloat; ldq: lapack_int;                        z: ptr cfloat; ldz: lapack_int): lapack_int {.importc: "LAPACKE_shgeqz".}   
  proc dhgeqz *(matrix_order: cint; job: char; compq: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        h: ptr cdouble; ldh: lapack_int; t: ptr cdouble;                          ldt: lapack_int; alphar: ptr cdouble;                          alphai: ptr cdouble; beta: ptr cdouble; q: ptr cdouble;                          ldq: lapack_int; z: ptr cdouble; ldz: lapack_int): lapack_int {.importc: "LAPACKE_dhgeqz".}   
  proc chgeqz *(matrix_order: cint; job: char; compq: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        h: ptr lapack_complex_float; ldh: lapack_int;                        t: ptr lapack_complex_float; ldt: lapack_int;                        alpha: ptr lapack_complex_float;                          beta: ptr lapack_complex_float;                          q: ptr lapack_complex_float; ldq: lapack_int;                        z: ptr lapack_complex_float; ldz: lapack_int): lapack_int {.importc: "LAPACKE_chgeqz".}   
  proc zhgeqz *(matrix_order: cint; job: char; compq: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        h: ptr lapack_complex_double; ldh: lapack_int;                        t: ptr lapack_complex_double; ldt: lapack_int;                        alpha: ptr lapack_complex_double;                        beta: ptr lapack_complex_double;                        q: ptr lapack_complex_double; ldq: lapack_int;                        z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zhgeqz".}   
  proc chpcon *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                        anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_chpcon".}   
  proc zhpcon *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                        anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zhpcon".}   
  proc chpev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       ap: ptr lapack_complex_float; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: lapack_int): lapack_int {.importc: "LAPACKE_chpev".}   
  proc zhpev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       ap: ptr lapack_complex_double; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zhpev".}   
  proc chpevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; ap: ptr lapack_complex_float;                          w: ptr cfloat; z: ptr lapack_complex_float;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_chpevd".}   
  proc zhpevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; ap: ptr lapack_complex_double;                        w: ptr cdouble; z: ptr lapack_complex_double;                        ldz: lapack_int): lapack_int {.importc: "LAPACKE_zhpevd".}   
  proc chpevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; ap: ptr lapack_complex_float; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_chpevx".}   
  proc zhpevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; ap: ptr lapack_complex_double;                        vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhpevx".}   
  proc chpgst *(matrix_order: cint; itype: lapack_int; uplo: char;                           n: lapack_int; ap: ptr lapack_complex_float;                          bp: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chpgst".}   
  proc zhpgst *(matrix_order: cint; itype: lapack_int; uplo: char;                           n: lapack_int; ap: ptr lapack_complex_double;                        bp: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhpgst".}   
  proc chpgv *(matrix_order: cint; itype: lapack_int; jobz: char;                          uplo: char; n: lapack_int; ap: ptr lapack_complex_float;                         bp: ptr lapack_complex_float; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: lapack_int): lapack_int {.importc: "LAPACKE_chpgv".}   
  proc zhpgv *(matrix_order: cint; itype: lapack_int; jobz: char;                          uplo: char; n: lapack_int; ap: ptr lapack_complex_double;                       bp: ptr lapack_complex_double; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zhpgv".}   
  proc chpgvd *(matrix_order: cint; itype: lapack_int; jobz: char;                           uplo: char; n: lapack_int; ap: ptr lapack_complex_float;                          bp: ptr lapack_complex_float; w: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int): lapack_int {.importc: "LAPACKE_chpgvd".}   
  proc zhpgvd *(matrix_order: cint; itype: lapack_int; jobz: char;                           uplo: char; n: lapack_int; ap: ptr lapack_complex_double;                        bp: ptr lapack_complex_double; w: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zhpgvd".}   
  proc chpgvx *(matrix_order: cint; itype: lapack_int; jobz: char;                           range: char; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float;                          bp: ptr lapack_complex_float; vl: cfloat; vu: cfloat;                          il: lapack_int; iu: lapack_int; abstol: cfloat;                          m: ptr lapack_int; w: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_chpgvx".}   
  proc zhpgvx *(matrix_order: cint; itype: lapack_int; jobz: char;                           range: char; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double;                        bp: ptr lapack_complex_double; vl: cdouble; vu: cdouble;                          il: lapack_int; iu: lapack_int; abstol: cdouble;                          m: ptr lapack_int; w: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhpgvx".}   
  proc chprfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_float;                          afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_chprfs".}   
  proc zhprfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_double;                        afp: ptr lapack_complex_double; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zhprfs".}   
  proc chpsv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; ap: ptr lapack_complex_float;                         ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_chpsv".}   
  proc zhpsv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; ap: ptr lapack_complex_double;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: lapack_int): lapack_int {.importc: "LAPACKE_zhpsv".}   
  proc chpsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        ap: ptr lapack_complex_float;                          afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_chpsvx".}   
  proc zhpsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        ap: ptr lapack_complex_double;                        afp: ptr lapack_complex_double; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zhpsvx".}   
  proc chptrd *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float; d: ptr cfloat;                          e: ptr cfloat; tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chptrd".}   
  proc zhptrd *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double; d: ptr cdouble;                          e: ptr cdouble; tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhptrd".}   
  proc chptrf *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_chptrf".}   
  proc zhptrf *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhptrf".}   
  proc chptri *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_chptri".}   
  proc zhptri *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhptri".}   
  proc chptrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_float;                          ipiv: ptr lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_chptrs".}   
  proc zhptrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_double;                        ipiv: ptr lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int): lapack_int {.importc: "LAPACKE_zhptrs".}   
  proc shsein *(matrix_order: cint; job: char; eigsrc: char; initv: char;                           select: ptr lapack_logical; n: lapack_int; h: ptr cfloat;                          ldh: lapack_int; wr: ptr cfloat; wi: ptr cfloat;                          vl: ptr cfloat; ldvl: lapack_int; vr: ptr cfloat;                          ldvr: lapack_int; mm: lapack_int; m: ptr lapack_int;                        ifaill: ptr lapack_int; ifailr: ptr lapack_int): lapack_int {.importc: "LAPACKE_shsein".}   
  proc dhsein *(matrix_order: cint; job: char; eigsrc: char; initv: char;                           select: ptr lapack_logical; n: lapack_int;                        h: ptr cdouble; ldh: lapack_int; wr: ptr cdouble;                          wi: ptr cdouble; vl: ptr cdouble; ldvl: lapack_int;                        vr: ptr cdouble; ldvr: lapack_int; mm: lapack_int;                        m: ptr lapack_int; ifaill: ptr lapack_int;                        ifailr: ptr lapack_int): lapack_int {.importc: "LAPACKE_dhsein".}   
  proc chsein *(matrix_order: cint; job: char; eigsrc: char; initv: char;                           select: ptr lapack_logical; n: lapack_int;                        h: ptr lapack_complex_float; ldh: lapack_int;                        w: ptr lapack_complex_float;                          vl: ptr lapack_complex_float; ldvl: lapack_int;                        vr: ptr lapack_complex_float; ldvr: lapack_int;                        mm: lapack_int; m: ptr lapack_int;                        ifaill: ptr lapack_int; ifailr: ptr lapack_int): lapack_int {.importc: "LAPACKE_chsein".}   
  proc zhsein *(matrix_order: cint; job: char; eigsrc: char; initv: char;                           select: ptr lapack_logical; n: lapack_int;                        h: ptr lapack_complex_double; ldh: lapack_int;                        w: ptr lapack_complex_double;                        vl: ptr lapack_complex_double; ldvl: lapack_int;                        vr: ptr lapack_complex_double; ldvr: lapack_int;                        mm: lapack_int; m: ptr lapack_int;                        ifaill: ptr lapack_int; ifailr: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhsein".}   
  proc shseqr *(matrix_order: cint; job: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        h: ptr cfloat; ldh: lapack_int; wr: ptr cfloat;                          wi: ptr cfloat; z: ptr cfloat; ldz: lapack_int): lapack_int {.importc: "LAPACKE_shseqr".}   
  proc dhseqr *(matrix_order: cint; job: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        h: ptr cdouble; ldh: lapack_int; wr: ptr cdouble;                          wi: ptr cdouble; z: ptr cdouble; ldz: lapack_int): lapack_int {.importc: "LAPACKE_dhseqr".}   
  proc chseqr *(matrix_order: cint; job: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        h: ptr lapack_complex_float; ldh: lapack_int;                        w: ptr lapack_complex_float; z: ptr lapack_complex_float;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_chseqr".}   
  proc zhseqr *(matrix_order: cint; job: char; compz: char;                           n: lapack_int; ilo: lapack_int; ihi: lapack_int;                        h: ptr lapack_complex_double; ldh: lapack_int;                        w: ptr lapack_complex_double;                        z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zhseqr".}   
  proc clacgv *(n: lapack_int; x: ptr lapack_complex_float;                          incx: lapack_int): lapack_int {.importc: "LAPACKE_clacgv".}   
  proc zlacgv *(n: lapack_int; x: ptr lapack_complex_double;                        incx: lapack_int): lapack_int {.importc: "LAPACKE_zlacgv".}   
  proc slacpy *(matrix_order: cint; uplo: char; m: lapack_int;                        n: lapack_int; a: ptr cfloat; lda: lapack_int;                        b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_slacpy".}   
  proc dlacpy *(matrix_order: cint; uplo: char; m: lapack_int;                        n: lapack_int; a: ptr cdouble; lda: lapack_int;                        b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dlacpy".}   
  proc clacpy *(matrix_order: cint; uplo: char; m: lapack_int;                        n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_clacpy".}   
  proc zlacpy *(matrix_order: cint; uplo: char; m: lapack_int;                        n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int): lapack_int {.importc: "LAPACKE_zlacpy".}   
  proc zlag2c *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        sa: ptr lapack_complex_float; ldsa: lapack_int): lapack_int {.importc: "LAPACKE_zlag2c".}   
  proc slag2d *(matrix_order: cint; m: lapack_int; n: lapack_int;                        sa: ptr cfloat; ldsa: lapack_int; a: ptr cdouble;                          lda: lapack_int): lapack_int {.importc: "LAPACKE_slag2d".}   
  proc dlag2s *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; sa: ptr cfloat;                          ldsa: lapack_int): lapack_int {.importc: "LAPACKE_dlag2s".}   
  proc clag2z *(matrix_order: cint; m: lapack_int; n: lapack_int;                        sa: ptr lapack_complex_float; ldsa: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_clag2z".}   
  proc slagge *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int; d: ptr cfloat;                          a: ptr cfloat; lda: lapack_int; iseed: ptr lapack_int): lapack_int {.importc: "LAPACKE_slagge".}   
  proc dlagge *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int; d: ptr cdouble;                          a: ptr cdouble; lda: lapack_int; iseed: ptr lapack_int): lapack_int {.importc: "LAPACKE_dlagge".}   
  proc clagge *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int; d: ptr cfloat;                          a: ptr lapack_complex_float; lda: lapack_int;                        iseed: ptr lapack_int): lapack_int {.importc: "LAPACKE_clagge".}   
  proc zlagge *(matrix_order: cint; m: lapack_int; n: lapack_int;                        kl: lapack_int; ku: lapack_int; d: ptr cdouble;                          a: ptr lapack_complex_double; lda: lapack_int;                        iseed: ptr lapack_int): lapack_int {.importc: "LAPACKE_zlagge".}   
  proc slamch *(cmach: char): cfloat {.importc: "LAPACKE_slamch".}   
  proc dlamch *(cmach: char): cdouble {.importc: "LAPACKE_dlamch".}   
  proc slange *(matrix_order: cint; norm: char; m: lapack_int;                        n: lapack_int; a: ptr cfloat; lda: lapack_int): cfloat {.importc: "LAPACKE_slange".}   
  proc dlange *(matrix_order: cint; norm: char; m: lapack_int;                        n: lapack_int; a: ptr cdouble; lda: lapack_int): cdouble {.importc: "LAPACKE_dlange".}   
  proc clange *(matrix_order: cint; norm: char; m: lapack_int;                        n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int): cfloat {.importc: "LAPACKE_clange".}   
  proc zlange *(matrix_order: cint; norm: char; m: lapack_int;                        n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int): cdouble {.importc: "LAPACKE_zlange".}   
  proc clanhe *(matrix_order: cint; norm: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int): cfloat {.importc: "LAPACKE_clanhe".}   
  proc zlanhe *(matrix_order: cint; norm: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int): cdouble {.importc: "LAPACKE_zlanhe".}   
  proc slansy *(matrix_order: cint; norm: char; uplo: char;                           n: lapack_int; a: ptr cfloat; lda: lapack_int): cfloat {.importc: "LAPACKE_slansy".}   
  proc dlansy *(matrix_order: cint; norm: char; uplo: char;                           n: lapack_int; a: ptr cdouble; lda: lapack_int): cdouble {.importc: "LAPACKE_dlansy".}   
  proc clansy *(matrix_order: cint; norm: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int): cfloat {.importc: "LAPACKE_clansy".}   
  proc zlansy *(matrix_order: cint; norm: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int): cdouble {.importc: "LAPACKE_zlansy".}   
  proc slantr *(matrix_order: cint; norm: char; uplo: char; diag: char;                           m: lapack_int; n: lapack_int; a: ptr cfloat;                          lda: lapack_int): cfloat {.importc: "LAPACKE_slantr".}   
  proc dlantr *(matrix_order: cint; norm: char; uplo: char; diag: char;                           m: lapack_int; n: lapack_int; a: ptr cdouble;                          lda: lapack_int): cdouble {.importc: "LAPACKE_dlantr".}   
  proc clantr *(matrix_order: cint; norm: char; uplo: char; diag: char;                           m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int): cfloat {.importc: "LAPACKE_clantr".}   
  proc zlantr *(matrix_order: cint; norm: char; uplo: char; diag: char;                           m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int): cdouble {.importc: "LAPACKE_zlantr".}   
  proc slarfb *(matrix_order: cint; side: char; trans: char;                           direct: char; storev: char; m: lapack_int; n: lapack_int;                        k: lapack_int; v: ptr cfloat; ldv: lapack_int;                        t: ptr cfloat; ldt: lapack_int; c: ptr cfloat;                          ldc: lapack_int): lapack_int {.importc: "LAPACKE_slarfb".}   
  proc dlarfb *(matrix_order: cint; side: char; trans: char;                           direct: char; storev: char; m: lapack_int; n: lapack_int;                        k: lapack_int; v: ptr cdouble; ldv: lapack_int;                        t: ptr cdouble; ldt: lapack_int; c: ptr cdouble;                          ldc: lapack_int): lapack_int {.importc: "LAPACKE_dlarfb".}   
  proc clarfb *(matrix_order: cint; side: char; trans: char;                           direct: char; storev: char; m: lapack_int; n: lapack_int;                        k: lapack_int; v: ptr lapack_complex_float;                          ldv: lapack_int; t: ptr lapack_complex_float;                          ldt: lapack_int; c: ptr lapack_complex_float;                          ldc: lapack_int): lapack_int {.importc: "LAPACKE_clarfb".}   
  proc zlarfb *(matrix_order: cint; side: char; trans: char;                           direct: char; storev: char; m: lapack_int; n: lapack_int;                        k: lapack_int; v: ptr lapack_complex_double;                        ldv: lapack_int; t: ptr lapack_complex_double;                        ldt: lapack_int; c: ptr lapack_complex_double;                        ldc: lapack_int): lapack_int {.importc: "LAPACKE_zlarfb".}   
  proc slarfg *(n: lapack_int; alpha: ptr cfloat; x: ptr cfloat;                          incx: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_slarfg".}   
  proc dlarfg *(n: lapack_int; alpha: ptr cdouble; x: ptr cdouble;                          incx: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dlarfg".}   
  proc clarfg *(n: lapack_int; alpha: ptr lapack_complex_float;                          x: ptr lapack_complex_float; incx: lapack_int;                        tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_clarfg".}   
  proc zlarfg *(n: lapack_int; alpha: ptr lapack_complex_double;                        x: ptr lapack_complex_double; incx: lapack_int;                        tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zlarfg".}   
  proc slarft *(matrix_order: cint; direct: char; storev: char;                           n: lapack_int; k: lapack_int; v: ptr cfloat;                          ldv: lapack_int; tau: ptr cfloat; t: ptr cfloat;                          ldt: lapack_int): lapack_int {.importc: "LAPACKE_slarft".}   
  proc dlarft *(matrix_order: cint; direct: char; storev: char;                           n: lapack_int; k: lapack_int; v: ptr cdouble;                          ldv: lapack_int; tau: ptr cdouble; t: ptr cdouble;                          ldt: lapack_int): lapack_int {.importc: "LAPACKE_dlarft".}   
  proc clarft *(matrix_order: cint; direct: char; storev: char;                           n: lapack_int; k: lapack_int;                        v: ptr lapack_complex_float; ldv: lapack_int;                        tau: ptr lapack_complex_float;                          t: ptr lapack_complex_float; ldt: lapack_int): lapack_int {.importc: "LAPACKE_clarft".}   
  proc zlarft *(matrix_order: cint; direct: char; storev: char;                           n: lapack_int; k: lapack_int;                        v: ptr lapack_complex_double; ldv: lapack_int;                        tau: ptr lapack_complex_double;                        t: ptr lapack_complex_double; ldt: lapack_int): lapack_int {.importc: "LAPACKE_zlarft".}   
  proc slarfx *(matrix_order: cint; side: char; m: lapack_int;                        n: lapack_int; v: ptr cfloat; tau: cfloat; c: ptr cfloat;                          ldc: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_slarfx".}   
  proc dlarfx *(matrix_order: cint; side: char; m: lapack_int;                        n: lapack_int; v: ptr cdouble; tau: cdouble;                          c: ptr cdouble; ldc: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dlarfx".}   
  proc clarfx *(matrix_order: cint; side: char; m: lapack_int;                        n: lapack_int; v: ptr lapack_complex_float;                          tau: lapack_complex_float; c: ptr lapack_complex_float;                          ldc: lapack_int; work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_clarfx".}   
  proc zlarfx *(matrix_order: cint; side: char; m: lapack_int;                        n: lapack_int; v: ptr lapack_complex_double;                        tau: lapack_complex_double; c: ptr lapack_complex_double;                        ldc: lapack_int; work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zlarfx".}   
  proc slarnv *(idist: lapack_int; iseed: ptr lapack_int; n: lapack_int;                        x: ptr cfloat): lapack_int {.importc: "LAPACKE_slarnv".}   
  proc dlarnv *(idist: lapack_int; iseed: ptr lapack_int; n: lapack_int;                        x: ptr cdouble): lapack_int {.importc: "LAPACKE_dlarnv".}   
  proc clarnv *(idist: lapack_int; iseed: ptr lapack_int; n: lapack_int;                        x: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_clarnv".}   
  proc zlarnv *(idist: lapack_int; iseed: ptr lapack_int; n: lapack_int;                        x: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zlarnv".}   
  proc slaset *(matrix_order: cint; uplo: char; m: lapack_int;                        n: lapack_int; alpha: cfloat; beta: cfloat;                          a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_slaset".}   
  proc dlaset *(matrix_order: cint; uplo: char; m: lapack_int;                        n: lapack_int; alpha: cdouble; beta: cdouble;                          a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dlaset".}   
  proc claset *(matrix_order: cint; uplo: char; m: lapack_int;                        n: lapack_int; alpha: lapack_complex_float;                          beta: lapack_complex_float; a: ptr lapack_complex_float;                          lda: lapack_int): lapack_int {.importc: "LAPACKE_claset".}   
  proc zlaset *(matrix_order: cint; uplo: char; m: lapack_int;                        n: lapack_int; alpha: lapack_complex_double;                        beta: lapack_complex_double;                        a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_zlaset".}   
  proc slasrt *(id: char; n: lapack_int; d: ptr cfloat): lapack_int {.importc: "LAPACKE_slasrt".}   
  proc dlasrt *(id: char; n: lapack_int; d: ptr cdouble): lapack_int {.importc: "LAPACKE_dlasrt".}   
  proc slaswp *(matrix_order: cint; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; k1: lapack_int; k2: lapack_int;                        ipiv: ptr lapack_int; incx: lapack_int): lapack_int {.importc: "LAPACKE_slaswp".}   
  proc dlaswp *(matrix_order: cint; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; k1: lapack_int; k2: lapack_int;                        ipiv: ptr lapack_int; incx: lapack_int): lapack_int {.importc: "LAPACKE_dlaswp".}   
  proc claswp *(matrix_order: cint; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        k1: lapack_int; k2: lapack_int; ipiv: ptr lapack_int;                        incx: lapack_int): lapack_int {.importc: "LAPACKE_claswp".}   
  proc zlaswp *(matrix_order: cint; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        k1: lapack_int; k2: lapack_int; ipiv: ptr lapack_int;                        incx: lapack_int): lapack_int {.importc: "LAPACKE_zlaswp".}   
  proc slatms *(matrix_order: cint; m: lapack_int; n: lapack_int;                        dist: char; iseed: ptr lapack_int; sym: char;                           d: ptr cfloat; mode: lapack_int; cond: cfloat;                          dmax: cfloat; kl: lapack_int; ku: lapack_int; pack: char;                           a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_slatms".}   
  proc dlatms *(matrix_order: cint; m: lapack_int; n: lapack_int;                        dist: char; iseed: ptr lapack_int; sym: char;                           d: ptr cdouble; mode: lapack_int; cond: cdouble;                          dmax: cdouble; kl: lapack_int; ku: lapack_int;                        pack: char; a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dlatms".}   
  proc clatms *(matrix_order: cint; m: lapack_int; n: lapack_int;                        dist: char; iseed: ptr lapack_int; sym: char;                           d: ptr cfloat; mode: lapack_int; cond: cfloat;                          dmax: cfloat; kl: lapack_int; ku: lapack_int; pack: char;                           a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_clatms".}   
  proc zlatms *(matrix_order: cint; m: lapack_int; n: lapack_int;                        dist: char; iseed: ptr lapack_int; sym: char;                           d: ptr cdouble; mode: lapack_int; cond: cdouble;                          dmax: cdouble; kl: lapack_int; ku: lapack_int;                        pack: char; a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_zlatms".}   
  proc slauum *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_slauum".}   
  proc dlauum *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dlauum".}   
  proc clauum *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_clauum".}   
  proc zlauum *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_zlauum".}   
  proc sopgtr *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cfloat; tau: ptr cfloat; q: ptr cfloat;                          ldq: lapack_int): lapack_int {.importc: "LAPACKE_sopgtr".}   
  proc dopgtr *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cdouble; tau: ptr cdouble; q: ptr cdouble;                          ldq: lapack_int): lapack_int {.importc: "LAPACKE_dopgtr".}   
  proc sopmtr *(matrix_order: cint; side: char; uplo: char; trans: char;                           m: lapack_int; n: lapack_int; ap: ptr cfloat;                          tau: ptr cfloat; c: ptr cfloat; ldc: lapack_int): lapack_int {.importc: "LAPACKE_sopmtr".}   
  proc dopmtr *(matrix_order: cint; side: char; uplo: char; trans: char;                           m: lapack_int; n: lapack_int; ap: ptr cdouble;                          tau: ptr cdouble; c: ptr cdouble; ldc: lapack_int): lapack_int {.importc: "LAPACKE_dopmtr".}   
  proc sorgbr *(matrix_order: cint; vect: char; m: lapack_int;                        n: lapack_int; k: lapack_int; a: ptr cfloat;                          lda: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sorgbr".}   
  proc dorgbr *(matrix_order: cint; vect: char; m: lapack_int;                        n: lapack_int; k: lapack_int; a: ptr cdouble;                          lda: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dorgbr".}   
  proc sorghr *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr cfloat; lda: lapack_int;                        tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sorghr".}   
  proc dorghr *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr cdouble; lda: lapack_int;                        tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dorghr".}   
  proc sorglq *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr cfloat; lda: lapack_int;                        tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sorglq".}   
  proc dorglq *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr cdouble; lda: lapack_int;                        tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dorglq".}   
  proc sorgql *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr cfloat; lda: lapack_int;                        tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sorgql".}   
  proc dorgql *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr cdouble; lda: lapack_int;                        tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dorgql".}   
  proc sorgqr *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr cfloat; lda: lapack_int;                        tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sorgqr".}   
  proc dorgqr *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr cdouble; lda: lapack_int;                        tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dorgqr".}   
  proc sorgrq *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr cfloat; lda: lapack_int;                        tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sorgrq".}   
  proc dorgrq *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr cdouble; lda: lapack_int;                        tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dorgrq".}   
  proc sorgtr *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_sorgtr".}   
  proc dorgtr *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dorgtr".}   
  proc sormbr *(matrix_order: cint; vect: char; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                          c: ptr cfloat; ldc: lapack_int): lapack_int {.importc: "LAPACKE_sormbr".}   
  proc dormbr *(matrix_order: cint; vect: char; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                          c: ptr cdouble; ldc: lapack_int): lapack_int {.importc: "LAPACKE_dormbr".}   
  proc sormhr *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr cfloat; lda: lapack_int;                        tau: ptr cfloat; c: ptr cfloat; ldc: lapack_int): lapack_int {.importc: "LAPACKE_sormhr".}   
  proc dormhr *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr cdouble; lda: lapack_int;                        tau: ptr cdouble; c: ptr cdouble; ldc: lapack_int): lapack_int {.importc: "LAPACKE_dormhr".}   
  proc sormlq *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                          c: ptr cfloat; ldc: lapack_int): lapack_int {.importc: "LAPACKE_sormlq".}   
  proc dormlq *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                          c: ptr cdouble; ldc: lapack_int): lapack_int {.importc: "LAPACKE_dormlq".}   
  proc sormql *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                          c: ptr cfloat; ldc: lapack_int): lapack_int {.importc: "LAPACKE_sormql".}   
  proc dormql *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                          c: ptr cdouble; ldc: lapack_int): lapack_int {.importc: "LAPACKE_dormql".}   
  proc sormqr *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                          c: ptr cfloat; ldc: lapack_int): lapack_int {.importc: "LAPACKE_sormqr".}   
  proc dormqr *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                          c: ptr cdouble; ldc: lapack_int): lapack_int {.importc: "LAPACKE_dormqr".}   
  proc sormrq *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                          c: ptr cfloat; ldc: lapack_int): lapack_int {.importc: "LAPACKE_sormrq".}   
  proc dormrq *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                          c: ptr cdouble; ldc: lapack_int): lapack_int {.importc: "LAPACKE_dormrq".}   
  proc sormrz *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        l: lapack_int; a: ptr cfloat; lda: lapack_int;                        tau: ptr cfloat; c: ptr cfloat; ldc: lapack_int): lapack_int {.importc: "LAPACKE_sormrz".}   
  proc dormrz *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        l: lapack_int; a: ptr cdouble; lda: lapack_int;                        tau: ptr cdouble; c: ptr cdouble; ldc: lapack_int): lapack_int {.importc: "LAPACKE_dormrz".}   
  proc sormtr *(matrix_order: cint; side: char; uplo: char; trans: char;                           m: lapack_int; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; tau: ptr cfloat; c: ptr cfloat;                          ldc: lapack_int): lapack_int {.importc: "LAPACKE_sormtr".}   
  proc dormtr *(matrix_order: cint; side: char; uplo: char; trans: char;                           m: lapack_int; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; tau: ptr cdouble; c: ptr cdouble;                          ldc: lapack_int): lapack_int {.importc: "LAPACKE_dormtr".}   
  proc spbcon *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr cfloat; ldab: lapack_int;                        anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_spbcon".}   
  proc dpbcon *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr cdouble; ldab: lapack_int;                        anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dpbcon".}   
  proc cpbcon *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr lapack_complex_float;                          ldab: lapack_int; anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_cpbcon".}   
  proc zpbcon *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr lapack_complex_double;                        ldab: lapack_int; anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zpbcon".}   
  proc spbequ *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr cfloat; ldab: lapack_int;                        s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_spbequ".}   
  proc dpbequ *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr cdouble; ldab: lapack_int;                        s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dpbequ".}   
  proc cpbequ *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr lapack_complex_float;                          ldab: lapack_int; s: ptr cfloat; scond: ptr cfloat;                          amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cpbequ".}   
  proc zpbequ *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr lapack_complex_double;                        ldab: lapack_int; s: ptr cdouble; scond: ptr cdouble;                          amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zpbequ".}   
  proc spbrfs *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; nrhs: lapack_int; ab: ptr cfloat;                          ldab: lapack_int; afb: ptr cfloat; ldafb: lapack_int;                        b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                          ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_spbrfs".}   
  proc dpbrfs *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; nrhs: lapack_int; ab: ptr cdouble;                          ldab: lapack_int; afb: ptr cdouble; ldafb: lapack_int;                        b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                          ldx: lapack_int; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dpbrfs".}   
  proc cpbrfs *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        afb: ptr lapack_complex_float; ldafb: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cpbrfs".}   
  proc zpbrfs *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        afb: ptr lapack_complex_double; ldafb: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zpbrfs".}   
  proc spbstf *(matrix_order: cint; uplo: char; n: lapack_int;                        kb: lapack_int; bb: ptr cfloat; ldbb: lapack_int): lapack_int {.importc: "LAPACKE_spbstf".}   
  proc dpbstf *(matrix_order: cint; uplo: char; n: lapack_int;                        kb: lapack_int; bb: ptr cdouble; ldbb: lapack_int): lapack_int {.importc: "LAPACKE_dpbstf".}   
  proc cpbstf *(matrix_order: cint; uplo: char; n: lapack_int;                        kb: lapack_int; bb: ptr lapack_complex_float;                          ldbb: lapack_int): lapack_int {.importc: "LAPACKE_cpbstf".}   
  proc zpbstf *(matrix_order: cint; uplo: char; n: lapack_int;                        kb: lapack_int; bb: ptr lapack_complex_double;                        ldbb: lapack_int): lapack_int {.importc: "LAPACKE_zpbstf".}   
  proc spbsv *(matrix_order: cint; uplo: char; n: lapack_int;                       kd: lapack_int; nrhs: lapack_int; ab: ptr cfloat;                         ldab: lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_spbsv".}   
  proc dpbsv *(matrix_order: cint; uplo: char; n: lapack_int;                       kd: lapack_int; nrhs: lapack_int; ab: ptr cdouble;                         ldab: lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpbsv".}   
  proc cpbsv *(matrix_order: cint; uplo: char; n: lapack_int;                       kd: lapack_int; nrhs: lapack_int;                       ab: ptr lapack_complex_float; ldab: lapack_int;                       b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpbsv".}   
  proc zpbsv *(matrix_order: cint; uplo: char; n: lapack_int;                       kd: lapack_int; nrhs: lapack_int;                       ab: ptr lapack_complex_double; ldab: lapack_int;                       b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpbsv".}   
  proc spbsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr cfloat; ldab: lapack_int; afb: ptr cfloat;                          ldafb: lapack_int; equed: cstring; s: ptr cfloat;                          b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                          ldx: lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                          berr: ptr cfloat): lapack_int {.importc: "LAPACKE_spbsvx".}   
  proc dpbsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr cdouble; ldab: lapack_int; afb: ptr cdouble;                          ldafb: lapack_int; equed: cstring; s: ptr cdouble;                          b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                          ldx: lapack_int; rcond: ptr cdouble; ferr: ptr cdouble;                          berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dpbsvx".}   
  proc cpbsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        afb: ptr lapack_complex_float; ldafb: lapack_int;                        equed: cstring; s: ptr cfloat;                          b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cpbsvx".}   
  proc zpbsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        afb: ptr lapack_complex_double; ldafb: lapack_int;                        equed: cstring; s: ptr cdouble;                          b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zpbsvx".}   
  proc spbtrf *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr cfloat; ldab: lapack_int): lapack_int {.importc: "LAPACKE_spbtrf".}   
  proc dpbtrf *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr cdouble; ldab: lapack_int): lapack_int {.importc: "LAPACKE_dpbtrf".}   
  proc cpbtrf *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr lapack_complex_float;                          ldab: lapack_int): lapack_int {.importc: "LAPACKE_cpbtrf".}   
  proc zpbtrf *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; ab: ptr lapack_complex_double;                        ldab: lapack_int): lapack_int {.importc: "LAPACKE_zpbtrf".}   
  proc spbtrs *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; nrhs: lapack_int; ab: ptr cfloat;                          ldab: lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_spbtrs".}   
  proc dpbtrs *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; nrhs: lapack_int; ab: ptr cdouble;                          ldab: lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpbtrs".}   
  proc cpbtrs *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpbtrs".}   
  proc zpbtrs *(matrix_order: cint; uplo: char; n: lapack_int;                        kd: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpbtrs".}   
  proc spftrf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr cfloat): lapack_int {.importc: "LAPACKE_spftrf".}   
  proc dpftrf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr cdouble): lapack_int {.importc: "LAPACKE_dpftrf".}   
  proc cpftrf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cpftrf".}   
  proc zpftrf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zpftrf".}   
  proc spftri *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr cfloat): lapack_int {.importc: "LAPACKE_spftri".}   
  proc dpftri *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr cdouble): lapack_int {.importc: "LAPACKE_dpftri".}   
  proc cpftri *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cpftri".}   
  proc zpftri *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zpftri".}   
  proc spftrs *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                          b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_spftrs".}   
  proc dpftrs *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                          b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpftrs".}   
  proc cpftrs *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_float; b: ptr lapack_complex_float;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpftrs".}   
  proc zpftrs *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_double;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpftrs".}   
  proc spocon *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; anorm: cfloat;                          rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_spocon".}   
  proc dpocon *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; anorm: cdouble;                          rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dpocon".}   
  proc cpocon *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_cpocon".}   
  proc zpocon *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zpocon".}   
  proc spoequ *(matrix_order: cint; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; s: ptr cfloat; scond: ptr cfloat;                          amax: ptr cfloat): lapack_int {.importc: "LAPACKE_spoequ".}   
  proc dpoequ *(matrix_order: cint; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; s: ptr cdouble; scond: ptr cdouble;                          amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dpoequ".}   
  proc cpoequ *(matrix_order: cint; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cpoequ".}   
  proc zpoequ *(matrix_order: cint; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zpoequ".}   
  proc spoequb *(matrix_order: cint; n: lapack_int; a: ptr cfloat;                           lda: lapack_int; s: ptr cfloat; scond: ptr cfloat;                           amax: ptr cfloat): lapack_int {.importc: "LAPACKE_spoequb".}   
  proc dpoequb *(matrix_order: cint; n: lapack_int; a: ptr cdouble;                           lda: lapack_int; s: ptr cdouble; scond: ptr cdouble;                           amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dpoequb".}   
  proc cpoequb *(matrix_order: cint; n: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cpoequb".}   
  proc zpoequb *(matrix_order: cint; n: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zpoequb".}   
  proc sporfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                        af: ptr cfloat; ldaf: lapack_int; b: ptr cfloat;                          ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_sporfs".}   
  proc dporfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                        af: ptr cdouble; ldaf: lapack_int; b: ptr cdouble;                          ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dporfs".}   
  proc cporfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; af: ptr lapack_complex_float;                          ldaf: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; x: ptr lapack_complex_float;                          ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cporfs".}   
  proc zporfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; af: ptr lapack_complex_double;                        ldaf: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; x: ptr lapack_complex_double;                        ldx: lapack_int; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zporfs".}   
  proc sporfsx *(matrix_order: cint; uplo: char; equed: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                           lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                         s: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                         x: ptr cfloat; ldx: lapack_int; rcond: ptr cfloat;                           berr: ptr cfloat; n_err_bnds: lapack_int;                         err_bnds_norm: ptr cfloat; err_bnds_comp: ptr cfloat;                           nparams: lapack_int; params: ptr cfloat): lapack_int {.importc: "LAPACKE_sporfsx".}   
  proc dporfsx *(matrix_order: cint; uplo: char; equed: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                           lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                         s: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                         x: ptr cdouble; ldx: lapack_int; rcond: ptr cdouble;                           berr: ptr cdouble; n_err_bnds: lapack_int;                         err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                           nparams: lapack_int; params: ptr cdouble): lapack_int {.importc: "LAPACKE_dporfsx".}   
  proc cporfsx *(matrix_order: cint; uplo: char; equed: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         af: ptr lapack_complex_float; ldaf: lapack_int;                         s: ptr cfloat; b: ptr lapack_complex_float;                           ldb: lapack_int; x: ptr lapack_complex_float;                           ldx: lapack_int; rcond: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_cporfsx".}   
  proc zporfsx *(matrix_order: cint; uplo: char; equed: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         af: ptr lapack_complex_double; ldaf: lapack_int;                         s: ptr cdouble; b: ptr lapack_complex_double;                         ldb: lapack_int; x: ptr lapack_complex_double;                         ldx: lapack_int; rcond: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_zporfsx".}   
  proc sposv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                       b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sposv".}   
  proc dposv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                       b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dposv".}   
  proc cposv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; a: ptr lapack_complex_float;                         lda: lapack_int; b: ptr lapack_complex_float;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_cposv".}   
  proc zposv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; a: ptr lapack_complex_double;                       lda: lapack_int; b: ptr lapack_complex_double;                       ldb: lapack_int): lapack_int {.importc: "LAPACKE_zposv".}   
  proc dsposv *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                        b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                          ldx: lapack_int; iter: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsposv".}   
  proc zcposv *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; x: ptr lapack_complex_double;                        ldx: lapack_int; iter: ptr lapack_int): lapack_int {.importc: "LAPACKE_zcposv".}   
  proc sposvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                          lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                        equed: cstring; s: ptr cfloat; b: ptr cfloat;                          ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                        rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_sposvx".}   
  proc dposvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                          lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                        equed: cstring; s: ptr cdouble; b: ptr cdouble;                          ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                        rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dposvx".}   
  proc cposvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        af: ptr lapack_complex_float; ldaf: lapack_int;                        equed: cstring; s: ptr cfloat;                          b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cposvx".}   
  proc zposvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        af: ptr lapack_complex_double; ldaf: lapack_int;                        equed: cstring; s: ptr cdouble;                          b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zposvx".}   
  proc sposvxx *(matrix_order: cint; fact: char; uplo: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                           lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                         equed: cstring; s: ptr cfloat; b: ptr cfloat;                           ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                         rcond: ptr cfloat; rpvgrw: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_sposvxx".}   
  proc dposvxx *(matrix_order: cint; fact: char; uplo: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                           lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                         equed: cstring; s: ptr cdouble; b: ptr cdouble;                           ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                         rcond: ptr cdouble; rpvgrw: ptr cdouble;                           berr: ptr cdouble; n_err_bnds: lapack_int;                         err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                           nparams: lapack_int; params: ptr cdouble): lapack_int {.importc: "LAPACKE_dposvxx".}   
  proc cposvxx *(matrix_order: cint; fact: char; uplo: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         af: ptr lapack_complex_float; ldaf: lapack_int;                         equed: cstring; s: ptr cfloat;                           b: ptr lapack_complex_float; ldb: lapack_int;                         x: ptr lapack_complex_float; ldx: lapack_int;                         rcond: ptr cfloat; rpvgrw: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_cposvxx".}   
  proc zposvxx *(matrix_order: cint; fact: char; uplo: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         af: ptr lapack_complex_double; ldaf: lapack_int;                         equed: cstring; s: ptr cdouble;                           b: ptr lapack_complex_double; ldb: lapack_int;                         x: ptr lapack_complex_double; ldx: lapack_int;                         rcond: ptr cdouble; rpvgrw: ptr cdouble;                           berr: ptr cdouble; n_err_bnds: lapack_int;                         err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                           nparams: lapack_int; params: ptr cdouble): lapack_int {.importc: "LAPACKE_zposvxx".}   
  proc spotrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_spotrf".}   
  proc dpotrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dpotrf".}   
  proc cpotrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_cpotrf".}   
  proc zpotrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_zpotrf".}   
  proc spotri *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_spotri".}   
  proc dpotri *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dpotri".}   
  proc cpotri *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_cpotri".}   
  proc zpotri *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_zpotri".}   
  proc spotrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                        b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_spotrs".}   
  proc dpotrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                        b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpotrs".}   
  proc cpotrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpotrs".}   
  proc zpotrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpotrs".}   
  proc sppcon *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cfloat; anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_sppcon".}   
  proc dppcon *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cdouble; anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dppcon".}   
  proc cppcon *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float; anorm: cfloat;                          rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_cppcon".}   
  proc zppcon *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double; anorm: cdouble;                          rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zppcon".}   
  proc sppequ *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cfloat; s: ptr cfloat; scond: ptr cfloat;                          amax: ptr cfloat): lapack_int {.importc: "LAPACKE_sppequ".}   
  proc dppequ *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cdouble; s: ptr cdouble; scond: ptr cdouble;                          amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dppequ".}   
  proc cppequ *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float; s: ptr cfloat;                          scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cppequ".}   
  proc zppequ *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double; s: ptr cdouble;                          scond: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zppequ".}   
  proc spprfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr cfloat; afp: ptr cfloat;                          b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                          ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_spprfs".}   
  proc dpprfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr cdouble; afp: ptr cdouble;                          b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                          ldx: lapack_int; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dpprfs".}   
  proc cpprfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_float;                          afp: ptr lapack_complex_float;                          b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cpprfs".}   
  proc zpprfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_double;                        afp: ptr lapack_complex_double;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zpprfs".}   
  proc sppsv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; ap: ptr cfloat; b: ptr cfloat;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_sppsv".}   
  proc dppsv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; ap: ptr cdouble; b: ptr cdouble;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_dppsv".}   
  proc cppsv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; ap: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cppsv".}   
  proc zppsv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; ap: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zppsv".}   
  proc sppsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int; ap: ptr cfloat;                          afp: ptr cfloat; equed: cstring; s: ptr cfloat;                          b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                          ldx: lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                          berr: ptr cfloat): lapack_int {.importc: "LAPACKE_sppsvx".}   
  proc dppsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int; ap: ptr cdouble;                          afp: ptr cdouble; equed: cstring; s: ptr cdouble;                          b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                          ldx: lapack_int; rcond: ptr cdouble; ferr: ptr cdouble;                          berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dppsvx".}   
  proc cppsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        ap: ptr lapack_complex_float;                          afp: ptr lapack_complex_float; equed: cstring;                         s: ptr cfloat; b: ptr lapack_complex_float;                          ldb: lapack_int; x: ptr lapack_complex_float;                          ldx: lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                          berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cppsvx".}   
  proc zppsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        ap: ptr lapack_complex_double;                        afp: ptr lapack_complex_double; equed: cstring;                         s: ptr cdouble; b: ptr lapack_complex_double;                        ldb: lapack_int; x: ptr lapack_complex_double;                        ldx: lapack_int; rcond: ptr cdouble; ferr: ptr cdouble;                          berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zppsvx".}   
  proc spptrf *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cfloat): lapack_int {.importc: "LAPACKE_spptrf".}   
  proc dpptrf *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cdouble): lapack_int {.importc: "LAPACKE_dpptrf".}   
  proc cpptrf *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cpptrf".}   
  proc zpptrf *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zpptrf".}   
  proc spptri *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cfloat): lapack_int {.importc: "LAPACKE_spptri".}   
  proc dpptri *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cdouble): lapack_int {.importc: "LAPACKE_dpptri".}   
  proc cpptri *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cpptri".}   
  proc zpptri *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zpptri".}   
  proc spptrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr cfloat; b: ptr cfloat;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_spptrs".}   
  proc dpptrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr cdouble; b: ptr cdouble;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpptrs".}   
  proc cpptrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_float;                          b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpptrs".}   
  proc zpptrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_double;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpptrs".}   
  proc spstrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; piv: ptr lapack_int;                        rank: ptr lapack_int; tol: cfloat): lapack_int {.importc: "LAPACKE_spstrf".}   
  proc dpstrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; piv: ptr lapack_int;                        rank: ptr lapack_int; tol: cdouble): lapack_int {.importc: "LAPACKE_dpstrf".}   
  proc cpstrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        piv: ptr lapack_int; rank: ptr lapack_int; tol: cfloat): lapack_int {.importc: "LAPACKE_cpstrf".}   
  proc zpstrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        piv: ptr lapack_int; rank: ptr lapack_int; tol: cdouble): lapack_int {.importc: "LAPACKE_zpstrf".}   
  proc sptcon *(n: lapack_int; d: ptr cfloat; e: ptr cfloat;                          anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_sptcon".}   
  proc dptcon *(n: lapack_int; d: ptr cdouble; e: ptr cdouble;                          anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dptcon".}   
  proc cptcon *(n: lapack_int; d: ptr cfloat;                          e: ptr lapack_complex_float; anorm: cfloat;                          rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_cptcon".}   
  proc zptcon *(n: lapack_int; d: ptr cdouble;                          e: ptr lapack_complex_double; anorm: cdouble;                          rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zptcon".}   
  proc spteqr *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cfloat; e: ptr cfloat; z: ptr cfloat;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_spteqr".}   
  proc dpteqr *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cdouble; e: ptr cdouble; z: ptr cdouble;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_dpteqr".}   
  proc cpteqr *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cfloat; e: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int): lapack_int {.importc: "LAPACKE_cpteqr".}   
  proc zpteqr *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cdouble; e: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zpteqr".}   
  proc sptrfs *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                        d: ptr cfloat; e: ptr cfloat; df: ptr cfloat;                          ef: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                        x: ptr cfloat; ldx: lapack_int; ferr: ptr cfloat;                          berr: ptr cfloat): lapack_int {.importc: "LAPACKE_sptrfs".}   
  proc dptrfs *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                        d: ptr cdouble; e: ptr cdouble; df: ptr cdouble;                          ef: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                        x: ptr cdouble; ldx: lapack_int; ferr: ptr cdouble;                          berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dptrfs".}   
  proc cptrfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; d: ptr cfloat;                          e: ptr lapack_complex_float; df: ptr cfloat;                          ef: ptr lapack_complex_float;                          b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cptrfs".}   
  proc zptrfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; d: ptr cdouble;                          e: ptr lapack_complex_double; df: ptr cdouble;                          ef: ptr lapack_complex_double;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zptrfs".}   
  proc sptsv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       d: ptr cfloat; e: ptr cfloat; b: ptr cfloat;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_sptsv".}   
  proc dptsv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       d: ptr cdouble; e: ptr cdouble; b: ptr cdouble;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_dptsv".}   
  proc cptsv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       d: ptr cfloat; e: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cptsv".}   
  proc zptsv *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                       d: ptr cdouble; e: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zptsv".}   
  proc sptsvx *(matrix_order: cint; fact: char; n: lapack_int;                        nrhs: lapack_int; d: ptr cfloat; e: ptr cfloat;                          df: ptr cfloat; ef: ptr cfloat; b: ptr cfloat;                          ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                        rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_sptsvx".}   
  proc dptsvx *(matrix_order: cint; fact: char; n: lapack_int;                        nrhs: lapack_int; d: ptr cdouble; e: ptr cdouble;                          df: ptr cdouble; ef: ptr cdouble; b: ptr cdouble;                          ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                        rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dptsvx".}   
  proc cptsvx *(matrix_order: cint; fact: char; n: lapack_int;                        nrhs: lapack_int; d: ptr cfloat;                          e: ptr lapack_complex_float; df: ptr cfloat;                          ef: ptr lapack_complex_float;                          b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cptsvx".}   
  proc zptsvx *(matrix_order: cint; fact: char; n: lapack_int;                        nrhs: lapack_int; d: ptr cdouble;                          e: ptr lapack_complex_double; df: ptr cdouble;                          ef: ptr lapack_complex_double;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zptsvx".}   
  proc spttrf *(n: lapack_int; d: ptr cfloat; e: ptr cfloat): lapack_int {.importc: "LAPACKE_spttrf".}   
  proc dpttrf *(n: lapack_int; d: ptr cdouble; e: ptr cdouble): lapack_int {.importc: "LAPACKE_dpttrf".}   
  proc cpttrf *(n: lapack_int; d: ptr cfloat; e: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cpttrf".}   
  proc zpttrf *(n: lapack_int; d: ptr cdouble;                          e: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zpttrf".}   
  proc spttrs *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                        d: ptr cfloat; e: ptr cfloat; b: ptr cfloat;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_spttrs".}   
  proc dpttrs *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                        d: ptr cdouble; e: ptr cdouble; b: ptr cdouble;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpttrs".}   
  proc cpttrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; d: ptr cfloat;                          e: ptr lapack_complex_float; b: ptr lapack_complex_float;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpttrs".}   
  proc zpttrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; d: ptr cdouble;                          e: ptr lapack_complex_double;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpttrs".}   
  proc ssbev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       kd: lapack_int; ab: ptr cfloat; ldab: lapack_int;                       w: ptr cfloat; z: ptr cfloat; ldz: lapack_int): lapack_int {.importc: "LAPACKE_ssbev".}   
  proc dsbev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       kd: lapack_int; ab: ptr cdouble; ldab: lapack_int;                       w: ptr cdouble; z: ptr cdouble; ldz: lapack_int): lapack_int {.importc: "LAPACKE_dsbev".}   
  proc ssbevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; kd: lapack_int; ab: ptr cfloat;                          ldab: lapack_int; w: ptr cfloat; z: ptr cfloat;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_ssbevd".}   
  proc dsbevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; kd: lapack_int; ab: ptr cdouble;                          ldab: lapack_int; w: ptr cdouble; z: ptr cdouble;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_dsbevd".}   
  proc ssbevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; kd: lapack_int; ab: ptr cfloat;                          ldab: lapack_int; q: ptr cfloat; ldq: lapack_int;                        vl: cfloat; vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr cfloat; ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssbevx".}   
  proc dsbevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; kd: lapack_int; ab: ptr cdouble;                          ldab: lapack_int; q: ptr cdouble; ldq: lapack_int;                        vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr cdouble; ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsbevx".}   
  proc ssbgst *(matrix_order: cint; vect: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr cfloat; ldab: lapack_int; bb: ptr cfloat;                          ldbb: lapack_int; x: ptr cfloat; ldx: lapack_int): lapack_int {.importc: "LAPACKE_ssbgst".}   
  proc dsbgst *(matrix_order: cint; vect: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr cdouble; ldab: lapack_int; bb: ptr cdouble;                          ldbb: lapack_int; x: ptr cdouble; ldx: lapack_int): lapack_int {.importc: "LAPACKE_dsbgst".}   
  proc ssbgv *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       ka: lapack_int; kb: lapack_int; ab: ptr cfloat;                         ldab: lapack_int; bb: ptr cfloat; ldbb: lapack_int;                       w: ptr cfloat; z: ptr cfloat; ldz: lapack_int): lapack_int {.importc: "LAPACKE_ssbgv".}   
  proc dsbgv *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       ka: lapack_int; kb: lapack_int; ab: ptr cdouble;                         ldab: lapack_int; bb: ptr cdouble; ldbb: lapack_int;                       w: ptr cdouble; z: ptr cdouble; ldz: lapack_int): lapack_int {.importc: "LAPACKE_dsbgv".}   
  proc ssbgvd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr cfloat; ldab: lapack_int; bb: ptr cfloat;                          ldbb: lapack_int; w: ptr cfloat; z: ptr cfloat;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_ssbgvd".}   
  proc dsbgvd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr cdouble; ldab: lapack_int; bb: ptr cdouble;                          ldbb: lapack_int; w: ptr cdouble; z: ptr cdouble;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_dsbgvd".}   
  proc ssbgvx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr cfloat; ldab: lapack_int; bb: ptr cfloat;                          ldbb: lapack_int; q: ptr cfloat; ldq: lapack_int;                        vl: cfloat; vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr cfloat; ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssbgvx".}   
  proc dsbgvx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; ka: lapack_int; kb: lapack_int;                        ab: ptr cdouble; ldab: lapack_int; bb: ptr cdouble;                          ldbb: lapack_int; q: ptr cdouble; ldq: lapack_int;                        vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr cdouble; ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsbgvx".}   
  proc ssbtrd *(matrix_order: cint; vect: char; uplo: char;                           n: lapack_int; kd: lapack_int; ab: ptr cfloat;                          ldab: lapack_int; d: ptr cfloat; e: ptr cfloat;                          q: ptr cfloat; ldq: lapack_int): lapack_int {.importc: "LAPACKE_ssbtrd".}   
  proc dsbtrd *(matrix_order: cint; vect: char; uplo: char;                           n: lapack_int; kd: lapack_int; ab: ptr cdouble;                          ldab: lapack_int; d: ptr cdouble; e: ptr cdouble;                          q: ptr cdouble; ldq: lapack_int): lapack_int {.importc: "LAPACKE_dsbtrd".}   
  proc ssfrk *(matrix_order: cint; transr: char; uplo: char; trans: char;                          n: lapack_int; k: lapack_int; alpha: cfloat;                         a: ptr cfloat; lda: lapack_int; beta: cfloat;                         c: ptr cfloat): lapack_int {.importc: "LAPACKE_ssfrk".}   
  proc dsfrk *(matrix_order: cint; transr: char; uplo: char; trans: char;                          n: lapack_int; k: lapack_int; alpha: cdouble;                         a: ptr cdouble; lda: lapack_int; beta: cdouble;                         c: ptr cdouble): lapack_int {.importc: "LAPACKE_dsfrk".}   
  proc sspcon *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cfloat; ipiv: ptr lapack_int; anorm: cfloat;                          rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_sspcon".}   
  proc dspcon *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cdouble; ipiv: ptr lapack_int; anorm: cdouble;                          rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dspcon".}   
  proc cspcon *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                        anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_cspcon".}   
  proc zspcon *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                        anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zspcon".}   
  proc sspev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       ap: ptr cfloat; w: ptr cfloat; z: ptr cfloat;                         ldz: lapack_int): lapack_int {.importc: "LAPACKE_sspev".}   
  proc dspev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       ap: ptr cdouble; w: ptr cdouble; z: ptr cdouble;                         ldz: lapack_int): lapack_int {.importc: "LAPACKE_dspev".}   
  proc sspevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; ap: ptr cfloat; w: ptr cfloat;                          z: ptr cfloat; ldz: lapack_int): lapack_int {.importc: "LAPACKE_sspevd".}   
  proc dspevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; ap: ptr cdouble; w: ptr cdouble;                          z: ptr cdouble; ldz: lapack_int): lapack_int {.importc: "LAPACKE_dspevd".}   
  proc sspevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; ap: ptr cfloat; vl: cfloat; vu: cfloat;                          il: lapack_int; iu: lapack_int; abstol: cfloat;                          m: ptr lapack_int; w: ptr cfloat; z: ptr cfloat;                          ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_sspevx".}   
  proc dspevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; ap: ptr cdouble; vl: cdouble; vu: cdouble;                          il: lapack_int; iu: lapack_int; abstol: cdouble;                          m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                          ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dspevx".}   
  proc sspgst *(matrix_order: cint; itype: lapack_int; uplo: char;                           n: lapack_int; ap: ptr cfloat; bp: ptr cfloat): lapack_int {.importc: "LAPACKE_sspgst".}   
  proc dspgst *(matrix_order: cint; itype: lapack_int; uplo: char;                           n: lapack_int; ap: ptr cdouble; bp: ptr cdouble): lapack_int {.importc: "LAPACKE_dspgst".}   
  proc sspgv *(matrix_order: cint; itype: lapack_int; jobz: char;                          uplo: char; n: lapack_int; ap: ptr cfloat; bp: ptr cfloat;                         w: ptr cfloat; z: ptr cfloat; ldz: lapack_int): lapack_int {.importc: "LAPACKE_sspgv".}   
  proc dspgv *(matrix_order: cint; itype: lapack_int; jobz: char;                          uplo: char; n: lapack_int; ap: ptr cdouble;                         bp: ptr cdouble; w: ptr cdouble; z: ptr cdouble;                         ldz: lapack_int): lapack_int {.importc: "LAPACKE_dspgv".}   
  proc sspgvd *(matrix_order: cint; itype: lapack_int; jobz: char;                           uplo: char; n: lapack_int; ap: ptr cfloat;                          bp: ptr cfloat; w: ptr cfloat; z: ptr cfloat;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_sspgvd".}   
  proc dspgvd *(matrix_order: cint; itype: lapack_int; jobz: char;                           uplo: char; n: lapack_int; ap: ptr cdouble;                          bp: ptr cdouble; w: ptr cdouble; z: ptr cdouble;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_dspgvd".}   
  proc sspgvx *(matrix_order: cint; itype: lapack_int; jobz: char;                           range: char; uplo: char; n: lapack_int; ap: ptr cfloat;                          bp: ptr cfloat; vl: cfloat; vu: cfloat; il: lapack_int;                        iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                        w: ptr cfloat; z: ptr cfloat; ldz: lapack_int;                        ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_sspgvx".}   
  proc dspgvx *(matrix_order: cint; itype: lapack_int; jobz: char;                           range: char; uplo: char; n: lapack_int; ap: ptr cdouble;                          bp: ptr cdouble; vl: cdouble; vu: cdouble;                          il: lapack_int; iu: lapack_int; abstol: cdouble;                          m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                          ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dspgvx".}   
  proc ssprfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr cfloat; afp: ptr cfloat;                          ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int;                        x: ptr cfloat; ldx: lapack_int; ferr: ptr cfloat;                          berr: ptr cfloat): lapack_int {.importc: "LAPACKE_ssprfs".}   
  proc dsprfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr cdouble; afp: ptr cdouble;                          ipiv: ptr lapack_int; b: ptr cdouble; ldb: lapack_int;                        x: ptr cdouble; ldx: lapack_int; ferr: ptr cdouble;                          berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dsprfs".}   
  proc csprfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_float;                          afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_csprfs".}   
  proc zsprfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_double;                        afp: ptr lapack_complex_double; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zsprfs".}   
  proc sspsv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; ap: ptr cfloat; ipiv: ptr lapack_int;                       b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sspsv".}   
  proc dspsv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; ap: ptr cdouble; ipiv: ptr lapack_int;                       b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dspsv".}   
  proc cspsv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; ap: ptr lapack_complex_float;                         ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_cspsv".}   
  proc zspsv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; ap: ptr lapack_complex_double;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: lapack_int): lapack_int {.importc: "LAPACKE_zspsv".}   
  proc sspsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int; ap: ptr cfloat;                          afp: ptr cfloat; ipiv: ptr lapack_int; b: ptr cfloat;                          ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                        rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_sspsvx".}   
  proc dspsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int; ap: ptr cdouble;                          afp: ptr cdouble; ipiv: ptr lapack_int; b: ptr cdouble;                          ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                        rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dspsvx".}   
  proc cspsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        ap: ptr lapack_complex_float;                          afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_cspsvx".}   
  proc zspsvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        ap: ptr lapack_complex_double;                        afp: ptr lapack_complex_double; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zspsvx".}   
  proc ssptrd *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cfloat; d: ptr cfloat; e: ptr cfloat;                          tau: ptr cfloat): lapack_int {.importc: "LAPACKE_ssptrd".}   
  proc dsptrd *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cdouble; d: ptr cdouble; e: ptr cdouble;                          tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dsptrd".}   
  proc ssptrf *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cfloat; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssptrf".}   
  proc dsptrf *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cdouble; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsptrf".}   
  proc csptrf *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_csptrf".}   
  proc zsptrf *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zsptrf".}   
  proc ssptri *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cfloat; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssptri".}   
  proc dsptri *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cdouble; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsptri".}   
  proc csptri *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_csptri".}   
  proc zsptri *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zsptri".}   
  proc ssptrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr cfloat; ipiv: ptr lapack_int;                        b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ssptrs".}   
  proc dsptrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr cdouble; ipiv: ptr lapack_int;                        b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dsptrs".}   
  proc csptrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_float;                          ipiv: ptr lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_csptrs".}   
  proc zsptrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; ap: ptr lapack_complex_double;                        ipiv: ptr lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int): lapack_int {.importc: "LAPACKE_zsptrs".}   
  proc sstebz *(range: char; order: char; n: lapack_int; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; d: ptr cfloat; e: ptr cfloat;                          m: ptr lapack_int; nsplit: ptr lapack_int; w: ptr cfloat;                          iblock: ptr lapack_int; isplit: ptr lapack_int): lapack_int {.importc: "LAPACKE_sstebz".}   
  proc dstebz *(range: char; order: char; n: lapack_int; vl: cdouble;                          vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; d: ptr cdouble; e: ptr cdouble;                          m: ptr lapack_int; nsplit: ptr lapack_int;                        w: ptr cdouble; iblock: ptr lapack_int;                        isplit: ptr lapack_int): lapack_int {.importc: "LAPACKE_dstebz".}   
  proc sstedc *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cfloat; e: ptr cfloat; z: ptr cfloat;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_sstedc".}   
  proc dstedc *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cdouble; e: ptr cdouble; z: ptr cdouble;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_dstedc".}   
  proc cstedc *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cfloat; e: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int): lapack_int {.importc: "LAPACKE_cstedc".}   
  proc zstedc *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cdouble; e: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zstedc".}   
  proc sstegr *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cfloat; e: ptr cfloat; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr cfloat; ldz: lapack_int; isuppz: ptr lapack_int): lapack_int {.importc: "LAPACKE_sstegr".}   
  proc dstegr *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cdouble; e: ptr cdouble;                          vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr cdouble; ldz: lapack_int; isuppz: ptr lapack_int): lapack_int {.importc: "LAPACKE_dstegr".}   
  proc cstegr *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cfloat; e: ptr cfloat; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int;                        isuppz: ptr lapack_int): lapack_int {.importc: "LAPACKE_cstegr".}   
  proc zstegr *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cdouble; e: ptr cdouble;                          vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int;                        isuppz: ptr lapack_int): lapack_int {.importc: "LAPACKE_zstegr".}   
  proc sstein *(matrix_order: cint; n: lapack_int; d: ptr cfloat;                          e: ptr cfloat; m: lapack_int; w: ptr cfloat;                          iblock: ptr lapack_int; isplit: ptr lapack_int;                        z: ptr cfloat; ldz: lapack_int; ifailv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sstein".}   
  proc dstein *(matrix_order: cint; n: lapack_int; d: ptr cdouble;                          e: ptr cdouble; m: lapack_int; w: ptr cdouble;                          iblock: ptr lapack_int; isplit: ptr lapack_int;                        z: ptr cdouble; ldz: lapack_int; ifailv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dstein".}   
  proc cstein *(matrix_order: cint; n: lapack_int; d: ptr cfloat;                          e: ptr cfloat; m: lapack_int; w: ptr cfloat;                          iblock: ptr lapack_int; isplit: ptr lapack_int;                        z: ptr lapack_complex_float; ldz: lapack_int;                        ifailv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cstein".}   
  proc zstein *(matrix_order: cint; n: lapack_int; d: ptr cdouble;                          e: ptr cdouble; m: lapack_int; w: ptr cdouble;                          iblock: ptr lapack_int; isplit: ptr lapack_int;                        z: ptr lapack_complex_double; ldz: lapack_int;                        ifailv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zstein".}   
  proc sstemr *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cfloat; e: ptr cfloat; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        m: ptr lapack_int; w: ptr cfloat; z: ptr cfloat;                          ldz: lapack_int; nzc: lapack_int; isuppz: ptr lapack_int;                        tryrac: ptr lapack_logical): lapack_int {.importc: "LAPACKE_sstemr".}   
  proc dstemr *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cdouble; e: ptr cdouble;                          vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                          ldz: lapack_int; nzc: lapack_int; isuppz: ptr lapack_int;                        tryrac: ptr lapack_logical): lapack_int {.importc: "LAPACKE_dstemr".}   
  proc cstemr *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cfloat; e: ptr cfloat; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        m: ptr lapack_int; w: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int;                        nzc: lapack_int; isuppz: ptr lapack_int;                        tryrac: ptr lapack_logical): lapack_int {.importc: "LAPACKE_cstemr".}   
  proc zstemr *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cdouble; e: ptr cdouble;                          vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        m: ptr lapack_int; w: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int;                        nzc: lapack_int; isuppz: ptr lapack_int;                        tryrac: ptr lapack_logical): lapack_int {.importc: "LAPACKE_zstemr".}   
  proc ssteqr *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cfloat; e: ptr cfloat; z: ptr cfloat;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_ssteqr".}   
  proc dsteqr *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cdouble; e: ptr cdouble; z: ptr cdouble;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_dsteqr".}   
  proc csteqr *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cfloat; e: ptr cfloat;                          z: ptr lapack_complex_float; ldz: lapack_int): lapack_int {.importc: "LAPACKE_csteqr".}   
  proc zsteqr *(matrix_order: cint; compz: char; n: lapack_int;                        d: ptr cdouble; e: ptr cdouble;                          z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zsteqr".}   
  proc ssterf *(n: lapack_int; d: ptr cfloat; e: ptr cfloat): lapack_int {.importc: "LAPACKE_ssterf".}   
  proc dsterf *(n: lapack_int; d: ptr cdouble; e: ptr cdouble): lapack_int {.importc: "LAPACKE_dsterf".}   
  proc sstev *(matrix_order: cint; jobz: char; n: lapack_int;                       d: ptr cfloat; e: ptr cfloat; z: ptr cfloat;                         ldz: lapack_int): lapack_int {.importc: "LAPACKE_sstev".}   
  proc dstev *(matrix_order: cint; jobz: char; n: lapack_int;                       d: ptr cdouble; e: ptr cdouble; z: ptr cdouble;                         ldz: lapack_int): lapack_int {.importc: "LAPACKE_dstev".}   
  proc sstevd *(matrix_order: cint; jobz: char; n: lapack_int;                        d: ptr cfloat; e: ptr cfloat; z: ptr cfloat;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_sstevd".}   
  proc dstevd *(matrix_order: cint; jobz: char; n: lapack_int;                        d: ptr cdouble; e: ptr cdouble; z: ptr cdouble;                          ldz: lapack_int): lapack_int {.importc: "LAPACKE_dstevd".}   
  proc sstevr *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cfloat; e: ptr cfloat; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr cfloat; ldz: lapack_int; isuppz: ptr lapack_int): lapack_int {.importc: "LAPACKE_sstevr".}   
  proc dstevr *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cdouble; e: ptr cdouble;                          vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr cdouble; ldz: lapack_int; isuppz: ptr lapack_int): lapack_int {.importc: "LAPACKE_dstevr".}   
  proc sstevx *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cfloat; e: ptr cfloat; vl: cfloat;                          vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr cfloat; ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_sstevx".}   
  proc dstevx *(matrix_order: cint; jobz: char; range: char;                           n: lapack_int; d: ptr cdouble; e: ptr cdouble;                          vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr cdouble; ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dstevx".}   
  proc ssycon *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int;                        anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_ssycon".}   
  proc dsycon *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; ipiv: ptr lapack_int;                        anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dsycon".}   
  proc csycon *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ipiv: ptr lapack_int; anorm: cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_csycon".}   
  proc zsycon *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ipiv: ptr lapack_int; anorm: cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_zsycon".}   
  proc ssyequb *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr cfloat; lda: lapack_int; s: ptr cfloat;                           scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_ssyequb".}   
  proc dsyequb *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr cdouble; lda: lapack_int; s: ptr cdouble;                           scond: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dsyequb".}   
  proc csyequb *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_csyequb".}   
  proc zsyequb *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zsyequb".}   
  proc ssyev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       a: ptr cfloat; lda: lapack_int; w: ptr cfloat): lapack_int {.importc: "LAPACKE_ssyev".}   
  proc dsyev *(matrix_order: cint; jobz: char; uplo: char; n: lapack_int;                       a: ptr cdouble; lda: lapack_int; w: ptr cdouble): lapack_int {.importc: "LAPACKE_dsyev".}   
  proc ssyevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; a: ptr cfloat; lda: lapack_int;                        w: ptr cfloat): lapack_int {.importc: "LAPACKE_ssyevd".}   
  proc dsyevd *(matrix_order: cint; jobz: char; uplo: char;                           n: lapack_int; a: ptr cdouble; lda: lapack_int;                        w: ptr cdouble): lapack_int {.importc: "LAPACKE_dsyevd".}   
  proc ssyevr *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; a: ptr cfloat; lda: lapack_int;                        vl: cfloat; vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr cfloat; ldz: lapack_int; isuppz: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssyevr".}   
  proc dsyevr *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; a: ptr cdouble; lda: lapack_int;                        vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr cdouble; ldz: lapack_int; isuppz: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsyevr".}   
  proc ssyevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; a: ptr cfloat; lda: lapack_int;                        vl: cfloat; vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr cfloat; ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssyevx".}   
  proc dsyevx *(matrix_order: cint; jobz: char; range: char; uplo: char;                           n: lapack_int; a: ptr cdouble; lda: lapack_int;                        vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr cdouble; ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsyevx".}   
  proc ssygst *(matrix_order: cint; itype: lapack_int; uplo: char;                           n: lapack_int; a: ptr cfloat; lda: lapack_int;                        b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ssygst".}   
  proc dsygst *(matrix_order: cint; itype: lapack_int; uplo: char;                           n: lapack_int; a: ptr cdouble; lda: lapack_int;                        b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dsygst".}   
  proc ssygv *(matrix_order: cint; itype: lapack_int; jobz: char;                          uplo: char; n: lapack_int; a: ptr cfloat; lda: lapack_int;                       b: ptr cfloat; ldb: lapack_int; w: ptr cfloat): lapack_int {.importc: "LAPACKE_ssygv".}   
  proc dsygv *(matrix_order: cint; itype: lapack_int; jobz: char;                          uplo: char; n: lapack_int; a: ptr cdouble;                         lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                       w: ptr cdouble): lapack_int {.importc: "LAPACKE_dsygv".}   
  proc ssygvd *(matrix_order: cint; itype: lapack_int; jobz: char;                           uplo: char; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                        w: ptr cfloat): lapack_int {.importc: "LAPACKE_ssygvd".}   
  proc dsygvd *(matrix_order: cint; itype: lapack_int; jobz: char;                           uplo: char; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                        w: ptr cdouble): lapack_int {.importc: "LAPACKE_dsygvd".}   
  proc ssygvx *(matrix_order: cint; itype: lapack_int; jobz: char;                           range: char; uplo: char; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                        vl: cfloat; vu: cfloat; il: lapack_int; iu: lapack_int;                        abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                          z: ptr cfloat; ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssygvx".}   
  proc dsygvx *(matrix_order: cint; itype: lapack_int; jobz: char;                           range: char; uplo: char; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                        vl: cdouble; vu: cdouble; il: lapack_int; iu: lapack_int;                        abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                          z: ptr cdouble; ldz: lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsygvx".}   
  proc ssyrfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                        af: ptr cfloat; ldaf: lapack_int; ipiv: ptr lapack_int;                        b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                          ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_ssyrfs".}   
  proc dsyrfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                        af: ptr cdouble; ldaf: lapack_int; ipiv: ptr lapack_int;                        b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                          ldx: lapack_int; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dsyrfs".}   
  proc csyrfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; af: ptr lapack_complex_float;                          ldaf: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_csyrfs".}   
  proc zsyrfs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; af: ptr lapack_complex_double;                        ldaf: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zsyrfs".}   
  proc ssyrfsx *(matrix_order: cint; uplo: char; equed: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                           lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                         ipiv: ptr lapack_int; s: ptr cfloat; b: ptr cfloat;                           ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                         rcond: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_ssyrfsx".}   
  proc dsyrfsx *(matrix_order: cint; uplo: char; equed: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                           lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                         ipiv: ptr lapack_int; s: ptr cdouble; b: ptr cdouble;                           ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                         rcond: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_dsyrfsx".}   
  proc csyrfsx *(matrix_order: cint; uplo: char; equed: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         af: ptr lapack_complex_float; ldaf: lapack_int;                         ipiv: ptr lapack_int; s: ptr cfloat;                           b: ptr lapack_complex_float; ldb: lapack_int;                         x: ptr lapack_complex_float; ldx: lapack_int;                         rcond: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_csyrfsx".}   
  proc zsyrfsx *(matrix_order: cint; uplo: char; equed: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         af: ptr lapack_complex_double; ldaf: lapack_int;                         ipiv: ptr lapack_int; s: ptr cdouble;                           b: ptr lapack_complex_double; ldb: lapack_int;                         x: ptr lapack_complex_double; ldx: lapack_int;                         rcond: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_zsyrfsx".}   
  proc ssysv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                       ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ssysv".}   
  proc dsysv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                       ipiv: ptr lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dsysv".}   
  proc csysv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; a: ptr lapack_complex_float;                         lda: lapack_int; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_csysv".}   
  proc zsysv *(matrix_order: cint; uplo: char; n: lapack_int;                       nrhs: lapack_int; a: ptr lapack_complex_double;                       lda: lapack_int; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zsysv".}   
  proc ssysvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                          lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                        ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int;                        x: ptr cfloat; ldx: lapack_int; rcond: ptr cfloat;                          ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_ssysvx".}   
  proc dsysvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                          lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                        ipiv: ptr lapack_int; b: ptr cdouble; ldb: lapack_int;                        x: ptr cdouble; ldx: lapack_int; rcond: ptr cdouble;                          ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dsysvx".}   
  proc csysvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        af: ptr lapack_complex_float; ldaf: lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_float;                          ldb: lapack_int; x: ptr lapack_complex_float;                          ldx: lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                          berr: ptr cfloat): lapack_int {.importc: "LAPACKE_csysvx".}   
  proc zsysvx *(matrix_order: cint; fact: char; uplo: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        af: ptr lapack_complex_double; ldaf: lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_double;                        ldb: lapack_int; x: ptr lapack_complex_double;                        ldx: lapack_int; rcond: ptr cdouble; ferr: ptr cdouble;                          berr: ptr cdouble): lapack_int {.importc: "LAPACKE_zsysvx".}   
  proc ssysvxx *(matrix_order: cint; fact: char; uplo: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                           lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; s: ptr cfloat;                           b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                           ldx: lapack_int; rcond: ptr cfloat; rpvgrw: ptr cfloat;                           berr: ptr cfloat; n_err_bnds: lapack_int;                         err_bnds_norm: ptr cfloat; err_bnds_comp: ptr cfloat;                           nparams: lapack_int; params: ptr cfloat): lapack_int {.importc: "LAPACKE_ssysvxx".}   
  proc dsysvxx *(matrix_order: cint; fact: char; uplo: char;                            n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                           lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; s: ptr cdouble;                           b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                           ldx: lapack_int; rcond: ptr cdouble;                           rpvgrw: ptr cdouble; berr: ptr cdouble;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                           err_bnds_comp: ptr cdouble; nparams: lapack_int;                         params: ptr cdouble): lapack_int {.importc: "LAPACKE_dsysvxx".}   
  proc csysvxx *(matrix_order: cint; fact: char; uplo: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         af: ptr lapack_complex_float; ldaf: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; s: ptr cfloat;                           b: ptr lapack_complex_float; ldb: lapack_int;                         x: ptr lapack_complex_float; ldx: lapack_int;                         rcond: ptr cfloat; rpvgrw: ptr cfloat; berr: ptr cfloat;                           n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                           err_bnds_comp: ptr cfloat; nparams: lapack_int;                         params: ptr cfloat): lapack_int {.importc: "LAPACKE_csysvxx".}   
  proc zsysvxx *(matrix_order: cint; fact: char; uplo: char;                            n: lapack_int; nrhs: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         af: ptr lapack_complex_double; ldaf: lapack_int;                         ipiv: ptr lapack_int; equed: cstring; s: ptr cdouble;                           b: ptr lapack_complex_double; ldb: lapack_int;                         x: ptr lapack_complex_double; ldx: lapack_int;                         rcond: ptr cdouble; rpvgrw: ptr cdouble;                           berr: ptr cdouble; n_err_bnds: lapack_int;                         err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                           nparams: lapack_int; params: ptr cdouble): lapack_int {.importc: "LAPACKE_zsysvxx".}   
  proc ssytrd *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; d: ptr cfloat;                          e: ptr cfloat; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_ssytrd".}   
  proc dsytrd *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; d: ptr cdouble;                          e: ptr cdouble; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dsytrd".}   
  proc ssytrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssytrf".}   
  proc dsytrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsytrf".}   
  proc csytrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_csytrf".}   
  proc zsytrf *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zsytrf".}   
  proc ssytri *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssytri".}   
  proc dsytri *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsytri".}   
  proc csytri *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_csytri".}   
  proc zsytri *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zsytri".}   
  proc ssytrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                        ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ssytrs".}   
  proc dsytrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                        ipiv: ptr lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dsytrs".}   
  proc csytrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_csytrs".}   
  proc zsytrs *(matrix_order: cint; uplo: char; n: lapack_int;                        nrhs: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; ipiv: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zsytrs".}   
  proc stbcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; kd: lapack_int; ab: ptr cfloat;                          ldab: lapack_int; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_stbcon".}   
  proc dtbcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; kd: lapack_int; ab: ptr cdouble;                          ldab: lapack_int; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dtbcon".}   
  proc ctbcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; kd: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_ctbcon".}   
  proc ztbcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; kd: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_ztbcon".}   
  proc stbrfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr cfloat; ldab: lapack_int; b: ptr cfloat;                          ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_stbrfs".}   
  proc dtbrfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr cdouble; ldab: lapack_int; b: ptr cdouble;                          ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dtbrfs".}   
  proc ctbrfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_ctbrfs".}   
  proc ztbrfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_ztbrfs".}   
  proc stbtrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr cfloat; ldab: lapack_int; b: ptr cfloat;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_stbtrs".}   
  proc dtbtrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr cdouble; ldab: lapack_int; b: ptr cdouble;                          ldb: lapack_int): lapack_int {.importc: "LAPACKE_dtbtrs".}   
  proc ctbtrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_float; ldab: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ctbtrs".}   
  proc ztbtrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; kd: lapack_int; nrhs: lapack_int;                        ab: ptr lapack_complex_double; ldab: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ztbtrs".}   
  proc stfsm *(matrix_order: cint; transr: char; side: char; uplo: char;                          trans: char; diag: char; m: lapack_int; n: lapack_int;                       alpha: cfloat; a: ptr cfloat; b: ptr cfloat;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_stfsm".}   
  proc dtfsm *(matrix_order: cint; transr: char; side: char; uplo: char;                          trans: char; diag: char; m: lapack_int; n: lapack_int;                       alpha: cdouble; a: ptr cdouble; b: ptr cdouble;                         ldb: lapack_int): lapack_int {.importc: "LAPACKE_dtfsm".}   
  proc ctfsm *(matrix_order: cint; transr: char; side: char; uplo: char;                          trans: char; diag: char; m: lapack_int; n: lapack_int;                       alpha: lapack_complex_float; a: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ctfsm".}   
  proc ztfsm *(matrix_order: cint; transr: char; side: char; uplo: char;                          trans: char; diag: char; m: lapack_int; n: lapack_int;                       alpha: lapack_complex_double;                       a: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ztfsm".}   
  proc stftri *(matrix_order: cint; transr: char; uplo: char; diag: char;                           n: lapack_int; a: ptr cfloat): lapack_int {.importc: "LAPACKE_stftri".}   
  proc dtftri *(matrix_order: cint; transr: char; uplo: char; diag: char;                           n: lapack_int; a: ptr cdouble): lapack_int {.importc: "LAPACKE_dtftri".}   
  proc ctftri *(matrix_order: cint; transr: char; uplo: char; diag: char;                           n: lapack_int; a: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctftri".}   
  proc ztftri *(matrix_order: cint; transr: char; uplo: char; diag: char;                           n: lapack_int; a: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztftri".}   
  proc stfttp *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; arf: ptr cfloat; ap: ptr cfloat): lapack_int {.importc: "LAPACKE_stfttp".}   
  proc dtfttp *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; arf: ptr cdouble; ap: ptr cdouble): lapack_int {.importc: "LAPACKE_dtfttp".}   
  proc ctfttp *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; arf: ptr lapack_complex_float;                          ap: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctfttp".}   
  proc ztfttp *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; arf: ptr lapack_complex_double;                        ap: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztfttp".}   
  proc stfttr *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; arf: ptr cfloat; a: ptr cfloat;                          lda: lapack_int): lapack_int {.importc: "LAPACKE_stfttr".}   
  proc dtfttr *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; arf: ptr cdouble; a: ptr cdouble;                          lda: lapack_int): lapack_int {.importc: "LAPACKE_dtfttr".}   
  proc ctfttr *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; arf: ptr lapack_complex_float;                          a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_ctfttr".}   
  proc ztfttr *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; arf: ptr lapack_complex_double;                        a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_ztfttr".}   
  proc stgevc *(matrix_order: cint; side: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int; s: ptr cfloat;                          lds: lapack_int; p: ptr cfloat; ldp: lapack_int;                        vl: ptr cfloat; ldvl: lapack_int; vr: ptr cfloat;                          ldvr: lapack_int; mm: lapack_int; m: ptr lapack_int): lapack_int {.importc: "LAPACKE_stgevc".}   
  proc dtgevc *(matrix_order: cint; side: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        s: ptr cdouble; lds: lapack_int; p: ptr cdouble;                          ldp: lapack_int; vl: ptr cdouble; ldvl: lapack_int;                        vr: ptr cdouble; ldvr: lapack_int; mm: lapack_int;                        m: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtgevc".}   
  proc ctgevc *(matrix_order: cint; side: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        s: ptr lapack_complex_float; lds: lapack_int;                        p: ptr lapack_complex_float; ldp: lapack_int;                        vl: ptr lapack_complex_float; ldvl: lapack_int;                        vr: ptr lapack_complex_float; ldvr: lapack_int;                        mm: lapack_int; m: ptr lapack_int): lapack_int {.importc: "LAPACKE_ctgevc".}   
  proc ztgevc *(matrix_order: cint; side: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        s: ptr lapack_complex_double; lds: lapack_int;                        p: ptr lapack_complex_double; ldp: lapack_int;                        vl: ptr lapack_complex_double; ldvl: lapack_int;                        vr: ptr lapack_complex_double; ldvr: lapack_int;                        mm: lapack_int; m: ptr lapack_int): lapack_int {.importc: "LAPACKE_ztgevc".}   
  proc stgexc *(matrix_order: cint; wantq: lapack_logical;                          wantz: lapack_logical; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                        q: ptr cfloat; ldq: lapack_int; z: ptr cfloat;                          ldz: lapack_int; ifst: ptr lapack_int;                        ilst: ptr lapack_int): lapack_int {.importc: "LAPACKE_stgexc".}   
  proc dtgexc *(matrix_order: cint; wantq: lapack_logical;                          wantz: lapack_logical; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                        q: ptr cdouble; ldq: lapack_int; z: ptr cdouble;                          ldz: lapack_int; ifst: ptr lapack_int;                        ilst: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtgexc".}   
  proc ctgexc *(matrix_order: cint; wantq: lapack_logical;                          wantz: lapack_logical; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        q: ptr lapack_complex_float; ldq: lapack_int;                        z: ptr lapack_complex_float; ldz: lapack_int;                        ifst: lapack_int; ilst: lapack_int): lapack_int {.importc: "LAPACKE_ctgexc".}   
  proc ztgexc *(matrix_order: cint; wantq: lapack_logical;                          wantz: lapack_logical; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        q: ptr lapack_complex_double; ldq: lapack_int;                        z: ptr lapack_complex_double; ldz: lapack_int;                        ifst: lapack_int; ilst: lapack_int): lapack_int {.importc: "LAPACKE_ztgexc".}   
  proc stgsen *(matrix_order: cint; ijob: lapack_int;                        wantq: lapack_logical; wantz: lapack_logical;                          select: ptr lapack_logical; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                        alphar: ptr cfloat; alphai: ptr cfloat; beta: ptr cfloat;                          q: ptr cfloat; ldq: lapack_int; z: ptr cfloat;                          ldz: lapack_int; m: ptr lapack_int; pl: ptr cfloat;                          pr: ptr cfloat; dif: ptr cfloat): lapack_int {.importc: "LAPACKE_stgsen".}   
  proc dtgsen *(matrix_order: cint; ijob: lapack_int;                        wantq: lapack_logical; wantz: lapack_logical;                          select: ptr lapack_logical; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                          ldb: lapack_int; alphar: ptr cdouble;                          alphai: ptr cdouble; beta: ptr cdouble; q: ptr cdouble;                          ldq: lapack_int; z: ptr cdouble; ldz: lapack_int;                        m: ptr lapack_int; pl: ptr cdouble; pr: ptr cdouble;                          dif: ptr cdouble): lapack_int {.importc: "LAPACKE_dtgsen".}   
  proc ctgsen *(matrix_order: cint; ijob: lapack_int;                        wantq: lapack_logical; wantz: lapack_logical;                          select: ptr lapack_logical; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        alpha: ptr lapack_complex_float;                          beta: ptr lapack_complex_float;                          q: ptr lapack_complex_float; ldq: lapack_int;                        z: ptr lapack_complex_float; ldz: lapack_int;                        m: ptr lapack_int; pl: ptr cfloat; pr: ptr cfloat;                          dif: ptr cfloat): lapack_int {.importc: "LAPACKE_ctgsen".}   
  proc ztgsen *(matrix_order: cint; ijob: lapack_int;                        wantq: lapack_logical; wantz: lapack_logical;                          select: ptr lapack_logical; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        alpha: ptr lapack_complex_double;                        beta: ptr lapack_complex_double;                        q: ptr lapack_complex_double; ldq: lapack_int;                        z: ptr lapack_complex_double; ldz: lapack_int;                        m: ptr lapack_int; pl: ptr cdouble; pr: ptr cdouble;                          dif: ptr cdouble): lapack_int {.importc: "LAPACKE_ztgsen".}   
  proc stgsja *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; p: lapack_int; n: lapack_int;                        k: lapack_int; l: lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                        tola: cfloat; tolb: cfloat; alpha: ptr cfloat;                          beta: ptr cfloat; u: ptr cfloat; ldu: lapack_int;                        v: ptr cfloat; ldv: lapack_int; q: ptr cfloat;                          ldq: lapack_int; ncycle: ptr lapack_int): lapack_int {.importc: "LAPACKE_stgsja".}   
  proc dtgsja *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; p: lapack_int; n: lapack_int;                        k: lapack_int; l: lapack_int; a: ptr cdouble;                          lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                        tola: cdouble; tolb: cdouble; alpha: ptr cdouble;                          beta: ptr cdouble; u: ptr cdouble; ldu: lapack_int;                        v: ptr cdouble; ldv: lapack_int; q: ptr cdouble;                          ldq: lapack_int; ncycle: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtgsja".}   
  proc ctgsja *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; p: lapack_int; n: lapack_int;                        k: lapack_int; l: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        tola: cfloat; tolb: cfloat; alpha: ptr cfloat;                          beta: ptr cfloat; u: ptr lapack_complex_float;                          ldu: lapack_int; v: ptr lapack_complex_float;                          ldv: lapack_int; q: ptr lapack_complex_float;                          ldq: lapack_int; ncycle: ptr lapack_int): lapack_int {.importc: "LAPACKE_ctgsja".}   
  proc ztgsja *(matrix_order: cint; jobu: char; jobv: char; jobq: char;                           m: lapack_int; p: lapack_int; n: lapack_int;                        k: lapack_int; l: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        tola: cdouble; tolb: cdouble; alpha: ptr cdouble;                          beta: ptr cdouble; u: ptr lapack_complex_double;                        ldu: lapack_int; v: ptr lapack_complex_double;                        ldv: lapack_int; q: ptr lapack_complex_double;                        ldq: lapack_int; ncycle: ptr lapack_int): lapack_int {.importc: "LAPACKE_ztgsja".}   
  proc stgsna *(matrix_order: cint; job: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                        vl: ptr cfloat; ldvl: lapack_int; vr: ptr cfloat;                          ldvr: lapack_int; s: ptr cfloat; dif: ptr cfloat;                          mm: lapack_int; m: ptr lapack_int): lapack_int {.importc: "LAPACKE_stgsna".}   
  proc dtgsna *(matrix_order: cint; job: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                          ldb: lapack_int; vl: ptr cdouble; ldvl: lapack_int;                        vr: ptr cdouble; ldvr: lapack_int; s: ptr cdouble;                          dif: ptr cdouble; mm: lapack_int; m: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtgsna".}   
  proc ctgsna *(matrix_order: cint; job: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        vl: ptr lapack_complex_float; ldvl: lapack_int;                        vr: ptr lapack_complex_float; ldvr: lapack_int;                        s: ptr cfloat; dif: ptr cfloat; mm: lapack_int;                        m: ptr lapack_int): lapack_int {.importc: "LAPACKE_ctgsna".}   
  proc ztgsna *(matrix_order: cint; job: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        vl: ptr lapack_complex_double; ldvl: lapack_int;                        vr: ptr lapack_complex_double; ldvr: lapack_int;                        s: ptr cdouble; dif: ptr cdouble; mm: lapack_int;                        m: ptr lapack_int): lapack_int {.importc: "LAPACKE_ztgsna".}   
  proc stgsyl *(matrix_order: cint; trans: char; ijob: lapack_int;                        m: lapack_int; n: lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                        c: ptr cfloat; ldc: lapack_int; d: ptr cfloat;                          ldd: lapack_int; e: ptr cfloat; lde: lapack_int;                        f: ptr cfloat; ldf: lapack_int; scale: ptr cfloat;                          dif: ptr cfloat): lapack_int {.importc: "LAPACKE_stgsyl".}   
  proc dtgsyl *(matrix_order: cint; trans: char; ijob: lapack_int;                        m: lapack_int; n: lapack_int; a: ptr cdouble;                          lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                        c: ptr cdouble; ldc: lapack_int; d: ptr cdouble;                          ldd: lapack_int; e: ptr cdouble; lde: lapack_int;                        f: ptr cdouble; ldf: lapack_int; scale: ptr cdouble;                          dif: ptr cdouble): lapack_int {.importc: "LAPACKE_dtgsyl".}   
  proc ctgsyl *(matrix_order: cint; trans: char; ijob: lapack_int;                        m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        c: ptr lapack_complex_float; ldc: lapack_int;                        d: ptr lapack_complex_float; ldd: lapack_int;                        e: ptr lapack_complex_float; lde: lapack_int;                        f: ptr lapack_complex_float; ldf: lapack_int;                        scale: ptr cfloat; dif: ptr cfloat): lapack_int {.importc: "LAPACKE_ctgsyl".}   
  proc ztgsyl *(matrix_order: cint; trans: char; ijob: lapack_int;                        m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        c: ptr lapack_complex_double; ldc: lapack_int;                        d: ptr lapack_complex_double; ldd: lapack_int;                        e: ptr lapack_complex_double; lde: lapack_int;                        f: ptr lapack_complex_double; ldf: lapack_int;                        scale: ptr cdouble; dif: ptr cdouble): lapack_int {.importc: "LAPACKE_ztgsyl".}   
  proc stpcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; ap: ptr cfloat; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_stpcon".}   
  proc dtpcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; ap: ptr cdouble; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dtpcon".}   
  proc ctpcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; ap: ptr lapack_complex_float;                          rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_ctpcon".}   
  proc ztpcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; ap: ptr lapack_complex_double;                        rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_ztpcon".}   
  proc stprfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int; ap: ptr cfloat;                          b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                          ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_stprfs".}   
  proc dtprfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int; ap: ptr cdouble;                          b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                          ldx: lapack_int; ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dtprfs".}   
  proc ctprfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int;                        ap: ptr lapack_complex_float;                          b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_ctprfs".}   
  proc ztprfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int;                        ap: ptr lapack_complex_double;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_ztprfs".}   
  proc stptri *(matrix_order: cint; uplo: char; diag: char;                           n: lapack_int; ap: ptr cfloat): lapack_int {.importc: "LAPACKE_stptri".}   
  proc dtptri *(matrix_order: cint; uplo: char; diag: char;                           n: lapack_int; ap: ptr cdouble): lapack_int {.importc: "LAPACKE_dtptri".}   
  proc ctptri *(matrix_order: cint; uplo: char; diag: char;                           n: lapack_int; ap: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctptri".}   
  proc ztptri *(matrix_order: cint; uplo: char; diag: char;                           n: lapack_int; ap: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztptri".}   
  proc stptrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int; ap: ptr cfloat;                          b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_stptrs".}   
  proc dtptrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int; ap: ptr cdouble;                          b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dtptrs".}   
  proc ctptrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int;                        ap: ptr lapack_complex_float;                          b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ctptrs".}   
  proc ztptrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int;                        ap: ptr lapack_complex_double;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ztptrs".}   
  proc stpttf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; ap: ptr cfloat; arf: ptr cfloat): lapack_int {.importc: "LAPACKE_stpttf".}   
  proc dtpttf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; ap: ptr cdouble; arf: ptr cdouble): lapack_int {.importc: "LAPACKE_dtpttf".}   
  proc ctpttf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; ap: ptr lapack_complex_float;                          arf: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctpttf".}   
  proc ztpttf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; ap: ptr lapack_complex_double;                        arf: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztpttf".}   
  proc stpttr *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cfloat; a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_stpttr".}   
  proc dtpttr *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr cdouble; a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dtpttr".}   
  proc ctpttr *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float;                          a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_ctpttr".}   
  proc ztpttr *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double;                        a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_ztpttr".}   
  proc strcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; a: ptr cfloat; lda: lapack_int;                        rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_strcon".}   
  proc dtrcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; a: ptr cdouble; lda: lapack_int;                        rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrcon".}   
  proc ctrcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; rcond: ptr cfloat): lapack_int {.importc: "LAPACKE_ctrcon".}   
  proc ztrcon *(matrix_order: cint; norm: char; uplo: char; diag: char;                           n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; rcond: ptr cdouble): lapack_int {.importc: "LAPACKE_ztrcon".}   
  proc strevc *(matrix_order: cint; side: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int; t: ptr cfloat;                          ldt: lapack_int; vl: ptr cfloat; ldvl: lapack_int;                        vr: ptr cfloat; ldvr: lapack_int; mm: lapack_int;                        m: ptr lapack_int): lapack_int {.importc: "LAPACKE_strevc".}   
  proc dtrevc *(matrix_order: cint; side: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        t: ptr cdouble; ldt: lapack_int; vl: ptr cdouble;                          ldvl: lapack_int; vr: ptr cdouble; ldvr: lapack_int;                        mm: lapack_int; m: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtrevc".}   
  proc ctrevc *(matrix_order: cint; side: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        t: ptr lapack_complex_float; ldt: lapack_int;                        vl: ptr lapack_complex_float; ldvl: lapack_int;                        vr: ptr lapack_complex_float; ldvr: lapack_int;                        mm: lapack_int; m: ptr lapack_int): lapack_int {.importc: "LAPACKE_ctrevc".}   
  proc ztrevc *(matrix_order: cint; side: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        t: ptr lapack_complex_double; ldt: lapack_int;                        vl: ptr lapack_complex_double; ldvl: lapack_int;                        vr: ptr lapack_complex_double; ldvr: lapack_int;                        mm: lapack_int; m: ptr lapack_int): lapack_int {.importc: "LAPACKE_ztrevc".}   
  proc strexc *(matrix_order: cint; compq: char; n: lapack_int;                        t: ptr cfloat; ldt: lapack_int; q: ptr cfloat;                          ldq: lapack_int; ifst: ptr lapack_int;                        ilst: ptr lapack_int): lapack_int {.importc: "LAPACKE_strexc".}   
  proc dtrexc *(matrix_order: cint; compq: char; n: lapack_int;                        t: ptr cdouble; ldt: lapack_int; q: ptr cdouble;                          ldq: lapack_int; ifst: ptr lapack_int;                        ilst: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtrexc".}   
  proc ctrexc *(matrix_order: cint; compq: char; n: lapack_int;                        t: ptr lapack_complex_float; ldt: lapack_int;                        q: ptr lapack_complex_float; ldq: lapack_int;                        ifst: lapack_int; ilst: lapack_int): lapack_int {.importc: "LAPACKE_ctrexc".}   
  proc ztrexc *(matrix_order: cint; compq: char; n: lapack_int;                        t: ptr lapack_complex_double; ldt: lapack_int;                        q: ptr lapack_complex_double; ldq: lapack_int;                        ifst: lapack_int; ilst: lapack_int): lapack_int {.importc: "LAPACKE_ztrexc".}   
  proc strrfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                        x: ptr cfloat; ldx: lapack_int; ferr: ptr cfloat;                          berr: ptr cfloat): lapack_int {.importc: "LAPACKE_strrfs".}   
  proc dtrrfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                          lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                        x: ptr cdouble; ldx: lapack_int; ferr: ptr cdouble;                          berr: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrrfs".}   
  proc ctrrfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        ferr: ptr cfloat; berr: ptr cfloat): lapack_int {.importc: "LAPACKE_ctrrfs".}   
  proc ztrrfs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        ferr: ptr cdouble; berr: ptr cdouble): lapack_int {.importc: "LAPACKE_ztrrfs".}   
  proc strsen *(matrix_order: cint; job: char; compq: char;                           select: ptr lapack_logical; n: lapack_int; t: ptr cfloat;                          ldt: lapack_int; q: ptr cfloat; ldq: lapack_int;                        wr: ptr cfloat; wi: ptr cfloat; m: ptr lapack_int;                        s: ptr cfloat; sep: ptr cfloat): lapack_int {.importc: "LAPACKE_strsen".}   
  proc dtrsen *(matrix_order: cint; job: char; compq: char;                           select: ptr lapack_logical; n: lapack_int;                        t: ptr cdouble; ldt: lapack_int; q: ptr cdouble;                          ldq: lapack_int; wr: ptr cdouble; wi: ptr cdouble;                          m: ptr lapack_int; s: ptr cdouble; sep: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrsen".}   
  proc ctrsen *(matrix_order: cint; job: char; compq: char;                           select: ptr lapack_logical; n: lapack_int;                        t: ptr lapack_complex_float; ldt: lapack_int;                        q: ptr lapack_complex_float; ldq: lapack_int;                        w: ptr lapack_complex_float; m: ptr lapack_int;                        s: ptr cfloat; sep: ptr cfloat): lapack_int {.importc: "LAPACKE_ctrsen".}   
  proc ztrsen *(matrix_order: cint; job: char; compq: char;                           select: ptr lapack_logical; n: lapack_int;                        t: ptr lapack_complex_double; ldt: lapack_int;                        q: ptr lapack_complex_double; ldq: lapack_int;                        w: ptr lapack_complex_double; m: ptr lapack_int;                        s: ptr cdouble; sep: ptr cdouble): lapack_int {.importc: "LAPACKE_ztrsen".}   
  proc strsna *(matrix_order: cint; job: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int; t: ptr cfloat;                          ldt: lapack_int; vl: ptr cfloat; ldvl: lapack_int;                        vr: ptr cfloat; ldvr: lapack_int; s: ptr cfloat;                          sep: ptr cfloat; mm: lapack_int; m: ptr lapack_int): lapack_int {.importc: "LAPACKE_strsna".}   
  proc dtrsna *(matrix_order: cint; job: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        t: ptr cdouble; ldt: lapack_int; vl: ptr cdouble;                          ldvl: lapack_int; vr: ptr cdouble; ldvr: lapack_int;                        s: ptr cdouble; sep: ptr cdouble; mm: lapack_int;                        m: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtrsna".}   
  proc ctrsna *(matrix_order: cint; job: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        t: ptr lapack_complex_float; ldt: lapack_int;                        vl: ptr lapack_complex_float; ldvl: lapack_int;                        vr: ptr lapack_complex_float; ldvr: lapack_int;                        s: ptr cfloat; sep: ptr cfloat; mm: lapack_int;                        m: ptr lapack_int): lapack_int {.importc: "LAPACKE_ctrsna".}   
  proc ztrsna *(matrix_order: cint; job: char; howmny: char;                           select: ptr lapack_logical; n: lapack_int;                        t: ptr lapack_complex_double; ldt: lapack_int;                        vl: ptr lapack_complex_double; ldvl: lapack_int;                        vr: ptr lapack_complex_double; ldvr: lapack_int;                        s: ptr cdouble; sep: ptr cdouble; mm: lapack_int;                        m: ptr lapack_int): lapack_int {.importc: "LAPACKE_ztrsna".}   
  proc strsyl *(matrix_order: cint; trana: char; tranb: char;                           isgn: lapack_int; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                          ldb: lapack_int; c: ptr cfloat; ldc: lapack_int;                        scale: ptr cfloat): lapack_int {.importc: "LAPACKE_strsyl".}   
  proc dtrsyl *(matrix_order: cint; trana: char; tranb: char;                           isgn: lapack_int; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                          ldb: lapack_int; c: ptr cdouble; ldc: lapack_int;                        scale: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrsyl".}   
  proc ctrsyl *(matrix_order: cint; trana: char; tranb: char;                           isgn: lapack_int; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        c: ptr lapack_complex_float; ldc: lapack_int;                        scale: ptr cfloat): lapack_int {.importc: "LAPACKE_ctrsyl".}   
  proc ztrsyl *(matrix_order: cint; trana: char; tranb: char;                           isgn: lapack_int; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        c: ptr lapack_complex_double; ldc: lapack_int;                        scale: ptr cdouble): lapack_int {.importc: "LAPACKE_ztrsyl".}   
  proc strtri *(matrix_order: cint; uplo: char; diag: char;                           n: lapack_int; a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_strtri".}   
  proc dtrtri *(matrix_order: cint; uplo: char; diag: char;                           n: lapack_int; a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dtrtri".}   
  proc ctrtri *(matrix_order: cint; uplo: char; diag: char;                           n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int): lapack_int {.importc: "LAPACKE_ctrtri".}   
  proc ztrtri *(matrix_order: cint; uplo: char; diag: char;                           n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int): lapack_int {.importc: "LAPACKE_ztrtri".}   
  proc strtrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                          lda: lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_strtrs".}   
  proc dtrtrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                          lda: lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dtrtrs".}   
  proc ctrtrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ctrtrs".}   
  proc ztrtrs *(matrix_order: cint; uplo: char; trans: char; diag: char;                           n: lapack_int; nrhs: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ztrtrs".}   
  proc strttf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr cfloat; lda: lapack_int;                        arf: ptr cfloat): lapack_int {.importc: "LAPACKE_strttf".}   
  proc dtrttf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr cdouble; lda: lapack_int;                        arf: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrttf".}   
  proc ctrttf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; arf: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctrttf".}   
  proc ztrttf *(matrix_order: cint; transr: char; uplo: char;                           n: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; arf: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztrttf".}   
  proc strttp *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; ap: ptr cfloat): lapack_int {.importc: "LAPACKE_strttp".}   
  proc dtrttp *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; ap: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrttp".}   
  proc ctrttp *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        ap: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctrttp".}   
  proc ztrttp *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        ap: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztrttp".}   
  proc stzrzf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cfloat; lda: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_stzrzf".}   
  proc dtzrzf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr cdouble; lda: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dtzrzf".}   
  proc ctzrzf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctzrzf".}   
  proc ztzrzf *(matrix_order: cint; m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztzrzf".}   
  proc cungbr *(matrix_order: cint; vect: char; m: lapack_int;                        n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cungbr".}   
  proc zungbr *(matrix_order: cint; vect: char; m: lapack_int;                        n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zungbr".}   
  proc cunghr *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cunghr".}   
  proc zunghr *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zunghr".}   
  proc cunglq *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cunglq".}   
  proc zunglq *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zunglq".}   
  proc cungql *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cungql".}   
  proc zungql *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zungql".}   
  proc cungqr *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cungqr".}   
  proc zungqr *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zungqr".}   
  proc cungrq *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cungrq".}   
  proc zungrq *(matrix_order: cint; m: lapack_int; n: lapack_int;                        k: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zungrq".}   
  proc cungtr *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cungtr".}   
  proc zungtr *(matrix_order: cint; uplo: char; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zungtr".}   
  proc cunmbr *(matrix_order: cint; vect: char; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float;                          c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cunmbr".}   
  proc zunmbr *(matrix_order: cint; vect: char; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zunmbr".}   
  proc cunmhr *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; tau: ptr lapack_complex_float;                          c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cunmhr".}   
  proc zunmhr *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; ilo: lapack_int;                        ihi: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; tau: ptr lapack_complex_double;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zunmhr".}   
  proc cunmlq *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float;                          c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cunmlq".}   
  proc zunmlq *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zunmlq".}   
  proc cunmql *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float;                          c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cunmql".}   
  proc zunmql *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zunmql".}   
  proc cunmqr *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float;                          c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cunmqr".}   
  proc zunmqr *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zunmqr".}   
  proc cunmrq *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float;                          c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cunmrq".}   
  proc zunmrq *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zunmrq".}   
  proc cunmrz *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        l: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; tau: ptr lapack_complex_float;                          c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cunmrz".}   
  proc zunmrz *(matrix_order: cint; side: char; trans: char;                           m: lapack_int; n: lapack_int; k: lapack_int;                        l: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; tau: ptr lapack_complex_double;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zunmrz".}   
  proc cunmtr *(matrix_order: cint; side: char; uplo: char; trans: char;                           m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        tau: ptr lapack_complex_float;                          c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cunmtr".}   
  proc zunmtr *(matrix_order: cint; side: char; uplo: char; trans: char;                           m: lapack_int; n: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        tau: ptr lapack_complex_double;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zunmtr".}   
  proc cupgtr *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_float;                          tau: ptr lapack_complex_float;                          q: ptr lapack_complex_float; ldq: lapack_int): lapack_int {.importc: "LAPACKE_cupgtr".}   
  proc zupgtr *(matrix_order: cint; uplo: char; n: lapack_int;                        ap: ptr lapack_complex_double;                        tau: ptr lapack_complex_double;                        q: ptr lapack_complex_double; ldq: lapack_int): lapack_int {.importc: "LAPACKE_zupgtr".}   
  proc cupmtr *(matrix_order: cint; side: char; uplo: char; trans: char;                           m: lapack_int; n: lapack_int;                        ap: ptr lapack_complex_float;                          tau: ptr lapack_complex_float;                          c: ptr lapack_complex_float; ldc: lapack_int): lapack_int {.importc: "LAPACKE_cupmtr".}   
  proc zupmtr *(matrix_order: cint; side: char; uplo: char; trans: char;                           m: lapack_int; n: lapack_int;                        ap: ptr lapack_complex_double;                        tau: ptr lapack_complex_double;                        c: ptr lapack_complex_double; ldc: lapack_int): lapack_int {.importc: "LAPACKE_zupmtr".}   
  
  when False:

    proc sbdsdc_work *(matrix_order: cint; uplo: char; compq: char;                                n: lapack_int; d: ptr cfloat; e: ptr cfloat;                               u: ptr cfloat; ldu: lapack_int; vt: ptr cfloat;                               ldvt: lapack_int; q: ptr cfloat; iq: ptr lapack_int;                             work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sbdsdc_work".}   
    proc dbdsdc_work *(matrix_order: cint; uplo: char; compq: char;                                n: lapack_int; d: ptr cdouble; e: ptr cdouble;                               u: ptr cdouble; ldu: lapack_int; vt: ptr cdouble;                               ldvt: lapack_int; q: ptr cdouble;                               iq: ptr lapack_int; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dbdsdc_work".}   
    proc sbdsqr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ncvt: lapack_int; nru: lapack_int; ncc: lapack_int;                             d: ptr cfloat; e: ptr cfloat; vt: ptr cfloat;                               ldvt: lapack_int; u: ptr cfloat; ldu: lapack_int;                             c: ptr cfloat; ldc: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sbdsqr_work".}   
    proc dbdsqr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ncvt: lapack_int; nru: lapack_int; ncc: lapack_int;                             d: ptr cdouble; e: ptr cdouble; vt: ptr cdouble;                               ldvt: lapack_int; u: ptr cdouble; ldu: lapack_int;                             c: ptr cdouble; ldc: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dbdsqr_work".}   
    proc cbdsqr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ncvt: lapack_int; nru: lapack_int; ncc: lapack_int;                             d: ptr cfloat; e: ptr cfloat;                               vt: ptr lapack_complex_float; ldvt: lapack_int;                             u: ptr lapack_complex_float; ldu: lapack_int;                             c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr cfloat): lapack_int {.importc: "LAPACKE_cbdsqr_work".}   
    proc zbdsqr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ncvt: lapack_int; nru: lapack_int; ncc: lapack_int;                             d: ptr cdouble; e: ptr cdouble;                               vt: ptr lapack_complex_double; ldvt: lapack_int;                             u: ptr lapack_complex_double; ldu: lapack_int;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr cdouble): lapack_int {.importc: "LAPACKE_zbdsqr_work".}   
    proc sdisna_work *(job: char; m: lapack_int; n: lapack_int;                             d: ptr cfloat; sep: ptr cfloat): lapack_int {.importc: "LAPACKE_sdisna_work".}   
    proc ddisna_work *(job: char; m: lapack_int; n: lapack_int;                             d: ptr cdouble; sep: ptr cdouble): lapack_int {.importc: "LAPACKE_ddisna_work".}   
    proc sgbbrd_work *(matrix_order: cint; vect: char; m: lapack_int;                             n: lapack_int; ncc: lapack_int; kl: lapack_int;                             ku: lapack_int; ab: ptr cfloat; ldab: lapack_int;                             d: ptr cfloat; e: ptr cfloat; q: ptr cfloat;                               ldq: lapack_int; pt: ptr cfloat; ldpt: lapack_int;                             c: ptr cfloat; ldc: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sgbbrd_work".}   
    proc dgbbrd_work *(matrix_order: cint; vect: char; m: lapack_int;                             n: lapack_int; ncc: lapack_int; kl: lapack_int;                             ku: lapack_int; ab: ptr cdouble; ldab: lapack_int;                             d: ptr cdouble; e: ptr cdouble; q: ptr cdouble;                               ldq: lapack_int; pt: ptr cdouble; ldpt: lapack_int;                             c: ptr cdouble; ldc: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dgbbrd_work".}   
    proc cgbbrd_work *(matrix_order: cint; vect: char; m: lapack_int;                             n: lapack_int; ncc: lapack_int; kl: lapack_int;                             ku: lapack_int; ab: ptr lapack_complex_float;                               ldab: lapack_int; d: ptr cfloat; e: ptr cfloat;                               q: ptr lapack_complex_float; ldq: lapack_int;                             pt: ptr lapack_complex_float; ldpt: lapack_int;                             c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbbrd_work".}   
    proc zgbbrd_work *(matrix_order: cint; vect: char; m: lapack_int;                             n: lapack_int; ncc: lapack_int; kl: lapack_int;                             ku: lapack_int; ab: ptr lapack_complex_double;                             ldab: lapack_int; d: ptr cdouble; e: ptr cdouble;                               q: ptr lapack_complex_double; ldq: lapack_int;                             pt: ptr lapack_complex_double; ldpt: lapack_int;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbbrd_work".}   
    proc sgbcon_work *(matrix_order: cint; norm: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int; ab: ptr cfloat;                               ldab: lapack_int; ipiv: ptr lapack_int;                             anorm: cfloat; rcond: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgbcon_work".}   
    proc dgbcon_work *(matrix_order: cint; norm: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int; ab: ptr cdouble;                               ldab: lapack_int; ipiv: ptr lapack_int;                             anorm: cdouble; rcond: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgbcon_work".}   
    proc cgbcon_work *(matrix_order: cint; norm: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             ipiv: ptr lapack_int; anorm: cfloat;                               rcond: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbcon_work".}   
    proc zgbcon_work *(matrix_order: cint; norm: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             ipiv: ptr lapack_int; anorm: cdouble;                               rcond: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbcon_work".}   
    proc sgbequ_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int; ab: ptr cfloat;                               ldab: lapack_int; r: ptr cfloat; c: ptr cfloat;                               rowcnd: ptr cfloat; colcnd: ptr cfloat;                               amax: ptr cfloat): lapack_int {.importc: "LAPACKE_sgbequ_work".}   
    proc dgbequ_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int; ab: ptr cdouble;                               ldab: lapack_int; r: ptr cdouble; c: ptr cdouble;                               rowcnd: ptr cdouble; colcnd: ptr cdouble;                               amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dgbequ_work".}   
    proc cgbequ_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                               colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbequ_work".}   
    proc zgbequ_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             r: ptr cdouble; c: ptr cdouble; rowcnd: ptr cdouble;                               colcnd: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbequ_work".}   
    proc sgbequb_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              kl: lapack_int; ku: lapack_int; ab: ptr cfloat;                                ldab: lapack_int; r: ptr cfloat; c: ptr cfloat;                                rowcnd: ptr cfloat; colcnd: ptr cfloat;                                amax: ptr cfloat): lapack_int {.importc: "LAPACKE_sgbequb_work".}   
    proc dgbequb_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              kl: lapack_int; ku: lapack_int; ab: ptr cdouble;                                ldab: lapack_int; r: ptr cdouble; c: ptr cdouble;                                rowcnd: ptr cdouble; colcnd: ptr cdouble;                                amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dgbequb_work".}   
    proc cgbequb_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              kl: lapack_int; ku: lapack_int;                              ab: ptr lapack_complex_float; ldab: lapack_int;                              r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                                colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbequb_work".}   
    proc zgbequb_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              kl: lapack_int; ku: lapack_int;                              ab: ptr lapack_complex_double; ldab: lapack_int;                              r: ptr cdouble; c: ptr cdouble;                                rowcnd: ptr cdouble; colcnd: ptr cdouble;                                amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbequb_work".}   
    proc sgbrfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                             ab: ptr cfloat; ldab: lapack_int; afb: ptr cfloat;                               ldafb: lapack_int; ipiv: ptr lapack_int;                             b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                               ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgbrfs_work".}   
    proc dgbrfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                             ab: ptr cdouble; ldab: lapack_int; afb: ptr cdouble;                               ldafb: lapack_int; ipiv: ptr lapack_int;                             b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                               ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgbrfs_work".}   
    proc cgbrfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             afb: ptr lapack_complex_float; ldafb: lapack_int;                             ipiv: ptr lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; x: ptr lapack_complex_float;                               ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbrfs_work".}   
    proc zgbrfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             afb: ptr lapack_complex_double; ldafb: lapack_int;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbrfs_work".}   
    proc sgbrfsx_work *(matrix_order: cint; trans: char; equed: char;                                 n: lapack_int; kl: lapack_int; ku: lapack_int;                              nrhs: lapack_int; ab: ptr cfloat; ldab: lapack_int;                              afb: ptr cfloat; ldafb: lapack_int;                              ipiv: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                                b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                                ldx: lapack_int; rcond: ptr cfloat;                                berr: ptr cfloat; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr cfloat;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgbrfsx_work".}   
    proc dgbrfsx_work *(matrix_order: cint; trans: char; equed: char;                                 n: lapack_int; kl: lapack_int; ku: lapack_int;                              nrhs: lapack_int; ab: ptr cdouble;                                ldab: lapack_int; afb: ptr cdouble;                                ldafb: lapack_int; ipiv: ptr lapack_int;                              r: ptr cdouble; c: ptr cdouble; b: ptr cdouble;                                ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                              rcond: ptr cdouble; berr: ptr cdouble;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble; work: ptr cdouble;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgbrfsx_work".}   
    proc cgbrfsx_work *(matrix_order: cint; trans: char; equed: char;                                 n: lapack_int; kl: lapack_int; ku: lapack_int;                              nrhs: lapack_int; ab: ptr lapack_complex_float;                                ldab: lapack_int; afb: ptr lapack_complex_float;                                ldafb: lapack_int; ipiv: ptr lapack_int;                              r: ptr cfloat; c: ptr cfloat;                                b: ptr lapack_complex_float; ldb: lapack_int;                              x: ptr lapack_complex_float; ldx: lapack_int;                              rcond: ptr cfloat; berr: ptr cfloat;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr lapack_complex_float;                                rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbrfsx_work".}   
    proc zgbrfsx_work *(matrix_order: cint; trans: char; equed: char;                                 n: lapack_int; kl: lapack_int; ku: lapack_int;                              nrhs: lapack_int; ab: ptr lapack_complex_double;                              ldab: lapack_int; afb: ptr lapack_complex_double;                              ldafb: lapack_int; ipiv: ptr lapack_int;                              r: ptr cdouble; c: ptr cdouble;                                b: ptr lapack_complex_double; ldb: lapack_int;                              x: ptr lapack_complex_double; ldx: lapack_int;                              rcond: ptr cdouble; berr: ptr cdouble;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble;                                work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbrfsx_work".}   
    proc sgbsv_work *(matrix_order: cint; n: lapack_int; kl: lapack_int;                            ku: lapack_int; nrhs: lapack_int; ab: ptr cfloat;                              ldab: lapack_int; ipiv: ptr lapack_int;                            b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgbsv_work".}   
    proc dgbsv_work *(matrix_order: cint; n: lapack_int; kl: lapack_int;                            ku: lapack_int; nrhs: lapack_int; ab: ptr cdouble;                              ldab: lapack_int; ipiv: ptr lapack_int;                            b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgbsv_work".}   
    proc cgbsv_work *(matrix_order: cint; n: lapack_int; kl: lapack_int;                            ku: lapack_int; nrhs: lapack_int;                            ab: ptr lapack_complex_float; ldab: lapack_int;                            ipiv: ptr lapack_int; b: ptr lapack_complex_float;                              ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgbsv_work".}   
    proc zgbsv_work *(matrix_order: cint; n: lapack_int; kl: lapack_int;                            ku: lapack_int; nrhs: lapack_int;                            ab: ptr lapack_complex_double; ldab: lapack_int;                            ipiv: ptr lapack_int; b: ptr lapack_complex_double;                            ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgbsv_work".}   
    proc sgbsvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; kl: lapack_int; ku: lapack_int;                             nrhs: lapack_int; ab: ptr cfloat; ldab: lapack_int;                             afb: ptr cfloat; ldafb: lapack_int;                             ipiv: ptr lapack_int; equed: cstring; r: ptr cfloat;                               c: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                             x: ptr cfloat; ldx: lapack_int; rcond: ptr cfloat;                               ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgbsvx_work".}   
    proc dgbsvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; kl: lapack_int; ku: lapack_int;                             nrhs: lapack_int; ab: ptr cdouble; ldab: lapack_int;                             afb: ptr cdouble; ldafb: lapack_int;                             ipiv: ptr lapack_int; equed: cstring;                              r: ptr cdouble; c: ptr cdouble; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgbsvx_work".}   
    proc cgbsvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; kl: lapack_int; ku: lapack_int;                             nrhs: lapack_int; ab: ptr lapack_complex_float;                               ldab: lapack_int; afb: ptr lapack_complex_float;                               ldafb: lapack_int; ipiv: ptr lapack_int;                             equed: cstring; r: ptr cfloat; c: ptr cfloat;                               b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbsvx_work".}   
    proc zgbsvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; kl: lapack_int; ku: lapack_int;                             nrhs: lapack_int; ab: ptr lapack_complex_double;                             ldab: lapack_int; afb: ptr lapack_complex_double;                             ldafb: lapack_int; ipiv: ptr lapack_int;                             equed: cstring; r: ptr cdouble; c: ptr cdouble;                               b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbsvx_work".}   
    proc sgbsvxx_work *(matrix_order: cint; fact: char; trans: char;                                 n: lapack_int; kl: lapack_int; ku: lapack_int;                              nrhs: lapack_int; ab: ptr cfloat; ldab: lapack_int;                              afb: ptr cfloat; ldafb: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               r: ptr cfloat; c: ptr cfloat; b: ptr cfloat;                                ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                              rcond: ptr cfloat; rpvgrw: ptr cfloat;                                berr: ptr cfloat; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr cfloat;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgbsvxx_work".}   
    proc dgbsvxx_work *(matrix_order: cint; fact: char; trans: char;                                 n: lapack_int; kl: lapack_int; ku: lapack_int;                              nrhs: lapack_int; ab: ptr cdouble;                                ldab: lapack_int; afb: ptr cdouble;                                ldafb: lapack_int; ipiv: ptr lapack_int;                              equed: cstring; r: ptr cdouble; c: ptr cdouble;                                b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                                ldx: lapack_int; rcond: ptr cdouble;                                rpvgrw: ptr cdouble; berr: ptr cdouble;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble; work: ptr cdouble;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgbsvxx_work".}   
    proc cgbsvxx_work *(matrix_order: cint; fact: char; trans: char;                                 n: lapack_int; kl: lapack_int; ku: lapack_int;                              nrhs: lapack_int; ab: ptr lapack_complex_float;                                ldab: lapack_int; afb: ptr lapack_complex_float;                                ldafb: lapack_int; ipiv: ptr lapack_int;                              equed: cstring; r: ptr cfloat; c: ptr cfloat;                                b: ptr lapack_complex_float; ldb: lapack_int;                              x: ptr lapack_complex_float; ldx: lapack_int;                              rcond: ptr cfloat; rpvgrw: ptr cfloat;                                berr: ptr cfloat; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr lapack_complex_float;                                rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgbsvxx_work".}   
    proc zgbsvxx_work *(matrix_order: cint; fact: char; trans: char;                                 n: lapack_int; kl: lapack_int; ku: lapack_int;                              nrhs: lapack_int; ab: ptr lapack_complex_double;                              ldab: lapack_int; afb: ptr lapack_complex_double;                              ldafb: lapack_int; ipiv: ptr lapack_int;                              equed: cstring; r: ptr cdouble; c: ptr cdouble;                                b: ptr lapack_complex_double; ldb: lapack_int;                              x: ptr lapack_complex_double; ldx: lapack_int;                              rcond: ptr cdouble; rpvgrw: ptr cdouble;                                berr: ptr cdouble; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble;                                work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgbsvxx_work".}   
    proc sgbtrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int; ab: ptr cfloat;                               ldab: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgbtrf_work".}   
    proc dgbtrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int; ab: ptr cdouble;                               ldab: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgbtrf_work".}   
    proc cgbtrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgbtrf_work".}   
    proc zgbtrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgbtrf_work".}   
    proc sgbtrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                             ab: ptr cfloat; ldab: lapack_int;                             ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgbtrs_work".}   
    proc dgbtrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                             ab: ptr cdouble; ldab: lapack_int;                             ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgbtrs_work".}   
    proc cgbtrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             ipiv: ptr lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgbtrs_work".}   
    proc zgbtrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             kl: lapack_int; ku: lapack_int; nrhs: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgbtrs_work".}   
    proc sgebak_work *(matrix_order: cint; job: char; side: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             scale: ptr cfloat; m: lapack_int; v: ptr cfloat;                               ldv: lapack_int): lapack_int {.importc: "LAPACKE_sgebak_work".}   
    proc dgebak_work *(matrix_order: cint; job: char; side: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             scale: ptr cdouble; m: lapack_int; v: ptr cdouble;                               ldv: lapack_int): lapack_int {.importc: "LAPACKE_dgebak_work".}   
    proc cgebak_work *(matrix_order: cint; job: char; side: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             scale: ptr cfloat; m: lapack_int;                             v: ptr lapack_complex_float; ldv: lapack_int): lapack_int {.importc: "LAPACKE_cgebak_work".}   
    proc zgebak_work *(matrix_order: cint; job: char; side: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             scale: ptr cdouble; m: lapack_int;                             v: ptr lapack_complex_double; ldv: lapack_int): lapack_int {.importc: "LAPACKE_zgebak_work".}   
    proc sgebal_work *(matrix_order: cint; job: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; ilo: ptr lapack_int;                             ihi: ptr lapack_int; scale: ptr cfloat): lapack_int {.importc: "LAPACKE_sgebal_work".}   
    proc dgebal_work *(matrix_order: cint; job: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             scale: ptr cdouble): lapack_int {.importc: "LAPACKE_dgebal_work".}   
    proc cgebal_work *(matrix_order: cint; job: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             scale: ptr cfloat): lapack_int {.importc: "LAPACKE_cgebal_work".}   
    proc zgebal_work *(matrix_order: cint; job: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             scale: ptr cdouble): lapack_int {.importc: "LAPACKE_zgebal_work".}   
    proc sgebrd_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; d: ptr cfloat;                               e: ptr cfloat; tauq: ptr cfloat; taup: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgebrd_work".}   
    proc dgebrd_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; d: ptr cdouble;                               e: ptr cdouble; tauq: ptr cdouble;                               taup: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgebrd_work".}   
    proc cgebrd_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             d: ptr cfloat; e: ptr cfloat;                               tauq: ptr lapack_complex_float;                               taup: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cgebrd_work".}   
    proc zgebrd_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             d: ptr cdouble; e: ptr cdouble;                               tauq: ptr lapack_complex_double;                             taup: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zgebrd_work".}   
    proc sgecon_work *(matrix_order: cint; norm: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; anorm: cfloat;                               rcond: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgecon_work".}   
    proc dgecon_work *(matrix_order: cint; norm: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; anorm: cdouble;                               rcond: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgecon_work".}   
    proc cgecon_work *(matrix_order: cint; norm: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             anorm: cfloat; rcond: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgecon_work".}   
    proc zgecon_work *(matrix_order: cint; norm: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             anorm: cdouble; rcond: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgecon_work".}   
    proc sgeequ_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; r: ptr cfloat;                               c: ptr cfloat; rowcnd: ptr cfloat;                               colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeequ_work".}   
    proc dgeequ_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; r: ptr cdouble;                               c: ptr cdouble; rowcnd: ptr cdouble;                               colcnd: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeequ_work".}   
    proc cgeequ_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                               colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cgeequ_work".}   
    proc zgeequ_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             r: ptr cdouble; c: ptr cdouble; rowcnd: ptr cdouble;                               colcnd: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zgeequ_work".}   
    proc sgeequb_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr cfloat; lda: lapack_int; r: ptr cfloat;                                c: ptr cfloat; rowcnd: ptr cfloat;                                colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeequb_work".}   
    proc dgeequb_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr cdouble; lda: lapack_int; r: ptr cdouble;                                c: ptr cdouble; rowcnd: ptr cdouble;                                colcnd: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeequb_work".}   
    proc cgeequb_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                                colcnd: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cgeequb_work".}   
    proc zgeequb_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              r: ptr cdouble; c: ptr cdouble;                                rowcnd: ptr cdouble; colcnd: ptr cdouble;                                amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zgeequb_work".}   
    proc sgees_work *(matrix_order: cint; jobvs: char; sort: char;                               select: LAPACK_S_SELECT2; n: lapack_int;                            a: ptr cfloat; lda: lapack_int; sdim: ptr lapack_int;                            wr: ptr cfloat; wi: ptr cfloat; vs: ptr cfloat;                              ldvs: lapack_int; work: ptr cfloat;                              lwork: lapack_int; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_sgees_work".}   
    proc dgees_work *(matrix_order: cint; jobvs: char; sort: char;                               select: LAPACK_D_SELECT2; n: lapack_int;                            a: ptr cdouble; lda: lapack_int;                            sdim: ptr lapack_int; wr: ptr cdouble;                              wi: ptr cdouble; vs: ptr cdouble; ldvs: lapack_int;                            work: ptr cdouble; lwork: lapack_int;                            bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_dgees_work".}   
    proc cgees_work *(matrix_order: cint; jobvs: char; sort: char;                               select: LAPACK_C_SELECT1; n: lapack_int;                            a: ptr lapack_complex_float; lda: lapack_int;                            sdim: ptr lapack_int; w: ptr lapack_complex_float;                              vs: ptr lapack_complex_float; ldvs: lapack_int;                            work: ptr lapack_complex_float; lwork: lapack_int;                            rwork: ptr cfloat; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_cgees_work".}   
    proc zgees_work *(matrix_order: cint; jobvs: char; sort: char;                               select: LAPACK_Z_SELECT1; n: lapack_int;                            a: ptr lapack_complex_double; lda: lapack_int;                            sdim: ptr lapack_int; w: ptr lapack_complex_double;                            vs: ptr lapack_complex_double; ldvs: lapack_int;                            work: ptr lapack_complex_double; lwork: lapack_int;                            rwork: ptr cdouble; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_zgees_work".}   
    proc sgeesx_work *(matrix_order: cint; jobvs: char; sort: char;                                select: LAPACK_S_SELECT2; sense: char;                                n: lapack_int; a: ptr cfloat; lda: lapack_int;                             sdim: ptr lapack_int; wr: ptr cfloat;                               wi: ptr cfloat; vs: ptr cfloat; ldvs: lapack_int;                             rconde: ptr cfloat; rcondv: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int;                             bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_sgeesx_work".}   
    proc dgeesx_work *(matrix_order: cint; jobvs: char; sort: char;                                select: LAPACK_D_SELECT2; sense: char;                                n: lapack_int; a: ptr cdouble; lda: lapack_int;                             sdim: ptr lapack_int; wr: ptr cdouble;                               wi: ptr cdouble; vs: ptr cdouble; ldvs: lapack_int;                             rconde: ptr cdouble; rcondv: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int;                             bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_dgeesx_work".}   
    proc cgeesx_work *(matrix_order: cint; jobvs: char; sort: char;                                select: LAPACK_C_SELECT1; sense: char;                                n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; sdim: ptr lapack_int;                             w: ptr lapack_complex_float;                               vs: ptr lapack_complex_float; ldvs: lapack_int;                             rconde: ptr cfloat; rcondv: ptr cfloat;                               work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_cgeesx_work".}   
    proc zgeesx_work *(matrix_order: cint; jobvs: char; sort: char;                                select: LAPACK_Z_SELECT1; sense: char;                                n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; sdim: ptr lapack_int;                             w: ptr lapack_complex_double;                             vs: ptr lapack_complex_double; ldvs: lapack_int;                             rconde: ptr cdouble; rcondv: ptr cdouble;                               work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_zgeesx_work".}   
    proc sgeev_work *(matrix_order: cint; jobvl: char; jobvr: char;                               n: lapack_int; a: ptr cfloat; lda: lapack_int;                            wr: ptr cfloat; wi: ptr cfloat; vl: ptr cfloat;                              ldvl: lapack_int; vr: ptr cfloat; ldvr: lapack_int;                            work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgeev_work".}   
    proc dgeev_work *(matrix_order: cint; jobvl: char; jobvr: char;                               n: lapack_int; a: ptr cdouble; lda: lapack_int;                            wr: ptr cdouble; wi: ptr cdouble; vl: ptr cdouble;                              ldvl: lapack_int; vr: ptr cdouble; ldvr: lapack_int;                            work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgeev_work".}   
    proc cgeev_work *(matrix_order: cint; jobvl: char; jobvr: char;                               n: lapack_int; a: ptr lapack_complex_float;                              lda: lapack_int; w: ptr lapack_complex_float;                              vl: ptr lapack_complex_float; ldvl: lapack_int;                            vr: ptr lapack_complex_float; ldvr: lapack_int;                            work: ptr lapack_complex_float; lwork: lapack_int;                            rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgeev_work".}   
    proc zgeev_work *(matrix_order: cint; jobvl: char; jobvr: char;                               n: lapack_int; a: ptr lapack_complex_double;                            lda: lapack_int; w: ptr lapack_complex_double;                            vl: ptr lapack_complex_double; ldvl: lapack_int;                            vr: ptr lapack_complex_double; ldvr: lapack_int;                            work: ptr lapack_complex_double; lwork: lapack_int;                            rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgeev_work".}   
    proc sgeevx_work *(matrix_order: cint; balanc: char; jobvl: char;                                jobvr: char; sense: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; wr: ptr cfloat;                               wi: ptr cfloat; vl: ptr cfloat; ldvl: lapack_int;                             vr: ptr cfloat; ldvr: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             scale: ptr cfloat; abnrm: ptr cfloat;                               rconde: ptr cfloat; rcondv: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgeevx_work".}   
    proc dgeevx_work *(matrix_order: cint; balanc: char; jobvl: char;                                jobvr: char; sense: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; wr: ptr cdouble;                               wi: ptr cdouble; vl: ptr cdouble; ldvl: lapack_int;                             vr: ptr cdouble; ldvr: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             scale: ptr cdouble; abnrm: ptr cdouble;                               rconde: ptr cdouble; rcondv: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgeevx_work".}   
    proc cgeevx_work *(matrix_order: cint; balanc: char; jobvl: char;                                jobvr: char; sense: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             w: ptr lapack_complex_float;                               vl: ptr lapack_complex_float; ldvl: lapack_int;                             vr: ptr lapack_complex_float; ldvr: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             scale: ptr cfloat; abnrm: ptr cfloat;                               rconde: ptr cfloat; rcondv: ptr cfloat;                               work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgeevx_work".}   
    proc zgeevx_work *(matrix_order: cint; balanc: char; jobvl: char;                                jobvr: char; sense: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             w: ptr lapack_complex_double;                             vl: ptr lapack_complex_double; ldvl: lapack_int;                             vr: ptr lapack_complex_double; ldvr: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             scale: ptr cdouble; abnrm: ptr cdouble;                               rconde: ptr cdouble; rcondv: ptr cdouble;                               work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgeevx_work".}   
    proc sgehrd_work *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr cfloat; lda: lapack_int;                             tau: ptr cfloat; work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgehrd_work".}   
    proc dgehrd_work *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr cdouble; lda: lapack_int;                             tau: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgehrd_work".}   
    proc cgehrd_work *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cgehrd_work".}   
    proc zgehrd_work *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zgehrd_work".}   
    proc sgejsv_work *(matrix_order: cint; joba: char; jobu: char;                                jobv: char; jobr: char; jobt: char; jobp: char;                                m: lapack_int; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; sva: ptr cfloat; u: ptr cfloat;                               ldu: lapack_int; v: ptr cfloat; ldv: lapack_int;                             work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgejsv_work".}   
    proc dgejsv_work *(matrix_order: cint; joba: char; jobu: char;                                jobv: char; jobr: char; jobt: char; jobp: char;                                m: lapack_int; n: lapack_int; a: ptr cdouble;                               lda: lapack_int; sva: ptr cdouble; u: ptr cdouble;                               ldu: lapack_int; v: ptr cdouble; ldv: lapack_int;                             work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgejsv_work".}   
    proc sgelq2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               work: ptr cfloat): lapack_int {.importc: "LAPACKE_sgelq2_work".}   
    proc dgelq2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               work: ptr cdouble): lapack_int {.importc: "LAPACKE_dgelq2_work".}   
    proc cgelq2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgelq2_work".}   
    proc zgelq2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgelq2_work".}   
    proc sgelqf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgelqf_work".}   
    proc dgelqf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgelqf_work".}   
    proc cgelqf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cgelqf_work".}   
    proc zgelqf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zgelqf_work".}   
    proc sgels_work *(matrix_order: cint; trans: char; m: lapack_int;                            n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                              lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                            work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgels_work".}   
    proc dgels_work *(matrix_order: cint; trans: char; m: lapack_int;                            n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                              lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                            work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgels_work".}   
    proc cgels_work *(matrix_order: cint; trans: char; m: lapack_int;                            n: lapack_int; nrhs: lapack_int;                            a: ptr lapack_complex_float; lda: lapack_int;                            b: ptr lapack_complex_float; ldb: lapack_int;                            work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cgels_work".}   
    proc zgels_work *(matrix_order: cint; trans: char; m: lapack_int;                            n: lapack_int; nrhs: lapack_int;                            a: ptr lapack_complex_double; lda: lapack_int;                            b: ptr lapack_complex_double; ldb: lapack_int;                            work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zgels_work".}   
    proc sgelsd_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int; s: ptr cfloat;                               rcond: cfloat; rank: ptr lapack_int;                             work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgelsd_work".}   
    proc dgelsd_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int; s: ptr cdouble;                               rcond: cdouble; rank: ptr lapack_int;                             work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgelsd_work".}   
    proc cgelsd_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; s: ptr cfloat; rcond: cfloat;                               rank: ptr lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgelsd_work".}   
    proc zgelsd_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; s: ptr cdouble; rcond: cdouble;                               rank: ptr lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgelsd_work".}   
    proc sgelss_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int; s: ptr cfloat;                               rcond: cfloat; rank: ptr lapack_int;                             work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgelss_work".}   
    proc dgelss_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int; s: ptr cdouble;                               rcond: cdouble; rank: ptr lapack_int;                             work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgelss_work".}   
    proc cgelss_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; s: ptr cfloat; rcond: cfloat;                               rank: ptr lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgelss_work".}   
    proc zgelss_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; s: ptr cdouble; rcond: cdouble;                               rank: ptr lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgelss_work".}   
    proc sgelsy_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int;                             jpvt: ptr lapack_int; rcond: cfloat;                               rank: ptr lapack_int; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgelsy_work".}   
    proc dgelsy_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int;                             jpvt: ptr lapack_int; rcond: cdouble;                               rank: ptr lapack_int; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgelsy_work".}   
    proc cgelsy_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; jpvt: ptr lapack_int;                             rcond: cfloat; rank: ptr lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgelsy_work".}   
    proc zgelsy_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; jpvt: ptr lapack_int;                             rcond: cdouble; rank: ptr lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgelsy_work".}   
    proc sgeqlf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgeqlf_work".}   
    proc dgeqlf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgeqlf_work".}   
    proc cgeqlf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cgeqlf_work".}   
    proc zgeqlf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zgeqlf_work".}   
    proc sgeqp3_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int;                             jpvt: ptr lapack_int; tau: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgeqp3_work".}   
    proc dgeqp3_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int;                             jpvt: ptr lapack_int; tau: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgeqp3_work".}   
    proc cgeqp3_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             jpvt: ptr lapack_int; tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgeqp3_work".}   
    proc zgeqp3_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             jpvt: ptr lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgeqp3_work".}   
    proc sgeqpf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int;                             jpvt: ptr lapack_int; tau: ptr cfloat;                               work: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeqpf_work".}   
    proc dgeqpf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int;                             jpvt: ptr lapack_int; tau: ptr cdouble;                               work: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeqpf_work".}   
    proc cgeqpf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             jpvt: ptr lapack_int; tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgeqpf_work".}   
    proc zgeqpf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             jpvt: ptr lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgeqpf_work".}   
    proc sgeqr2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               work: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeqr2_work".}   
    proc dgeqr2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               work: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeqr2_work".}   
    proc cgeqr2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgeqr2_work".}   
    proc zgeqr2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgeqr2_work".}   
    proc sgeqrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgeqrf_work".}   
    proc dgeqrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgeqrf_work".}   
    proc cgeqrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cgeqrf_work".}   
    proc zgeqrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zgeqrf_work".}   
    proc sgeqrfp_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                                work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgeqrfp_work".}   
    proc dgeqrfp_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                                work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgeqrfp_work".}   
    proc cgeqrfp_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              tau: ptr lapack_complex_float;                                work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cgeqrfp_work".}   
    proc zgeqrfp_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              tau: ptr lapack_complex_double;                              work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zgeqrfp_work".}   
    proc sgerfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                             af: ptr cfloat; ldaf: lapack_int;                             ipiv: ptr lapack_int; b: ptr cfloat;                               ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgerfs_work".}   
    proc dgerfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                             af: ptr cdouble; ldaf: lapack_int;                             ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgerfs_work".}   
    proc cgerfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; af: ptr lapack_complex_float;                               ldaf: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgerfs_work".}   
    proc zgerfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; af: ptr lapack_complex_double;                             ldaf: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgerfs_work".}   
    proc sgerfsx_work *(matrix_order: cint; trans: char; equed: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                                lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                              ipiv: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                                b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                                ldx: lapack_int; rcond: ptr cfloat;                                berr: ptr cfloat; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr cfloat;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgerfsx_work".}   
    proc dgerfsx_work *(matrix_order: cint; trans: char; equed: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                                lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                              ipiv: ptr lapack_int; r: ptr cdouble;                                c: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                              x: ptr cdouble; ldx: lapack_int;                              rcond: ptr cdouble; berr: ptr cdouble;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble; work: ptr cdouble;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgerfsx_work".}   
    proc cgerfsx_work *(matrix_order: cint; trans: char; equed: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              af: ptr lapack_complex_float; ldaf: lapack_int;                              ipiv: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                                b: ptr lapack_complex_float; ldb: lapack_int;                              x: ptr lapack_complex_float; ldx: lapack_int;                              rcond: ptr cfloat; berr: ptr cfloat;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr lapack_complex_float;                                rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgerfsx_work".}   
    proc zgerfsx_work *(matrix_order: cint; trans: char; equed: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              af: ptr lapack_complex_double; ldaf: lapack_int;                              ipiv: ptr lapack_int; r: ptr cdouble;                                c: ptr cdouble; b: ptr lapack_complex_double;                              ldb: lapack_int; x: ptr lapack_complex_double;                              ldx: lapack_int; rcond: ptr cdouble;                                berr: ptr cdouble; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble;                                work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgerfsx_work".}   
    proc sgerqf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgerqf_work".}   
    proc dgerqf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgerqf_work".}   
    proc cgerqf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cgerqf_work".}   
    proc zgerqf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zgerqf_work".}   
    proc sgesdd_work *(matrix_order: cint; jobz: char; m: lapack_int;                             n: lapack_int; a: ptr cfloat; lda: lapack_int;                             s: ptr cfloat; u: ptr cfloat; ldu: lapack_int;                             vt: ptr cfloat; ldvt: lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgesdd_work".}   
    proc dgesdd_work *(matrix_order: cint; jobz: char; m: lapack_int;                             n: lapack_int; a: ptr cdouble; lda: lapack_int;                             s: ptr cdouble; u: ptr cdouble; ldu: lapack_int;                             vt: ptr cdouble; ldvt: lapack_int;                             work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgesdd_work".}   
    proc cgesdd_work *(matrix_order: cint; jobz: char; m: lapack_int;                             n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; s: ptr cfloat;                               u: ptr lapack_complex_float; ldu: lapack_int;                             vt: ptr lapack_complex_float; ldvt: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgesdd_work".}   
    proc zgesdd_work *(matrix_order: cint; jobz: char; m: lapack_int;                             n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; s: ptr cdouble;                               u: ptr lapack_complex_double; ldu: lapack_int;                             vt: ptr lapack_complex_double; ldvt: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgesdd_work".}   
    proc sgesv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int;                            b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgesv_work".}   
    proc dgesv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            a: ptr cdouble; lda: lapack_int;                            ipiv: ptr lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgesv_work".}   
    proc cgesv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            a: ptr lapack_complex_float; lda: lapack_int;                            ipiv: ptr lapack_int; b: ptr lapack_complex_float;                              ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgesv_work".}   
    proc zgesv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            a: ptr lapack_complex_double; lda: lapack_int;                            ipiv: ptr lapack_int; b: ptr lapack_complex_double;                            ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgesv_work".}   
    proc dsgesv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                             a: ptr cdouble; lda: lapack_int;                             ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             work: ptr cdouble; swork: ptr cfloat;                               iter: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsgesv_work".}   
    proc zcgesv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; work: ptr lapack_complex_double;                             swork: ptr lapack_complex_float; rwork: ptr cdouble;                               iter: ptr lapack_int): lapack_int {.importc: "LAPACKE_zcgesv_work".}   
    proc sgesvd_work *(matrix_order: cint; jobu: char; jobvt: char;                                m: lapack_int; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; s: ptr cfloat; u: ptr cfloat;                               ldu: lapack_int; vt: ptr cfloat; ldvt: lapack_int;                             work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgesvd_work".}   
    proc dgesvd_work *(matrix_order: cint; jobu: char; jobvt: char;                                m: lapack_int; n: lapack_int; a: ptr cdouble;                               lda: lapack_int; s: ptr cdouble; u: ptr cdouble;                               ldu: lapack_int; vt: ptr cdouble; ldvt: lapack_int;                             work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgesvd_work".}   
    proc cgesvd_work *(matrix_order: cint; jobu: char; jobvt: char;                                m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             s: ptr cfloat; u: ptr lapack_complex_float;                               ldu: lapack_int; vt: ptr lapack_complex_float;                               ldvt: lapack_int; work: ptr lapack_complex_float;                               lwork: lapack_int; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgesvd_work".}   
    proc zgesvd_work *(matrix_order: cint; jobu: char; jobvt: char;                                m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             s: ptr cdouble; u: ptr lapack_complex_double;                             ldu: lapack_int; vt: ptr lapack_complex_double;                             ldvt: lapack_int; work: ptr lapack_complex_double;                             lwork: lapack_int; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgesvd_work".}   
    proc sgesvj_work *(matrix_order: cint; joba: char; jobu: char;                                jobv: char; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; sva: ptr cfloat;                               mv: lapack_int; v: ptr cfloat; ldv: lapack_int;                             work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgesvj_work".}   
    proc dgesvj_work *(matrix_order: cint; joba: char; jobu: char;                                jobv: char; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; sva: ptr cdouble;                               mv: lapack_int; v: ptr cdouble; ldv: lapack_int;                             work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgesvj_work".}   
    proc sgesvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                               lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                             ipiv: ptr lapack_int; equed: cstring; r: ptr cfloat;                               c: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                             x: ptr cfloat; ldx: lapack_int; rcond: ptr cfloat;                               ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgesvx_work".}   
    proc dgesvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                               lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                             ipiv: ptr lapack_int; equed: cstring;                              r: ptr cdouble; c: ptr cdouble; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgesvx_work".}   
    proc cgesvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             af: ptr lapack_complex_float; ldaf: lapack_int;                             ipiv: ptr lapack_int; equed: cstring; r: ptr cfloat;                               c: ptr cfloat; b: ptr lapack_complex_float;                               ldb: lapack_int; x: ptr lapack_complex_float;                               ldx: lapack_int; rcond: ptr cfloat;                               ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgesvx_work".}   
    proc zgesvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             af: ptr lapack_complex_double; ldaf: lapack_int;                             ipiv: ptr lapack_int; equed: cstring;                              r: ptr cdouble; c: ptr cdouble;                               b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgesvx_work".}   
    proc sgesvxx_work *(matrix_order: cint; fact: char; trans: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                                lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               r: ptr cfloat; c: ptr cfloat; b: ptr cfloat;                                ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                              rcond: ptr cfloat; rpvgrw: ptr cfloat;                                berr: ptr cfloat; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr cfloat;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgesvxx_work".}   
    proc dgesvxx_work *(matrix_order: cint; fact: char; trans: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                                lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               r: ptr cdouble; c: ptr cdouble; b: ptr cdouble;                                ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                              rcond: ptr cdouble; rpvgrw: ptr cdouble;                                berr: ptr cdouble; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble; work: ptr cdouble;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgesvxx_work".}   
    proc cgesvxx_work *(matrix_order: cint; fact: char; trans: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              af: ptr lapack_complex_float; ldaf: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               r: ptr cfloat; c: ptr cfloat;                                b: ptr lapack_complex_float; ldb: lapack_int;                              x: ptr lapack_complex_float; ldx: lapack_int;                              rcond: ptr cfloat; rpvgrw: ptr cfloat;                                berr: ptr cfloat; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr lapack_complex_float;                                rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgesvxx_work".}   
    proc zgesvxx_work *(matrix_order: cint; fact: char; trans: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              af: ptr lapack_complex_double; ldaf: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               r: ptr cdouble; c: ptr cdouble;                                b: ptr lapack_complex_double; ldb: lapack_int;                              x: ptr lapack_complex_double; ldx: lapack_int;                              rcond: ptr cdouble; rpvgrw: ptr cdouble;                                berr: ptr cdouble; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble;                                work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgesvxx_work".}   
    proc sgetf2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgetf2_work".}   
    proc dgetf2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int;                             ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgetf2_work".}   
    proc cgetf2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgetf2_work".}   
    proc zgetf2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgetf2_work".}   
    proc sgetrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgetrf_work".}   
    proc dgetrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int;                             ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgetrf_work".}   
    proc cgetrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgetrf_work".}   
    proc zgetrf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgetrf_work".}   
    proc sgetri_work *(matrix_order: cint; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; ipiv: ptr lapack_int;                             work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgetri_work".}   
    proc dgetri_work *(matrix_order: cint; n: lapack_int; a: ptr cdouble;                               lda: lapack_int; ipiv: ptr lapack_int;                             work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgetri_work".}   
    proc cgetri_work *(matrix_order: cint; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ipiv: ptr lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cgetri_work".}   
    proc zgetri_work *(matrix_order: cint; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ipiv: ptr lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zgetri_work".}   
    proc sgetrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                             ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgetrs_work".}   
    proc dgetrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                             ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgetrs_work".}   
    proc cgetrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgetrs_work".}   
    proc zgetrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgetrs_work".}   
    proc sggbak_work *(matrix_order: cint; job: char; side: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             lscale: ptr cfloat; rscale: ptr cfloat;                               m: lapack_int; v: ptr cfloat; ldv: lapack_int): lapack_int {.importc: "LAPACKE_sggbak_work".}   
    proc dggbak_work *(matrix_order: cint; job: char; side: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             lscale: ptr cdouble; rscale: ptr cdouble;                               m: lapack_int; v: ptr cdouble; ldv: lapack_int): lapack_int {.importc: "LAPACKE_dggbak_work".}   
    proc cggbak_work *(matrix_order: cint; job: char; side: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             lscale: ptr cfloat; rscale: ptr cfloat;                               m: lapack_int; v: ptr lapack_complex_float;                               ldv: lapack_int): lapack_int {.importc: "LAPACKE_cggbak_work".}   
    proc zggbak_work *(matrix_order: cint; job: char; side: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             lscale: ptr cdouble; rscale: ptr cdouble;                               m: lapack_int; v: ptr lapack_complex_double;                             ldv: lapack_int): lapack_int {.importc: "LAPACKE_zggbak_work".}   
    proc sggbal_work *(matrix_order: cint; job: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int; ilo: ptr lapack_int;                             ihi: ptr lapack_int; lscale: ptr cfloat;                               rscale: ptr cfloat; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sggbal_work".}   
    proc dggbal_work *(matrix_order: cint; job: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; ilo: ptr lapack_int;                             ihi: ptr lapack_int; lscale: ptr cdouble;                               rscale: ptr cdouble; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dggbal_work".}   
    proc cggbal_work *(matrix_order: cint; job: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             lscale: ptr cfloat; rscale: ptr cfloat;                               work: ptr cfloat): lapack_int {.importc: "LAPACKE_cggbal_work".}   
    proc zggbal_work *(matrix_order: cint; job: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             lscale: ptr cdouble; rscale: ptr cdouble;                               work: ptr cdouble): lapack_int {.importc: "LAPACKE_zggbal_work".}   
    proc sgges_work *(matrix_order: cint; jobvsl: char; jobvsr: char;                               sort: char; selctg: LAPACK_S_SELECT3; n: lapack_int;                            a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                              ldb: lapack_int; sdim: ptr lapack_int;                            alphar: ptr cfloat; alphai: ptr cfloat;                              beta: ptr cfloat; vsl: ptr cfloat; ldvsl: lapack_int;                            vsr: ptr cfloat; ldvsr: lapack_int; work: ptr cfloat;                              lwork: lapack_int; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_sgges_work".}   
    proc dgges_work *(matrix_order: cint; jobvsl: char; jobvsr: char;                               sort: char; selctg: LAPACK_D_SELECT3; n: lapack_int;                            a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                              ldb: lapack_int; sdim: ptr lapack_int;                            alphar: ptr cdouble; alphai: ptr cdouble;                              beta: ptr cdouble; vsl: ptr cdouble;                              ldvsl: lapack_int; vsr: ptr cdouble;                              ldvsr: lapack_int; work: ptr cdouble;                              lwork: lapack_int; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_dgges_work".}   
    proc cgges_work *(matrix_order: cint; jobvsl: char; jobvsr: char;                               sort: char; selctg: LAPACK_C_SELECT2; n: lapack_int;                            a: ptr lapack_complex_float; lda: lapack_int;                            b: ptr lapack_complex_float; ldb: lapack_int;                            sdim: ptr lapack_int;                            alpha: ptr lapack_complex_float;                              beta: ptr lapack_complex_float;                              vsl: ptr lapack_complex_float; ldvsl: lapack_int;                            vsr: ptr lapack_complex_float; ldvsr: lapack_int;                            work: ptr lapack_complex_float; lwork: lapack_int;                            rwork: ptr cfloat; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_cgges_work".}   
    proc zgges_work *(matrix_order: cint; jobvsl: char; jobvsr: char;                               sort: char; selctg: LAPACK_Z_SELECT2; n: lapack_int;                            a: ptr lapack_complex_double; lda: lapack_int;                            b: ptr lapack_complex_double; ldb: lapack_int;                            sdim: ptr lapack_int;                            alpha: ptr lapack_complex_double;                            beta: ptr lapack_complex_double;                            vsl: ptr lapack_complex_double; ldvsl: lapack_int;                            vsr: ptr lapack_complex_double; ldvsr: lapack_int;                            work: ptr lapack_complex_double; lwork: lapack_int;                            rwork: ptr cdouble; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_zgges_work".}   
    proc sggesx_work *(matrix_order: cint; jobvsl: char; jobvsr: char;                                sort: char; selctg: LAPACK_S_SELECT3; sense: char;                                n: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int;                             sdim: ptr lapack_int; alphar: ptr cfloat;                               alphai: ptr cfloat; beta: ptr cfloat;                               vsl: ptr cfloat; ldvsl: lapack_int; vsr: ptr cfloat;                               ldvsr: lapack_int; rconde: ptr cfloat;                               rcondv: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_sggesx_work".}   
    proc dggesx_work *(matrix_order: cint; jobvsl: char; jobvsr: char;                                sort: char; selctg: LAPACK_D_SELECT3; sense: char;                                n: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int;                             sdim: ptr lapack_int; alphar: ptr cdouble;                               alphai: ptr cdouble; beta: ptr cdouble;                               vsl: ptr cdouble; ldvsl: lapack_int;                             vsr: ptr cdouble; ldvsr: lapack_int;                             rconde: ptr cdouble; rcondv: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int;                             bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_dggesx_work".}   
    proc cggesx_work *(matrix_order: cint; jobvsl: char; jobvsr: char;                                sort: char; selctg: LAPACK_C_SELECT2; sense: char;                                n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; sdim: ptr lapack_int;                             alpha: ptr lapack_complex_float;                               beta: ptr lapack_complex_float;                               vsl: ptr lapack_complex_float; ldvsl: lapack_int;                             vsr: ptr lapack_complex_float; ldvsr: lapack_int;                             rconde: ptr cfloat; rcondv: ptr cfloat;                               work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat; iwork: ptr lapack_int;                             liwork: lapack_int; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_cggesx_work".}   
    proc zggesx_work *(matrix_order: cint; jobvsl: char; jobvsr: char;                                sort: char; selctg: LAPACK_Z_SELECT2; sense: char;                                n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; sdim: ptr lapack_int;                             alpha: ptr lapack_complex_double;                             beta: ptr lapack_complex_double;                             vsl: ptr lapack_complex_double; ldvsl: lapack_int;                             vsr: ptr lapack_complex_double; ldvsr: lapack_int;                             rconde: ptr cdouble; rcondv: ptr cdouble;                               work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble; iwork: ptr lapack_int;                             liwork: lapack_int; bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_zggesx_work".}   
    proc sggev_work *(matrix_order: cint; jobvl: char; jobvr: char;                               n: lapack_int; a: ptr cfloat; lda: lapack_int;                            b: ptr cfloat; ldb: lapack_int; alphar: ptr cfloat;                              alphai: ptr cfloat; beta: ptr cfloat; vl: ptr cfloat;                              ldvl: lapack_int; vr: ptr cfloat; ldvr: lapack_int;                            work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sggev_work".}   
    proc dggev_work *(matrix_order: cint; jobvl: char; jobvr: char;                               n: lapack_int; a: ptr cdouble; lda: lapack_int;                            b: ptr cdouble; ldb: lapack_int; alphar: ptr cdouble;                              alphai: ptr cdouble; beta: ptr cdouble;                              vl: ptr cdouble; ldvl: lapack_int; vr: ptr cdouble;                              ldvr: lapack_int; work: ptr cdouble;                              lwork: lapack_int): lapack_int {.importc: "LAPACKE_dggev_work".}   
    proc cggev_work *(matrix_order: cint; jobvl: char; jobvr: char;                               n: lapack_int; a: ptr lapack_complex_float;                              lda: lapack_int; b: ptr lapack_complex_float;                              ldb: lapack_int; alpha: ptr lapack_complex_float;                              beta: ptr lapack_complex_float;                              vl: ptr lapack_complex_float; ldvl: lapack_int;                            vr: ptr lapack_complex_float; ldvr: lapack_int;                            work: ptr lapack_complex_float; lwork: lapack_int;                            rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cggev_work".}   
    proc zggev_work *(matrix_order: cint; jobvl: char; jobvr: char;                               n: lapack_int; a: ptr lapack_complex_double;                            lda: lapack_int; b: ptr lapack_complex_double;                            ldb: lapack_int; alpha: ptr lapack_complex_double;                            beta: ptr lapack_complex_double;                            vl: ptr lapack_complex_double; ldvl: lapack_int;                            vr: ptr lapack_complex_double; ldvr: lapack_int;                            work: ptr lapack_complex_double; lwork: lapack_int;                            rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zggev_work".}   
    proc sggevx_work *(matrix_order: cint; balanc: char; jobvl: char;                                jobvr: char; sense: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int; alphar: ptr cfloat;                               alphai: ptr cfloat; beta: ptr cfloat;                               vl: ptr cfloat; ldvl: lapack_int; vr: ptr cfloat;                               ldvr: lapack_int; ilo: ptr lapack_int;                             ihi: ptr lapack_int; lscale: ptr cfloat;                               rscale: ptr cfloat; abnrm: ptr cfloat;                               bbnrm: ptr cfloat; rconde: ptr cfloat;                               rcondv: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_sggevx_work".}   
    proc dggevx_work *(matrix_order: cint; balanc: char; jobvl: char;                                jobvr: char; sense: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; alphar: ptr cdouble;                               alphai: ptr cdouble; beta: ptr cdouble;                               vl: ptr cdouble; ldvl: lapack_int; vr: ptr cdouble;                               ldvr: lapack_int; ilo: ptr lapack_int;                             ihi: ptr lapack_int; lscale: ptr cdouble;                               rscale: ptr cdouble; abnrm: ptr cdouble;                               bbnrm: ptr cdouble; rconde: ptr cdouble;                               rcondv: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_dggevx_work".}   
    proc cggevx_work *(matrix_order: cint; balanc: char; jobvl: char;                                jobvr: char; sense: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             alpha: ptr lapack_complex_float;                               beta: ptr lapack_complex_float;                               vl: ptr lapack_complex_float; ldvl: lapack_int;                             vr: ptr lapack_complex_float; ldvr: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             lscale: ptr cfloat; rscale: ptr cfloat;                               abnrm: ptr cfloat; bbnrm: ptr cfloat;                               rconde: ptr cfloat; rcondv: ptr cfloat;                               work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat; iwork: ptr lapack_int;                             bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_cggevx_work".}   
    proc zggevx_work *(matrix_order: cint; balanc: char; jobvl: char;                                jobvr: char; sense: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             alpha: ptr lapack_complex_double;                             beta: ptr lapack_complex_double;                             vl: ptr lapack_complex_double; ldvl: lapack_int;                             vr: ptr lapack_complex_double; ldvr: lapack_int;                             ilo: ptr lapack_int; ihi: ptr lapack_int;                             lscale: ptr cdouble; rscale: ptr cdouble;                               abnrm: ptr cdouble; bbnrm: ptr cdouble;                               rconde: ptr cdouble; rcondv: ptr cdouble;                               work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble; iwork: ptr lapack_int;                             bwork: ptr lapack_logical): lapack_int {.importc: "LAPACKE_zggevx_work".}   
    proc sggglm_work *(matrix_order: cint; n: lapack_int; m: lapack_int;                             p: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int; d: ptr cfloat;                               x: ptr cfloat; y: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sggglm_work".}   
    proc dggglm_work *(matrix_order: cint; n: lapack_int; m: lapack_int;                             p: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int; d: ptr cdouble;                               x: ptr cdouble; y: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dggglm_work".}   
    proc cggglm_work *(matrix_order: cint; n: lapack_int; m: lapack_int;                             p: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; d: ptr lapack_complex_float;                               x: ptr lapack_complex_float;                               y: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cggglm_work".}   
    proc zggglm_work *(matrix_order: cint; n: lapack_int; m: lapack_int;                             p: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; d: ptr lapack_complex_double;                             x: ptr lapack_complex_double;                             y: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zggglm_work".}   
    proc sgghrd_work *(matrix_order: cint; compq: char; compz: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int; q: ptr cfloat; ldq: lapack_int;                             z: ptr cfloat; ldz: lapack_int): lapack_int {.importc: "LAPACKE_sgghrd_work".}   
    proc dgghrd_work *(matrix_order: cint; compq: char; compz: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; q: ptr cdouble; ldq: lapack_int;                             z: ptr cdouble; ldz: lapack_int): lapack_int {.importc: "LAPACKE_dgghrd_work".}   
    proc cgghrd_work *(matrix_order: cint; compq: char; compz: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             q: ptr lapack_complex_float; ldq: lapack_int;                             z: ptr lapack_complex_float; ldz: lapack_int): lapack_int {.importc: "LAPACKE_cgghrd_work".}   
    proc zgghrd_work *(matrix_order: cint; compq: char; compz: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             q: ptr lapack_complex_double; ldq: lapack_int;                             z: ptr lapack_complex_double; ldz: lapack_int): lapack_int {.importc: "LAPACKE_zgghrd_work".}   
    proc sgglse_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             p: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int; c: ptr cfloat;                               d: ptr cfloat; x: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sgglse_work".}   
    proc dgglse_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             p: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int; c: ptr cdouble;                               d: ptr cdouble; x: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dgglse_work".}   
    proc cgglse_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             p: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; c: ptr lapack_complex_float;                               d: ptr lapack_complex_float;                               x: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cgglse_work".}   
    proc zgglse_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             p: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; c: ptr lapack_complex_double;                             d: ptr lapack_complex_double;                             x: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zgglse_work".}   
    proc sggqrf_work *(matrix_order: cint; n: lapack_int; m: lapack_int;                             p: lapack_int; a: ptr cfloat; lda: lapack_int;                             taua: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                             taub: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sggqrf_work".}   
    proc dggqrf_work *(matrix_order: cint; n: lapack_int; m: lapack_int;                             p: lapack_int; a: ptr cdouble; lda: lapack_int;                             taua: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                             taub: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dggqrf_work".}   
    proc cggqrf_work *(matrix_order: cint; n: lapack_int; m: lapack_int;                             p: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; taua: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int;                             taub: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cggqrf_work".}   
    proc zggqrf_work *(matrix_order: cint; n: lapack_int; m: lapack_int;                             p: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; taua: ptr lapack_complex_double;                             b: ptr lapack_complex_double; ldb: lapack_int;                             taub: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zggqrf_work".}   
    proc sggrqf_work *(matrix_order: cint; m: lapack_int; p: lapack_int;                             n: lapack_int; a: ptr cfloat; lda: lapack_int;                             taua: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                             taub: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sggrqf_work".}   
    proc dggrqf_work *(matrix_order: cint; m: lapack_int; p: lapack_int;                             n: lapack_int; a: ptr cdouble; lda: lapack_int;                             taua: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                             taub: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dggrqf_work".}   
    proc cggrqf_work *(matrix_order: cint; m: lapack_int; p: lapack_int;                             n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; taua: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int;                             taub: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cggrqf_work".}   
    proc zggrqf_work *(matrix_order: cint; m: lapack_int; p: lapack_int;                             n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; taua: ptr lapack_complex_double;                             b: ptr lapack_complex_double; ldb: lapack_int;                             taub: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zggrqf_work".}   
    proc sggsvd_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; n: lapack_int;                             p: lapack_int; k: ptr lapack_int; l: ptr lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int; alpha: ptr cfloat;                               beta: ptr cfloat; u: ptr cfloat; ldu: lapack_int;                             v: ptr cfloat; ldv: lapack_int; q: ptr cfloat;                               ldq: lapack_int; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sggsvd_work".}   
    proc dggsvd_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; n: lapack_int;                             p: lapack_int; k: ptr lapack_int; l: ptr lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; alpha: ptr cdouble;                               beta: ptr cdouble; u: ptr cdouble; ldu: lapack_int;                             v: ptr cdouble; ldv: lapack_int; q: ptr cdouble;                               ldq: lapack_int; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dggsvd_work".}   
    proc cggsvd_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; n: lapack_int;                             p: lapack_int; k: ptr lapack_int; l: ptr lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             alpha: ptr cfloat; beta: ptr cfloat;                               u: ptr lapack_complex_float; ldu: lapack_int;                             v: ptr lapack_complex_float; ldv: lapack_int;                             q: ptr lapack_complex_float; ldq: lapack_int;                             work: ptr lapack_complex_float; rwork: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_cggsvd_work".}   
    proc zggsvd_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; n: lapack_int;                             p: lapack_int; k: ptr lapack_int; l: ptr lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             alpha: ptr cdouble; beta: ptr cdouble;                               u: ptr lapack_complex_double; ldu: lapack_int;                             v: ptr lapack_complex_double; ldv: lapack_int;                             q: ptr lapack_complex_double; ldq: lapack_int;                             work: ptr lapack_complex_double; rwork: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_zggsvd_work".}   
    proc sggsvp_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; p: lapack_int;                             n: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int; tola: cfloat;                               tolb: cfloat; k: ptr lapack_int; l: ptr lapack_int;                             u: ptr cfloat; ldu: lapack_int; v: ptr cfloat;                               ldv: lapack_int; q: ptr cfloat; ldq: lapack_int;                             iwork: ptr lapack_int; tau: ptr cfloat;                               work: ptr cfloat): lapack_int {.importc: "LAPACKE_sggsvp_work".}   
    proc dggsvp_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; p: lapack_int;                             n: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int; tola: cdouble;                               tolb: cdouble; k: ptr lapack_int; l: ptr lapack_int;                             u: ptr cdouble; ldu: lapack_int; v: ptr cdouble;                               ldv: lapack_int; q: ptr cdouble; ldq: lapack_int;                             iwork: ptr lapack_int; tau: ptr cdouble;                               work: ptr cdouble): lapack_int {.importc: "LAPACKE_dggsvp_work".}   
    proc cggsvp_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; p: lapack_int;                             n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; tola: cfloat; tolb: cfloat;                               k: ptr lapack_int; l: ptr lapack_int;                             u: ptr lapack_complex_float; ldu: lapack_int;                             v: ptr lapack_complex_float; ldv: lapack_int;                             q: ptr lapack_complex_float; ldq: lapack_int;                             iwork: ptr lapack_int; rwork: ptr cfloat;                               tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cggsvp_work".}   
    proc zggsvp_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; p: lapack_int;                             n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; tola: cdouble; tolb: cdouble;                               k: ptr lapack_int; l: ptr lapack_int;                             u: ptr lapack_complex_double; ldu: lapack_int;                             v: ptr lapack_complex_double; ldv: lapack_int;                             q: ptr lapack_complex_double; ldq: lapack_int;                             iwork: ptr lapack_int; rwork: ptr cdouble;                               tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zggsvp_work".}   
    proc sgtcon_work *(norm: char; n: lapack_int; dl: ptr cfloat;                               d: ptr cfloat; du: ptr cfloat; du2: ptr cfloat;                               ipiv: ptr lapack_int; anorm: cfloat;                               rcond: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgtcon_work".}   
    proc dgtcon_work *(norm: char; n: lapack_int; dl: ptr cdouble;                               d: ptr cdouble; du: ptr cdouble; du2: ptr cdouble;                               ipiv: ptr lapack_int; anorm: cdouble;                               rcond: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgtcon_work".}   
    proc cgtcon_work *(norm: char; n: lapack_int;                             dl: ptr lapack_complex_float;                               d: ptr lapack_complex_float;                               du: ptr lapack_complex_float;                               du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                             anorm: cfloat; rcond: ptr cfloat;                               work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgtcon_work".}   
    proc zgtcon_work *(norm: char; n: lapack_int;                             dl: ptr lapack_complex_double;                             d: ptr lapack_complex_double;                             du: ptr lapack_complex_double;                             du2: ptr lapack_complex_double;                             ipiv: ptr lapack_int; anorm: cdouble;                               rcond: ptr cdouble; work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgtcon_work".}   
    proc sgtrfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; dl: ptr cfloat; d: ptr cfloat;                               du: ptr cfloat; dlf: ptr cfloat; df: ptr cfloat;                               duf: ptr cfloat; du2: ptr cfloat;                               ipiv: ptr lapack_int; b: ptr cfloat;                               ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgtrfs_work".}   
    proc dgtrfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; dl: ptr cdouble; d: ptr cdouble;                               du: ptr cdouble; dlf: ptr cdouble; df: ptr cdouble;                               duf: ptr cdouble; du2: ptr cdouble;                               ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgtrfs_work".}   
    proc cgtrfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; dl: ptr lapack_complex_float;                               d: ptr lapack_complex_float;                               du: ptr lapack_complex_float;                               dlf: ptr lapack_complex_float;                               df: ptr lapack_complex_float;                               duf: ptr lapack_complex_float;                               du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgtrfs_work".}   
    proc zgtrfs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; dl: ptr lapack_complex_double;                             d: ptr lapack_complex_double;                             du: ptr lapack_complex_double;                             dlf: ptr lapack_complex_double;                             df: ptr lapack_complex_double;                             duf: ptr lapack_complex_double;                             du2: ptr lapack_complex_double;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgtrfs_work".}   
    proc sgtsv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            dl: ptr cfloat; d: ptr cfloat; du: ptr cfloat;                              b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgtsv_work".}   
    proc dgtsv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            dl: ptr cdouble; d: ptr cdouble; du: ptr cdouble;                              b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgtsv_work".}   
    proc cgtsv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            dl: ptr lapack_complex_float;                              d: ptr lapack_complex_float;                              du: ptr lapack_complex_float;                              b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgtsv_work".}   
    proc zgtsv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            dl: ptr lapack_complex_double;                            d: ptr lapack_complex_double;                            du: ptr lapack_complex_double;                            b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgtsv_work".}   
    proc sgtsvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; nrhs: lapack_int; dl: ptr cfloat;                               d: ptr cfloat; du: ptr cfloat; dlf: ptr cfloat;                               df: ptr cfloat; duf: ptr cfloat; du2: ptr cfloat;                               ipiv: ptr lapack_int; b: ptr cfloat;                               ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgtsvx_work".}   
    proc dgtsvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; nrhs: lapack_int; dl: ptr cdouble;                               d: ptr cdouble; du: ptr cdouble; dlf: ptr cdouble;                               df: ptr cdouble; duf: ptr cdouble; du2: ptr cdouble;                               ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgtsvx_work".}   
    proc cgtsvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; nrhs: lapack_int;                             dl: ptr lapack_complex_float;                               d: ptr lapack_complex_float;                               du: ptr lapack_complex_float;                               dlf: ptr lapack_complex_float;                               df: ptr lapack_complex_float;                               duf: ptr lapack_complex_float;                               du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cgtsvx_work".}   
    proc zgtsvx_work *(matrix_order: cint; fact: char; trans: char;                                n: lapack_int; nrhs: lapack_int;                             dl: ptr lapack_complex_double;                             d: ptr lapack_complex_double;                             du: ptr lapack_complex_double;                             dlf: ptr lapack_complex_double;                             df: ptr lapack_complex_double;                             duf: ptr lapack_complex_double;                             du2: ptr lapack_complex_double;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; rcond: ptr cdouble;                               ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zgtsvx_work".}   
    proc sgttrf_work *(n: lapack_int; dl: ptr cfloat; d: ptr cfloat;                               du: ptr cfloat; du2: ptr cfloat;                               ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sgttrf_work".}   
    proc dgttrf_work *(n: lapack_int; dl: ptr cdouble; d: ptr cdouble;                               du: ptr cdouble; du2: ptr cdouble;                               ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dgttrf_work".}   
    proc cgttrf_work *(n: lapack_int; dl: ptr lapack_complex_float;                               d: ptr lapack_complex_float;                               du: ptr lapack_complex_float;                               du2: ptr lapack_complex_float; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cgttrf_work".}   
    proc zgttrf_work *(n: lapack_int; dl: ptr lapack_complex_double;                             d: ptr lapack_complex_double;                             du: ptr lapack_complex_double;                             du2: ptr lapack_complex_double; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zgttrf_work".}   
    proc sgttrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; dl: ptr cfloat; d: ptr cfloat;                               du: ptr cfloat; du2: ptr cfloat;                               ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sgttrs_work".}   
    proc dgttrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; dl: ptr cdouble; d: ptr cdouble;                               du: ptr cdouble; du2: ptr cdouble;                               ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_dgttrs_work".}   
    proc cgttrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; dl: ptr lapack_complex_float;                               d: ptr lapack_complex_float;                               du: ptr lapack_complex_float;                               du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cgttrs_work".}   
    proc zgttrs_work *(matrix_order: cint; trans: char; n: lapack_int;                             nrhs: lapack_int; dl: ptr lapack_complex_double;                             d: ptr lapack_complex_double;                             du: ptr lapack_complex_double;                             du2: ptr lapack_complex_double;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int): lapack_int {.importc: "LAPACKE_zgttrs_work".}   
    proc chbev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; kd: lapack_int;                            ab: ptr lapack_complex_float; ldab: lapack_int;                            w: ptr cfloat; z: ptr lapack_complex_float;                              ldz: lapack_int; work: ptr lapack_complex_float;                              rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chbev_work".}   
    proc zhbev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; kd: lapack_int;                            ab: ptr lapack_complex_double; ldab: lapack_int;                            w: ptr cdouble; z: ptr lapack_complex_double;                            ldz: lapack_int; work: ptr lapack_complex_double;                            rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhbev_work".}   
    proc chbevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; kd: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             w: ptr cfloat; z: ptr lapack_complex_float;                               ldz: lapack_int; work: ptr lapack_complex_float;                               lwork: lapack_int; rwork: ptr cfloat;                               lrwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_chbevd_work".}   
    proc zhbevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; kd: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             w: ptr cdouble; z: ptr lapack_complex_double;                             ldz: lapack_int; work: ptr lapack_complex_double;                             lwork: lapack_int; rwork: ptr cdouble;                               lrwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_zhbevd_work".}   
    proc chbevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; kd: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             q: ptr lapack_complex_float; ldq: lapack_int;                             vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                             w: ptr cfloat; z: ptr lapack_complex_float;                               ldz: lapack_int; work: ptr lapack_complex_float;                               rwork: ptr cfloat; iwork: ptr lapack_int;                             ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_chbevx_work".}   
    proc zhbevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; kd: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             q: ptr lapack_complex_double; ldq: lapack_int;                             vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; abstol: cdouble; m: ptr lapack_int;                             w: ptr cdouble; z: ptr lapack_complex_double;                             ldz: lapack_int; work: ptr lapack_complex_double;                             rwork: ptr cdouble; iwork: ptr lapack_int;                             ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhbevx_work".}   
    proc chbgst_work *(matrix_order: cint; vect: char; uplo: char;                                n: lapack_int; ka: lapack_int; kb: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             bb: ptr lapack_complex_float; ldbb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chbgst_work".}   
    proc zhbgst_work *(matrix_order: cint; vect: char; uplo: char;                                n: lapack_int; ka: lapack_int; kb: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             bb: ptr lapack_complex_double; ldbb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhbgst_work".}   
    proc chbgv_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; ka: lapack_int; kb: lapack_int;                            ab: ptr lapack_complex_float; ldab: lapack_int;                            bb: ptr lapack_complex_float; ldbb: lapack_int;                            w: ptr cfloat; z: ptr lapack_complex_float;                              ldz: lapack_int; work: ptr lapack_complex_float;                              rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chbgv_work".}   
    proc zhbgv_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; ka: lapack_int; kb: lapack_int;                            ab: ptr lapack_complex_double; ldab: lapack_int;                            bb: ptr lapack_complex_double; ldbb: lapack_int;                            w: ptr cdouble; z: ptr lapack_complex_double;                            ldz: lapack_int; work: ptr lapack_complex_double;                            rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhbgv_work".}   
    proc chbgvd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; ka: lapack_int; kb: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             bb: ptr lapack_complex_float; ldbb: lapack_int;                             w: ptr cfloat; z: ptr lapack_complex_float;                               ldz: lapack_int; work: ptr lapack_complex_float;                               lwork: lapack_int; rwork: ptr cfloat;                               lrwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_chbgvd_work".}   
    proc zhbgvd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; ka: lapack_int; kb: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             bb: ptr lapack_complex_double; ldbb: lapack_int;                             w: ptr cdouble; z: ptr lapack_complex_double;                             ldz: lapack_int; work: ptr lapack_complex_double;                             lwork: lapack_int; rwork: ptr cdouble;                               lrwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_zhbgvd_work".}   
    proc chbgvx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; ka: lapack_int;                             kb: lapack_int; ab: ptr lapack_complex_float;                               ldab: lapack_int; bb: ptr lapack_complex_float;                               ldbb: lapack_int; q: ptr lapack_complex_float;                               ldq: lapack_int; vl: cfloat; vu: cfloat;                               il: lapack_int; iu: lapack_int; abstol: cfloat;                               m: ptr lapack_int; w: ptr cfloat;                               z: ptr lapack_complex_float; ldz: lapack_int;                             work: ptr lapack_complex_float; rwork: ptr cfloat;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_chbgvx_work".}   
    proc zhbgvx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; ka: lapack_int;                             kb: lapack_int; ab: ptr lapack_complex_double;                             ldab: lapack_int; bb: ptr lapack_complex_double;                             ldbb: lapack_int; q: ptr lapack_complex_double;                             ldq: lapack_int; vl: cdouble; vu: cdouble;                               il: lapack_int; iu: lapack_int; abstol: cdouble;                               m: ptr lapack_int; w: ptr cdouble;                               z: ptr lapack_complex_double; ldz: lapack_int;                             work: ptr lapack_complex_double; rwork: ptr cdouble;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhbgvx_work".}   
    proc chbtrd_work *(matrix_order: cint; vect: char; uplo: char;                                n: lapack_int; kd: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             d: ptr cfloat; e: ptr cfloat;                               q: ptr lapack_complex_float; ldq: lapack_int;                             work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chbtrd_work".}   
    proc zhbtrd_work *(matrix_order: cint; vect: char; uplo: char;                                n: lapack_int; kd: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             d: ptr cdouble; e: ptr cdouble;                               q: ptr lapack_complex_double; ldq: lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhbtrd_work".}   
    proc checon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ipiv: ptr lapack_int; anorm: cfloat;                               rcond: ptr cfloat; work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_checon_work".}   
    proc zhecon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ipiv: ptr lapack_int; anorm: cdouble;                               rcond: ptr cdouble; work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhecon_work".}   
    proc cheequb_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat;                                work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cheequb_work".}   
    proc zheequb_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              s: ptr cdouble; scond: ptr cdouble;                                amax: ptr cdouble; work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zheequb_work".}   
    proc cheev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; a: ptr lapack_complex_float;                              lda: lapack_int; w: ptr cfloat;                              work: ptr lapack_complex_float; lwork: lapack_int;                            rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cheev_work".}   
    proc zheev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; a: ptr lapack_complex_double;                            lda: lapack_int; w: ptr cdouble;                              work: ptr lapack_complex_double; lwork: lapack_int;                            rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zheev_work".}   
    proc cheevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; w: ptr cfloat;                               work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat; lrwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_cheevd_work".}   
    proc zheevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; w: ptr cdouble;                               work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble; lrwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_zheevd_work".}   
    proc cheevr_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                             w: ptr cfloat; z: ptr lapack_complex_float;                               ldz: lapack_int; isuppz: ptr lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat; lrwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_cheevr_work".}   
    proc zheevr_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; abstol: cdouble; m: ptr lapack_int;                             w: ptr cdouble; z: ptr lapack_complex_double;                             ldz: lapack_int; isuppz: ptr lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble; lrwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_zheevr_work".}   
    proc cheevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                             w: ptr cfloat; z: ptr lapack_complex_float;                               ldz: lapack_int; work: ptr lapack_complex_float;                               lwork: lapack_int; rwork: ptr cfloat;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_cheevx_work".}   
    proc zheevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; abstol: cdouble; m: ptr lapack_int;                             w: ptr cdouble; z: ptr lapack_complex_double;                             ldz: lapack_int; work: ptr lapack_complex_double;                             lwork: lapack_int; rwork: ptr cdouble;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zheevx_work".}   
    proc chegst_work *(matrix_order: cint; itype: lapack_int; uplo: char;                                n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_chegst_work".}   
    proc zhegst_work *(matrix_order: cint; itype: lapack_int; uplo: char;                                n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int): lapack_int {.importc: "LAPACKE_zhegst_work".}   
    proc chegv_work *(matrix_order: cint; itype: lapack_int; jobz: char;                               uplo: char; n: lapack_int;                            a: ptr lapack_complex_float; lda: lapack_int;                            b: ptr lapack_complex_float; ldb: lapack_int;                            w: ptr cfloat; work: ptr lapack_complex_float;                              lwork: lapack_int; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chegv_work".}   
    proc zhegv_work *(matrix_order: cint; itype: lapack_int; jobz: char;                               uplo: char; n: lapack_int;                            a: ptr lapack_complex_double; lda: lapack_int;                            b: ptr lapack_complex_double; ldb: lapack_int;                            w: ptr cdouble; work: ptr lapack_complex_double;                            lwork: lapack_int; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhegv_work".}   
    proc chegvd_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             w: ptr cfloat; work: ptr lapack_complex_float;                               lwork: lapack_int; rwork: ptr cfloat;                               lrwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_chegvd_work".}   
    proc zhegvd_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             w: ptr cdouble; work: ptr lapack_complex_double;                             lwork: lapack_int; rwork: ptr cdouble;                               lrwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_zhegvd_work".}   
    proc chegvx_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                range: char; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                             w: ptr cfloat; z: ptr lapack_complex_float;                               ldz: lapack_int; work: ptr lapack_complex_float;                               lwork: lapack_int; rwork: ptr cfloat;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_chegvx_work".}   
    proc zhegvx_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                range: char; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; abstol: cdouble; m: ptr lapack_int;                             w: ptr cdouble; z: ptr lapack_complex_double;                             ldz: lapack_int; work: ptr lapack_complex_double;                             lwork: lapack_int; rwork: ptr cdouble;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhegvx_work".}   
    proc cherfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; af: ptr lapack_complex_float;                               ldaf: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cherfs_work".}   
    proc zherfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; af: ptr lapack_complex_double;                             ldaf: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zherfs_work".}   
    proc cherfsx_work *(matrix_order: cint; uplo: char; equed: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              af: ptr lapack_complex_float; ldaf: lapack_int;                              ipiv: ptr lapack_int; s: ptr cfloat;                                b: ptr lapack_complex_float; ldb: lapack_int;                              x: ptr lapack_complex_float; ldx: lapack_int;                              rcond: ptr cfloat; berr: ptr cfloat;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr lapack_complex_float;                                rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cherfsx_work".}   
    proc zherfsx_work *(matrix_order: cint; uplo: char; equed: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              af: ptr lapack_complex_double; ldaf: lapack_int;                              ipiv: ptr lapack_int; s: ptr cdouble;                                b: ptr lapack_complex_double; ldb: lapack_int;                              x: ptr lapack_complex_double; ldx: lapack_int;                              rcond: ptr cdouble; berr: ptr cdouble;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble;                                work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zherfsx_work".}   
    proc chesv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; a: ptr lapack_complex_float;                              lda: lapack_int; ipiv: ptr lapack_int;                            b: ptr lapack_complex_float; ldb: lapack_int;                            work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_chesv_work".}   
    proc zhesv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; a: ptr lapack_complex_double;                            lda: lapack_int; ipiv: ptr lapack_int;                            b: ptr lapack_complex_double; ldb: lapack_int;                            work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zhesv_work".}   
    proc chesvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             af: ptr lapack_complex_float; ldaf: lapack_int;                             ipiv: ptr lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; x: ptr lapack_complex_float;                               ldx: lapack_int; rcond: ptr cfloat;                               ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chesvx_work".}   
    proc zhesvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             af: ptr lapack_complex_double; ldaf: lapack_int;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; rcond: ptr cdouble;                               ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhesvx_work".}   
    proc chesvxx_work *(matrix_order: cint; fact: char; uplo: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              af: ptr lapack_complex_float; ldaf: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               s: ptr cfloat; b: ptr lapack_complex_float;                                ldb: lapack_int; x: ptr lapack_complex_float;                                ldx: lapack_int; rcond: ptr cfloat;                                rpvgrw: ptr cfloat; berr: ptr cfloat;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr lapack_complex_float;                                rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chesvxx_work".}   
    proc zhesvxx_work *(matrix_order: cint; fact: char; uplo: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              af: ptr lapack_complex_double; ldaf: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               s: ptr cdouble; b: ptr lapack_complex_double;                              ldb: lapack_int; x: ptr lapack_complex_double;                              ldx: lapack_int; rcond: ptr cdouble;                                rpvgrw: ptr cdouble; berr: ptr cdouble;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble;                                work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhesvxx_work".}   
    proc chetrd_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             d: ptr cfloat; e: ptr cfloat;                               tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_chetrd_work".}   
    proc zhetrd_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             d: ptr cdouble; e: ptr cdouble;                               tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zhetrd_work".}   
    proc chetrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ipiv: ptr lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_chetrf_work".}   
    proc zhetrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ipiv: ptr lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zhetrf_work".}   
    proc chetri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ipiv: ptr lapack_int; work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chetri_work".}   
    proc zhetri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ipiv: ptr lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhetri_work".}   
    proc chetrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_chetrs_work".}   
    proc zhetrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zhetrs_work".}   
    proc chfrk_work *(matrix_order: cint; transr: char; uplo: char;                               trans: char; n: lapack_int; k: lapack_int;                            alpha: cfloat; a: ptr lapack_complex_float;                              lda: lapack_int; beta: cfloat;                              c: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chfrk_work".}   
    proc zhfrk_work *(matrix_order: cint; transr: char; uplo: char;                               trans: char; n: lapack_int; k: lapack_int;                            alpha: cdouble; a: ptr lapack_complex_double;                            lda: lapack_int; beta: cdouble;                              c: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhfrk_work".}   
    proc shgeqz_work *(matrix_order: cint; job: char; compq: char;                                compz: char; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; h: ptr cfloat; ldh: lapack_int;                             t: ptr cfloat; ldt: lapack_int; alphar: ptr cfloat;                               alphai: ptr cfloat; beta: ptr cfloat; q: ptr cfloat;                               ldq: lapack_int; z: ptr cfloat; ldz: lapack_int;                             work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_shgeqz_work".}   
    proc dhgeqz_work *(matrix_order: cint; job: char; compq: char;                                compz: char; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; h: ptr cdouble; ldh: lapack_int;                             t: ptr cdouble; ldt: lapack_int;                             alphar: ptr cdouble; alphai: ptr cdouble;                               beta: ptr cdouble; q: ptr cdouble; ldq: lapack_int;                             z: ptr cdouble; ldz: lapack_int; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dhgeqz_work".}   
    proc chgeqz_work *(matrix_order: cint; job: char; compq: char;                                compz: char; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; h: ptr lapack_complex_float;                               ldh: lapack_int; t: ptr lapack_complex_float;                               ldt: lapack_int; alpha: ptr lapack_complex_float;                               beta: ptr lapack_complex_float;                               q: ptr lapack_complex_float; ldq: lapack_int;                             z: ptr lapack_complex_float; ldz: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chgeqz_work".}   
    proc zhgeqz_work *(matrix_order: cint; job: char; compq: char;                                compz: char; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; h: ptr lapack_complex_double;                             ldh: lapack_int; t: ptr lapack_complex_double;                             ldt: lapack_int; alpha: ptr lapack_complex_double;                             beta: ptr lapack_complex_double;                             q: ptr lapack_complex_double; ldq: lapack_int;                             z: ptr lapack_complex_double; ldz: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhgeqz_work".}   
    proc chpcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                             anorm: cfloat; rcond: ptr cfloat;                               work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chpcon_work".}   
    proc zhpcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                             anorm: cdouble; rcond: ptr cdouble;                               work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhpcon_work".}   
    proc chpev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; ap: ptr lapack_complex_float;                              w: ptr cfloat; z: ptr lapack_complex_float;                              ldz: lapack_int; work: ptr lapack_complex_float;                              rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chpev_work".}   
    proc zhpev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; ap: ptr lapack_complex_double;                            w: ptr cdouble; z: ptr lapack_complex_double;                            ldz: lapack_int; work: ptr lapack_complex_double;                            rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhpev_work".}   
    proc chpevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; ap: ptr lapack_complex_float;                               w: ptr cfloat; z: ptr lapack_complex_float;                               ldz: lapack_int; work: ptr lapack_complex_float;                               lwork: lapack_int; rwork: ptr cfloat;                               lrwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_chpevd_work".}   
    proc zhpevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; ap: ptr lapack_complex_double;                             w: ptr cdouble; z: ptr lapack_complex_double;                             ldz: lapack_int; work: ptr lapack_complex_double;                             lwork: lapack_int; rwork: ptr cdouble;                               lrwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_zhpevd_work".}   
    proc chpevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float; vl: cfloat;                               vu: cfloat; il: lapack_int; iu: lapack_int;                             abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                               z: ptr lapack_complex_float; ldz: lapack_int;                             work: ptr lapack_complex_float; rwork: ptr cfloat;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_chpevx_work".}   
    proc zhpevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double; vl: cdouble;                               vu: cdouble; il: lapack_int; iu: lapack_int;                             abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                               z: ptr lapack_complex_double; ldz: lapack_int;                             work: ptr lapack_complex_double; rwork: ptr cdouble;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhpevx_work".}   
    proc chpgst_work *(matrix_order: cint; itype: lapack_int; uplo: char;                                n: lapack_int; ap: ptr lapack_complex_float;                               bp: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chpgst_work".}   
    proc zhpgst_work *(matrix_order: cint; itype: lapack_int; uplo: char;                                n: lapack_int; ap: ptr lapack_complex_double;                             bp: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhpgst_work".}   
    proc chpgv_work *(matrix_order: cint; itype: lapack_int; jobz: char;                               uplo: char; n: lapack_int;                            ap: ptr lapack_complex_float;                              bp: ptr lapack_complex_float; w: ptr cfloat;                              z: ptr lapack_complex_float; ldz: lapack_int;                            work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chpgv_work".}   
    proc zhpgv_work *(matrix_order: cint; itype: lapack_int; jobz: char;                               uplo: char; n: lapack_int;                            ap: ptr lapack_complex_double;                            bp: ptr lapack_complex_double; w: ptr cdouble;                              z: ptr lapack_complex_double; ldz: lapack_int;                            work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhpgv_work".}   
    proc chpgvd_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float;                               bp: ptr lapack_complex_float; w: ptr cfloat;                               z: ptr lapack_complex_float; ldz: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat; lrwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_chpgvd_work".}   
    proc zhpgvd_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double;                             bp: ptr lapack_complex_double; w: ptr cdouble;                               z: ptr lapack_complex_double; ldz: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble; lrwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_zhpgvd_work".}   
    proc chpgvx_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                range: char; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float;                               bp: ptr lapack_complex_float; vl: cfloat;                               vu: cfloat; il: lapack_int; iu: lapack_int;                             abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                               z: ptr lapack_complex_float; ldz: lapack_int;                             work: ptr lapack_complex_float; rwork: ptr cfloat;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_chpgvx_work".}   
    proc zhpgvx_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                range: char; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double;                             bp: ptr lapack_complex_double; vl: cdouble;                               vu: cdouble; il: lapack_int; iu: lapack_int;                             abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                               z: ptr lapack_complex_double; ldz: lapack_int;                             work: ptr lapack_complex_double; rwork: ptr cdouble;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhpgvx_work".}   
    proc chprfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_float;                               afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chprfs_work".}   
    proc zhprfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_double;                             afp: ptr lapack_complex_double;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhprfs_work".}   
    proc chpsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; ap: ptr lapack_complex_float;                              ipiv: ptr lapack_int; b: ptr lapack_complex_float;                              ldb: lapack_int): lapack_int {.importc: "LAPACKE_chpsv_work".}   
    proc zhpsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; ap: ptr lapack_complex_double;                            ipiv: ptr lapack_int; b: ptr lapack_complex_double;                            ldb: lapack_int): lapack_int {.importc: "LAPACKE_zhpsv_work".}   
    proc chpsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             ap: ptr lapack_complex_float;                               afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_chpsvx_work".}   
    proc zhpsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             ap: ptr lapack_complex_double;                             afp: ptr lapack_complex_double;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; rcond: ptr cdouble;                               ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zhpsvx_work".}   
    proc chptrd_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float; d: ptr cfloat;                               e: ptr cfloat; tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chptrd_work".}   
    proc zhptrd_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double; d: ptr cdouble;                               e: ptr cdouble; tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhptrd_work".}   
    proc chptrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_chptrf_work".}   
    proc zhptrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhptrf_work".}   
    proc chptri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                             work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chptri_work".}   
    proc zhptri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhptri_work".}   
    proc chptrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_float;                               ipiv: ptr lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_chptrs_work".}   
    proc zhptrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_double;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int): lapack_int {.importc: "LAPACKE_zhptrs_work".}   
    proc shsein_work *(matrix_order: cint; job: char; eigsrc: char;                                initv: char; select: ptr lapack_logical;                               n: lapack_int; h: ptr cfloat; ldh: lapack_int;                             wr: ptr cfloat; wi: ptr cfloat; vl: ptr cfloat;                               ldvl: lapack_int; vr: ptr cfloat; ldvr: lapack_int;                             mm: lapack_int; m: ptr lapack_int; work: ptr cfloat;                               ifaill: ptr lapack_int; ifailr: ptr lapack_int): lapack_int {.importc: "LAPACKE_shsein_work".}   
    proc dhsein_work *(matrix_order: cint; job: char; eigsrc: char;                                initv: char; select: ptr lapack_logical;                               n: lapack_int; h: ptr cdouble; ldh: lapack_int;                             wr: ptr cdouble; wi: ptr cdouble; vl: ptr cdouble;                               ldvl: lapack_int; vr: ptr cdouble; ldvr: lapack_int;                             mm: lapack_int; m: ptr lapack_int;                             work: ptr cdouble; ifaill: ptr lapack_int;                             ifailr: ptr lapack_int): lapack_int {.importc: "LAPACKE_dhsein_work".}   
    proc chsein_work *(matrix_order: cint; job: char; eigsrc: char;                                initv: char; select: ptr lapack_logical;                               n: lapack_int; h: ptr lapack_complex_float;                               ldh: lapack_int; w: ptr lapack_complex_float;                               vl: ptr lapack_complex_float; ldvl: lapack_int;                             vr: ptr lapack_complex_float; ldvr: lapack_int;                             mm: lapack_int; m: ptr lapack_int;                             work: ptr lapack_complex_float; rwork: ptr cfloat;                               ifaill: ptr lapack_int; ifailr: ptr lapack_int): lapack_int {.importc: "LAPACKE_chsein_work".}   
    proc zhsein_work *(matrix_order: cint; job: char; eigsrc: char;                                initv: char; select: ptr lapack_logical;                               n: lapack_int; h: ptr lapack_complex_double;                             ldh: lapack_int; w: ptr lapack_complex_double;                             vl: ptr lapack_complex_double; ldvl: lapack_int;                             vr: ptr lapack_complex_double; ldvr: lapack_int;                             mm: lapack_int; m: ptr lapack_int;                             work: ptr lapack_complex_double; rwork: ptr cdouble;                               ifaill: ptr lapack_int; ifailr: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhsein_work".}   
    proc shseqr_work *(matrix_order: cint; job: char; compz: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             h: ptr cfloat; ldh: lapack_int; wr: ptr cfloat;                               wi: ptr cfloat; z: ptr cfloat; ldz: lapack_int;                             work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_shseqr_work".}   
    proc dhseqr_work *(matrix_order: cint; job: char; compz: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             h: ptr cdouble; ldh: lapack_int; wr: ptr cdouble;                               wi: ptr cdouble; z: ptr cdouble; ldz: lapack_int;                             work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dhseqr_work".}   
    proc chseqr_work *(matrix_order: cint; job: char; compz: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             h: ptr lapack_complex_float; ldh: lapack_int;                             w: ptr lapack_complex_float;                               z: ptr lapack_complex_float; ldz: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_chseqr_work".}   
    proc zhseqr_work *(matrix_order: cint; job: char; compz: char;                                n: lapack_int; ilo: lapack_int; ihi: lapack_int;                             h: ptr lapack_complex_double; ldh: lapack_int;                             w: ptr lapack_complex_double;                             z: ptr lapack_complex_double; ldz: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zhseqr_work".}   
    proc clacgv_work *(n: lapack_int; x: ptr lapack_complex_float;                               incx: lapack_int): lapack_int {.importc: "LAPACKE_clacgv_work".}   
    proc zlacgv_work *(n: lapack_int; x: ptr lapack_complex_double;                             incx: lapack_int): lapack_int {.importc: "LAPACKE_zlacgv_work".}   
    proc slacpy_work *(matrix_order: cint; uplo: char; m: lapack_int;                             n: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_slacpy_work".}   
    proc dlacpy_work *(matrix_order: cint; uplo: char; m: lapack_int;                             n: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dlacpy_work".}   
    proc clacpy_work *(matrix_order: cint; uplo: char; m: lapack_int;                             n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_clacpy_work".}   
    proc zlacpy_work *(matrix_order: cint; uplo: char; m: lapack_int;                             n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int): lapack_int {.importc: "LAPACKE_zlacpy_work".}   
    proc zlag2c_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             sa: ptr lapack_complex_float; ldsa: lapack_int): lapack_int {.importc: "LAPACKE_zlag2c_work".}   
    proc slag2d_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             sa: ptr cfloat; ldsa: lapack_int; a: ptr cdouble;                               lda: lapack_int): lapack_int {.importc: "LAPACKE_slag2d_work".}   
    proc dlag2s_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; sa: ptr cfloat;                               ldsa: lapack_int): lapack_int {.importc: "LAPACKE_dlag2s_work".}   
    proc clag2z_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             sa: ptr lapack_complex_float; ldsa: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_clag2z_work".}   
    proc slagge_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int; d: ptr cfloat;                               a: ptr cfloat; lda: lapack_int;                             iseed: ptr lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_slagge_work".}   
    proc dlagge_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int; d: ptr cdouble;                               a: ptr cdouble; lda: lapack_int;                             iseed: ptr lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dlagge_work".}   
    proc clagge_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int; d: ptr cfloat;                               a: ptr lapack_complex_float; lda: lapack_int;                             iseed: ptr lapack_int;                             work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_clagge_work".}   
    proc zlagge_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             kl: lapack_int; ku: lapack_int; d: ptr cdouble;                               a: ptr lapack_complex_double; lda: lapack_int;                             iseed: ptr lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zlagge_work".}   
    proc claghe_work *(matrix_order: cint; n: lapack_int; k: lapack_int;                             d: ptr cfloat; a: ptr lapack_complex_float;                               lda: lapack_int; iseed: ptr lapack_int;                             work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_claghe_work".}   
    proc zlaghe_work *(matrix_order: cint; n: lapack_int; k: lapack_int;                             d: ptr cdouble; a: ptr lapack_complex_double;                             lda: lapack_int; iseed: ptr lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zlaghe_work".}   
    proc slagsy_work *(matrix_order: cint; n: lapack_int; k: lapack_int;                             d: ptr cfloat; a: ptr cfloat; lda: lapack_int;                             iseed: ptr lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_slagsy_work".}   
    proc dlagsy_work *(matrix_order: cint; n: lapack_int; k: lapack_int;                             d: ptr cdouble; a: ptr cdouble; lda: lapack_int;                             iseed: ptr lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dlagsy_work".}   
    proc clagsy_work *(matrix_order: cint; n: lapack_int; k: lapack_int;                             d: ptr cfloat; a: ptr lapack_complex_float;                               lda: lapack_int; iseed: ptr lapack_int;                             work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_clagsy_work".}   
    proc zlagsy_work *(matrix_order: cint; n: lapack_int; k: lapack_int;                             d: ptr cdouble; a: ptr lapack_complex_double;                             lda: lapack_int; iseed: ptr lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zlagsy_work".}   
    proc slapmr_work *(matrix_order: cint; forwrd: lapack_logical;                               m: lapack_int; n: lapack_int; x: ptr cfloat;                               ldx: lapack_int; k: ptr lapack_int): lapack_int {.importc: "LAPACKE_slapmr_work".}   
    proc dlapmr_work *(matrix_order: cint; forwrd: lapack_logical;                               m: lapack_int; n: lapack_int; x: ptr cdouble;                               ldx: lapack_int; k: ptr lapack_int): lapack_int {.importc: "LAPACKE_dlapmr_work".}   
    proc clapmr_work *(matrix_order: cint; forwrd: lapack_logical;                               m: lapack_int; n: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             k: ptr lapack_int): lapack_int {.importc: "LAPACKE_clapmr_work".}   
    proc zlapmr_work *(matrix_order: cint; forwrd: lapack_logical;                               m: lapack_int; n: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             k: ptr lapack_int): lapack_int {.importc: "LAPACKE_zlapmr_work".}   
    proc slartgp_work *(f: cfloat; g: cfloat; cs: ptr cfloat;                                sn: ptr cfloat; r: ptr cfloat): lapack_int {.importc: "LAPACKE_slartgp_work".}   
    proc dlartgp_work *(f: cdouble; g: cdouble; cs: ptr cdouble;                                sn: ptr cdouble; r: ptr cdouble): lapack_int {.importc: "LAPACKE_dlartgp_work".}   
    proc slartgs_work *(x: cfloat; y: cfloat; sigma: cfloat;                                cs: ptr cfloat; sn: ptr cfloat): lapack_int {.importc: "LAPACKE_slartgs_work".}   
    proc dlartgs_work *(x: cdouble; y: cdouble; sigma: cdouble;                                cs: ptr cdouble; sn: ptr cdouble): lapack_int {.importc: "LAPACKE_dlartgs_work".}   
    proc slapy2_work *(x: cfloat; y: cfloat): cfloat {.importc: "LAPACKE_slapy2_work".}   
    proc dlapy2_work *(x: cdouble; y: cdouble): cdouble {.importc: "LAPACKE_dlapy2_work".}   
    proc slapy3_work *(x: cfloat; y: cfloat; z: cfloat): cfloat {.importc: "LAPACKE_slapy3_work".}   
    proc dlapy3_work *(x: cdouble; y: cdouble; z: cdouble): cdouble {.importc: "LAPACKE_dlapy3_work".}   
    proc slamch_work *(cmach: char): cfloat {.importc: "LAPACKE_slamch_work".}   
    proc dlamch_work *(cmach: char): cdouble {.importc: "LAPACKE_dlamch_work".}   
    proc slange_work *(matrix_order: cint; norm: char; m: lapack_int;                             n: lapack_int; a: ptr cfloat; lda: lapack_int;                             work: ptr cfloat): cfloat {.importc: "LAPACKE_slange_work".}   
    proc dlange_work *(matrix_order: cint; norm: char; m: lapack_int;                             n: lapack_int; a: ptr cdouble; lda: lapack_int;                             work: ptr cdouble): cdouble {.importc: "LAPACKE_dlange_work".}   
    proc clange_work *(matrix_order: cint; norm: char; m: lapack_int;                             n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; work: ptr cfloat): cfloat {.importc: "LAPACKE_clange_work".}   
    proc zlange_work *(matrix_order: cint; norm: char; m: lapack_int;                             n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; work: ptr cdouble): cdouble {.importc: "LAPACKE_zlange_work".}   
    proc clanhe_work *(matrix_order: cint; norm: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; work: ptr cfloat): cfloat {.importc: "LAPACKE_clanhe_work".}   
    proc zlanhe_work *(matrix_order: cint; norm: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; work: ptr cdouble): cdouble {.importc: "LAPACKE_zlanhe_work".}   
    proc slansy_work *(matrix_order: cint; norm: char; uplo: char;                                n: lapack_int; a: ptr cfloat; lda: lapack_int;                             work: ptr cfloat): cfloat {.importc: "LAPACKE_slansy_work".}   
    proc dlansy_work *(matrix_order: cint; norm: char; uplo: char;                                n: lapack_int; a: ptr cdouble; lda: lapack_int;                             work: ptr cdouble): cdouble {.importc: "LAPACKE_dlansy_work".}   
    proc clansy_work *(matrix_order: cint; norm: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; work: ptr cfloat): cfloat {.importc: "LAPACKE_clansy_work".}   
    proc zlansy_work *(matrix_order: cint; norm: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; work: ptr cdouble): cdouble {.importc: "LAPACKE_zlansy_work".}   
    proc slantr_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; work: ptr cfloat): cfloat {.importc: "LAPACKE_slantr_work".}   
    proc dlantr_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; work: ptr cdouble): cdouble {.importc: "LAPACKE_dlantr_work".}   
    proc clantr_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             work: ptr cfloat): cfloat {.importc: "LAPACKE_clantr_work".}   
    proc zlantr_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             work: ptr cdouble): cdouble {.importc: "LAPACKE_zlantr_work".}   
    proc slarfb_work *(matrix_order: cint; side: char; trans: char;                                direct: char; storev: char; m: lapack_int;                             n: lapack_int; k: lapack_int; v: ptr cfloat;                               ldv: lapack_int; t: ptr cfloat; ldt: lapack_int;                             c: ptr cfloat; ldc: lapack_int; work: ptr cfloat;                               ldwork: lapack_int): lapack_int {.importc: "LAPACKE_slarfb_work".}   
    proc dlarfb_work *(matrix_order: cint; side: char; trans: char;                                direct: char; storev: char; m: lapack_int;                             n: lapack_int; k: lapack_int; v: ptr cdouble;                               ldv: lapack_int; t: ptr cdouble; ldt: lapack_int;                             c: ptr cdouble; ldc: lapack_int; work: ptr cdouble;                               ldwork: lapack_int): lapack_int {.importc: "LAPACKE_dlarfb_work".}   
    proc clarfb_work *(matrix_order: cint; side: char; trans: char;                                direct: char; storev: char; m: lapack_int;                             n: lapack_int; k: lapack_int;                             v: ptr lapack_complex_float; ldv: lapack_int;                             t: ptr lapack_complex_float; ldt: lapack_int;                             c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float; ldwork: lapack_int): lapack_int {.importc: "LAPACKE_clarfb_work".}   
    proc zlarfb_work *(matrix_order: cint; side: char; trans: char;                                direct: char; storev: char; m: lapack_int;                             n: lapack_int; k: lapack_int;                             v: ptr lapack_complex_double; ldv: lapack_int;                             t: ptr lapack_complex_double; ldt: lapack_int;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double; ldwork: lapack_int): lapack_int {.importc: "LAPACKE_zlarfb_work".}   
    proc slarfg_work *(n: lapack_int; alpha: ptr cfloat; x: ptr cfloat;                               incx: lapack_int; tau: ptr cfloat): lapack_int {.importc: "LAPACKE_slarfg_work".}   
    proc dlarfg_work *(n: lapack_int; alpha: ptr cdouble; x: ptr cdouble;                               incx: lapack_int; tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dlarfg_work".}   
    proc clarfg_work *(n: lapack_int; alpha: ptr lapack_complex_float;                               x: ptr lapack_complex_float; incx: lapack_int;                             tau: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_clarfg_work".}   
    proc zlarfg_work *(n: lapack_int; alpha: ptr lapack_complex_double;                             x: ptr lapack_complex_double; incx: lapack_int;                             tau: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zlarfg_work".}   
    proc slarft_work *(matrix_order: cint; direct: char; storev: char;                                n: lapack_int; k: lapack_int; v: ptr cfloat;                               ldv: lapack_int; tau: ptr cfloat; t: ptr cfloat;                               ldt: lapack_int): lapack_int {.importc: "LAPACKE_slarft_work".}   
    proc dlarft_work *(matrix_order: cint; direct: char; storev: char;                                n: lapack_int; k: lapack_int; v: ptr cdouble;                               ldv: lapack_int; tau: ptr cdouble; t: ptr cdouble;                               ldt: lapack_int): lapack_int {.importc: "LAPACKE_dlarft_work".}   
    proc clarft_work *(matrix_order: cint; direct: char; storev: char;                                n: lapack_int; k: lapack_int;                             v: ptr lapack_complex_float; ldv: lapack_int;                             tau: ptr lapack_complex_float;                               t: ptr lapack_complex_float; ldt: lapack_int): lapack_int {.importc: "LAPACKE_clarft_work".}   
    proc zlarft_work *(matrix_order: cint; direct: char; storev: char;                                n: lapack_int; k: lapack_int;                             v: ptr lapack_complex_double; ldv: lapack_int;                             tau: ptr lapack_complex_double;                             t: ptr lapack_complex_double; ldt: lapack_int): lapack_int {.importc: "LAPACKE_zlarft_work".}   
    proc slarfx_work *(matrix_order: cint; side: char; m: lapack_int;                             n: lapack_int; v: ptr cfloat; tau: cfloat;                               c: ptr cfloat; ldc: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_slarfx_work".}   
    proc dlarfx_work *(matrix_order: cint; side: char; m: lapack_int;                             n: lapack_int; v: ptr cdouble; tau: cdouble;                               c: ptr cdouble; ldc: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dlarfx_work".}   
    proc clarfx_work *(matrix_order: cint; side: char; m: lapack_int;                             n: lapack_int; v: ptr lapack_complex_float;                               tau: lapack_complex_float;                               c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_clarfx_work".}   
    proc zlarfx_work *(matrix_order: cint; side: char; m: lapack_int;                             n: lapack_int; v: ptr lapack_complex_double;                             tau: lapack_complex_double;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zlarfx_work".}   
    proc slarnv_work *(idist: lapack_int; iseed: ptr lapack_int;                             n: lapack_int; x: ptr cfloat): lapack_int {.importc: "LAPACKE_slarnv_work".}   
    proc dlarnv_work *(idist: lapack_int; iseed: ptr lapack_int;                             n: lapack_int; x: ptr cdouble): lapack_int {.importc: "LAPACKE_dlarnv_work".}   
    proc clarnv_work *(idist: lapack_int; iseed: ptr lapack_int;                             n: lapack_int; x: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_clarnv_work".}   
    proc zlarnv_work *(idist: lapack_int; iseed: ptr lapack_int;                             n: lapack_int; x: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zlarnv_work".}   
    proc slaset_work *(matrix_order: cint; uplo: char; m: lapack_int;                             n: lapack_int; alpha: cfloat; beta: cfloat;                               a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_slaset_work".}   
    proc dlaset_work *(matrix_order: cint; uplo: char; m: lapack_int;                             n: lapack_int; alpha: cdouble; beta: cdouble;                               a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dlaset_work".}   
    proc claset_work *(matrix_order: cint; uplo: char; m: lapack_int;                             n: lapack_int; alpha: lapack_complex_float;                               beta: lapack_complex_float;                               a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_claset_work".}   
    proc zlaset_work *(matrix_order: cint; uplo: char; m: lapack_int;                             n: lapack_int; alpha: lapack_complex_double;                             beta: lapack_complex_double;                             a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_zlaset_work".}   
    proc slasrt_work *(id: char; n: lapack_int; d: ptr cfloat): lapack_int {.importc: "LAPACKE_slasrt_work".}   
    proc dlasrt_work *(id: char; n: lapack_int; d: ptr cdouble): lapack_int {.importc: "LAPACKE_dlasrt_work".}   
    proc slaswp_work *(matrix_order: cint; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; k1: lapack_int; k2: lapack_int;                             ipiv: ptr lapack_int; incx: lapack_int): lapack_int {.importc: "LAPACKE_slaswp_work".}   
    proc dlaswp_work *(matrix_order: cint; n: lapack_int; a: ptr cdouble;                               lda: lapack_int; k1: lapack_int; k2: lapack_int;                             ipiv: ptr lapack_int; incx: lapack_int): lapack_int {.importc: "LAPACKE_dlaswp_work".}   
    proc claswp_work *(matrix_order: cint; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             k1: lapack_int; k2: lapack_int;                             ipiv: ptr lapack_int; incx: lapack_int): lapack_int {.importc: "LAPACKE_claswp_work".}   
    proc zlaswp_work *(matrix_order: cint; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             k1: lapack_int; k2: lapack_int;                             ipiv: ptr lapack_int; incx: lapack_int): lapack_int {.importc: "LAPACKE_zlaswp_work".}   
    proc slatms_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             dist: char; iseed: ptr lapack_int; sym: char;                                d: ptr cfloat; mode: lapack_int; cond: cfloat;                               dmax: cfloat; kl: lapack_int; ku: lapack_int;                             pack: char; a: ptr cfloat; lda: lapack_int;                             work: ptr cfloat): lapack_int {.importc: "LAPACKE_slatms_work".}   
    proc dlatms_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             dist: char; iseed: ptr lapack_int; sym: char;                                d: ptr cdouble; mode: lapack_int; cond: cdouble;                               dmax: cdouble; kl: lapack_int; ku: lapack_int;                             pack: char; a: ptr cdouble; lda: lapack_int;                             work: ptr cdouble): lapack_int {.importc: "LAPACKE_dlatms_work".}   
    proc clatms_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             dist: char; iseed: ptr lapack_int; sym: char;                                d: ptr cfloat; mode: lapack_int; cond: cfloat;                               dmax: cfloat; kl: lapack_int; ku: lapack_int;                             pack: char; a: ptr lapack_complex_float;                               lda: lapack_int; work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_clatms_work".}   
    proc zlatms_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             dist: char; iseed: ptr lapack_int; sym: char;                                d: ptr cdouble; mode: lapack_int; cond: cdouble;                               dmax: cdouble; kl: lapack_int; ku: lapack_int;                             pack: char; a: ptr lapack_complex_double;                             lda: lapack_int; work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zlatms_work".}   
    proc slauum_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_slauum_work".}   
    proc dlauum_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dlauum_work".}   
    proc clauum_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_clauum_work".}   
    proc zlauum_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_zlauum_work".}   
    proc sopgtr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cfloat; tau: ptr cfloat; q: ptr cfloat;                               ldq: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sopgtr_work".}   
    proc dopgtr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cdouble; tau: ptr cdouble; q: ptr cdouble;                               ldq: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dopgtr_work".}   
    proc sopmtr_work *(matrix_order: cint; side: char; uplo: char;                                trans: char; m: lapack_int; n: lapack_int;                             ap: ptr cfloat; tau: ptr cfloat; c: ptr cfloat;                               ldc: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sopmtr_work".}   
    proc dopmtr_work *(matrix_order: cint; side: char; uplo: char;                                trans: char; m: lapack_int; n: lapack_int;                             ap: ptr cdouble; tau: ptr cdouble; c: ptr cdouble;                               ldc: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dopmtr_work".}   
    proc sorgbr_work *(matrix_order: cint; vect: char; m: lapack_int;                             n: lapack_int; k: lapack_int; a: ptr cfloat;                               lda: lapack_int; tau: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sorgbr_work".}   
    proc dorgbr_work *(matrix_order: cint; vect: char; m: lapack_int;                             n: lapack_int; k: lapack_int; a: ptr cdouble;                               lda: lapack_int; tau: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dorgbr_work".}   
    proc sorghr_work *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr cfloat; lda: lapack_int;                             tau: ptr cfloat; work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sorghr_work".}   
    proc dorghr_work *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr cdouble; lda: lapack_int;                             tau: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dorghr_work".}   
    proc sorglq_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr cfloat; lda: lapack_int;                             tau: ptr cfloat; work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sorglq_work".}   
    proc dorglq_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr cdouble; lda: lapack_int;                             tau: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dorglq_work".}   
    proc sorgql_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr cfloat; lda: lapack_int;                             tau: ptr cfloat; work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sorgql_work".}   
    proc dorgql_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr cdouble; lda: lapack_int;                             tau: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dorgql_work".}   
    proc sorgqr_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr cfloat; lda: lapack_int;                             tau: ptr cfloat; work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sorgqr_work".}   
    proc dorgqr_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr cdouble; lda: lapack_int;                             tau: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dorgqr_work".}   
    proc sorgrq_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr cfloat; lda: lapack_int;                             tau: ptr cfloat; work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sorgrq_work".}   
    proc dorgrq_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr cdouble; lda: lapack_int;                             tau: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dorgrq_work".}   
    proc sorgtr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sorgtr_work".}   
    proc dorgtr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dorgtr_work".}   
    proc sormbr_work *(matrix_order: cint; vect: char; side: char;                                trans: char; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr cfloat; lda: lapack_int;                             tau: ptr cfloat; c: ptr cfloat; ldc: lapack_int;                             work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sormbr_work".}   
    proc dormbr_work *(matrix_order: cint; vect: char; side: char;                                trans: char; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr cdouble; lda: lapack_int;                             tau: ptr cdouble; c: ptr cdouble; ldc: lapack_int;                             work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dormbr_work".}   
    proc sormhr_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr cfloat; lda: lapack_int;                             tau: ptr cfloat; c: ptr cfloat; ldc: lapack_int;                             work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sormhr_work".}   
    proc dormhr_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr cdouble; lda: lapack_int;                             tau: ptr cdouble; c: ptr cdouble; ldc: lapack_int;                             work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dormhr_work".}   
    proc sormlq_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               c: ptr cfloat; ldc: lapack_int; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sormlq_work".}   
    proc dormlq_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               c: ptr cdouble; ldc: lapack_int; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dormlq_work".}   
    proc sormql_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               c: ptr cfloat; ldc: lapack_int; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sormql_work".}   
    proc dormql_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               c: ptr cdouble; ldc: lapack_int; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dormql_work".}   
    proc sormqr_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               c: ptr cfloat; ldc: lapack_int; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sormqr_work".}   
    proc dormqr_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               c: ptr cdouble; ldc: lapack_int; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dormqr_work".}   
    proc sormrq_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               c: ptr cfloat; ldc: lapack_int; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sormrq_work".}   
    proc dormrq_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               c: ptr cdouble; ldc: lapack_int; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dormrq_work".}   
    proc sormrz_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             l: lapack_int; a: ptr cfloat; lda: lapack_int;                             tau: ptr cfloat; c: ptr cfloat; ldc: lapack_int;                             work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_sormrz_work".}   
    proc dormrz_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             l: lapack_int; a: ptr cdouble; lda: lapack_int;                             tau: ptr cdouble; c: ptr cdouble; ldc: lapack_int;                             work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dormrz_work".}   
    proc sormtr_work *(matrix_order: cint; side: char; uplo: char;                                trans: char; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               c: ptr cfloat; ldc: lapack_int; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sormtr_work".}   
    proc dormtr_work *(matrix_order: cint; side: char; uplo: char;                                trans: char; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               c: ptr cdouble; ldc: lapack_int; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dormtr_work".}   
    proc spbcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr cfloat; ldab: lapack_int;                             anorm: cfloat; rcond: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_spbcon_work".}   
    proc dpbcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr cdouble; ldab: lapack_int;                             anorm: cdouble; rcond: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dpbcon_work".}   
    proc cpbcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr lapack_complex_float;                               ldab: lapack_int; anorm: cfloat; rcond: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cpbcon_work".}   
    proc zpbcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr lapack_complex_double;                             ldab: lapack_int; anorm: cdouble;                               rcond: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zpbcon_work".}   
    proc spbequ_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr cfloat; ldab: lapack_int;                             s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_spbequ_work".}   
    proc dpbequ_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr cdouble; ldab: lapack_int;                             s: ptr cdouble; scond: ptr cdouble;                               amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dpbequ_work".}   
    proc cpbequ_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr lapack_complex_float;                               ldab: lapack_int; s: ptr cfloat; scond: ptr cfloat;                               amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cpbequ_work".}   
    proc zpbequ_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr lapack_complex_double;                             ldab: lapack_int; s: ptr cdouble;                               scond: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zpbequ_work".}   
    proc spbrfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; nrhs: lapack_int; ab: ptr cfloat;                               ldab: lapack_int; afb: ptr cfloat;                               ldafb: lapack_int; b: ptr cfloat; ldb: lapack_int;                             x: ptr cfloat; ldx: lapack_int; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_spbrfs_work".}   
    proc dpbrfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; nrhs: lapack_int; ab: ptr cdouble;                               ldab: lapack_int; afb: ptr cdouble;                               ldafb: lapack_int; b: ptr cdouble; ldb: lapack_int;                             x: ptr cdouble; ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dpbrfs_work".}   
    proc cpbrfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; nrhs: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             afb: ptr lapack_complex_float; ldafb: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cpbrfs_work".}   
    proc zpbrfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; nrhs: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             afb: ptr lapack_complex_double; ldafb: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zpbrfs_work".}   
    proc spbstf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kb: lapack_int; bb: ptr cfloat; ldbb: lapack_int): lapack_int {.importc: "LAPACKE_spbstf_work".}   
    proc dpbstf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kb: lapack_int; bb: ptr cdouble; ldbb: lapack_int): lapack_int {.importc: "LAPACKE_dpbstf_work".}   
    proc cpbstf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kb: lapack_int; bb: ptr lapack_complex_float;                               ldbb: lapack_int): lapack_int {.importc: "LAPACKE_cpbstf_work".}   
    proc zpbstf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kb: lapack_int; bb: ptr lapack_complex_double;                             ldbb: lapack_int): lapack_int {.importc: "LAPACKE_zpbstf_work".}   
    proc spbsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            kd: lapack_int; nrhs: lapack_int; ab: ptr cfloat;                              ldab: lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_spbsv_work".}   
    proc dpbsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            kd: lapack_int; nrhs: lapack_int; ab: ptr cdouble;                              ldab: lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpbsv_work".}   
    proc cpbsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            kd: lapack_int; nrhs: lapack_int;                            ab: ptr lapack_complex_float; ldab: lapack_int;                            b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpbsv_work".}   
    proc zpbsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            kd: lapack_int; nrhs: lapack_int;                            ab: ptr lapack_complex_double; ldab: lapack_int;                            b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpbsv_work".}   
    proc spbsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; kd: lapack_int; nrhs: lapack_int;                             ab: ptr cfloat; ldab: lapack_int; afb: ptr cfloat;                               ldafb: lapack_int; equed: cstring; s: ptr cfloat;                               b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                               ldx: lapack_int; rcond: ptr cfloat;                               ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_spbsvx_work".}   
    proc dpbsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; kd: lapack_int; nrhs: lapack_int;                             ab: ptr cdouble; ldab: lapack_int; afb: ptr cdouble;                               ldafb: lapack_int; equed: cstring; s: ptr cdouble;                               b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                               ldx: lapack_int; rcond: ptr cdouble;                               ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dpbsvx_work".}   
    proc cpbsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; kd: lapack_int; nrhs: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             afb: ptr lapack_complex_float; ldafb: lapack_int;                             equed: cstring; s: ptr cfloat;                               b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cpbsvx_work".}   
    proc zpbsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; kd: lapack_int; nrhs: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             afb: ptr lapack_complex_double; ldafb: lapack_int;                             equed: cstring; s: ptr cdouble;                               b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zpbsvx_work".}   
    proc spbtrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr cfloat; ldab: lapack_int): lapack_int {.importc: "LAPACKE_spbtrf_work".}   
    proc dpbtrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr cdouble; ldab: lapack_int): lapack_int {.importc: "LAPACKE_dpbtrf_work".}   
    proc cpbtrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr lapack_complex_float;                               ldab: lapack_int): lapack_int {.importc: "LAPACKE_cpbtrf_work".}   
    proc zpbtrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; ab: ptr lapack_complex_double;                             ldab: lapack_int): lapack_int {.importc: "LAPACKE_zpbtrf_work".}   
    proc spbtrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; nrhs: lapack_int; ab: ptr cfloat;                               ldab: lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_spbtrs_work".}   
    proc dpbtrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; nrhs: lapack_int; ab: ptr cdouble;                               ldab: lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpbtrs_work".}   
    proc cpbtrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; nrhs: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpbtrs_work".}   
    proc zpbtrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             kd: lapack_int; nrhs: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpbtrs_work".}   
    proc spftrf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr cfloat): lapack_int {.importc: "LAPACKE_spftrf_work".}   
    proc dpftrf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr cdouble): lapack_int {.importc: "LAPACKE_dpftrf_work".}   
    proc cpftrf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cpftrf_work".}   
    proc zpftrf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zpftrf_work".}   
    proc spftri_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr cfloat): lapack_int {.importc: "LAPACKE_spftri_work".}   
    proc dpftri_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr cdouble): lapack_int {.importc: "LAPACKE_dpftri_work".}   
    proc cpftri_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cpftri_work".}   
    proc zpftri_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zpftri_work".}   
    proc spftrs_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                               b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_spftrs_work".}   
    proc dpftrs_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                               b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpftrs_work".}   
    proc cpftrs_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpftrs_work".}   
    proc zpftrs_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_double;                             b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpftrs_work".}   
    proc spocon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; anorm: cfloat;                               rcond: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_spocon_work".}   
    proc dpocon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; anorm: cdouble;                               rcond: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dpocon_work".}   
    proc cpocon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             anorm: cfloat; rcond: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cpocon_work".}   
    proc zpocon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             anorm: cdouble; rcond: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zpocon_work".}   
    proc spoequ_work *(matrix_order: cint; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; s: ptr cfloat; scond: ptr cfloat;                               amax: ptr cfloat): lapack_int {.importc: "LAPACKE_spoequ_work".}   
    proc dpoequ_work *(matrix_order: cint; n: lapack_int; a: ptr cdouble;                               lda: lapack_int; s: ptr cdouble; scond: ptr cdouble;                               amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dpoequ_work".}   
    proc cpoequ_work *(matrix_order: cint; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cpoequ_work".}   
    proc zpoequ_work *(matrix_order: cint; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             s: ptr cdouble; scond: ptr cdouble;                               amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zpoequ_work".}   
    proc spoequb_work *(matrix_order: cint; n: lapack_int; a: ptr cfloat;                                lda: lapack_int; s: ptr cfloat; scond: ptr cfloat;                                amax: ptr cfloat): lapack_int {.importc: "LAPACKE_spoequb_work".}   
    proc dpoequb_work *(matrix_order: cint; n: lapack_int; a: ptr cdouble;                                lda: lapack_int; s: ptr cdouble;                                scond: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dpoequb_work".}   
    proc cpoequb_work *(matrix_order: cint; n: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cpoequb_work".}   
    proc zpoequb_work *(matrix_order: cint; n: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              s: ptr cdouble; scond: ptr cdouble;                                amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zpoequb_work".}   
    proc sporfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                             af: ptr cfloat; ldaf: lapack_int; b: ptr cfloat;                               ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sporfs_work".}   
    proc dporfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                             af: ptr cdouble; ldaf: lapack_int; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dporfs_work".}   
    proc cporfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; af: ptr lapack_complex_float;                               ldaf: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; x: ptr lapack_complex_float;                               ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cporfs_work".}   
    proc zporfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; af: ptr lapack_complex_double;                             ldaf: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zporfs_work".}   
    proc sporfsx_work *(matrix_order: cint; uplo: char; equed: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                                lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                              s: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                              x: ptr cfloat; ldx: lapack_int; rcond: ptr cfloat;                                berr: ptr cfloat; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr cfloat;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sporfsx_work".}   
    proc dporfsx_work *(matrix_order: cint; uplo: char; equed: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                                lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                              s: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                              x: ptr cdouble; ldx: lapack_int;                              rcond: ptr cdouble; berr: ptr cdouble;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble; work: ptr cdouble;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dporfsx_work".}   
    proc cporfsx_work *(matrix_order: cint; uplo: char; equed: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              af: ptr lapack_complex_float; ldaf: lapack_int;                              s: ptr cfloat; b: ptr lapack_complex_float;                                ldb: lapack_int; x: ptr lapack_complex_float;                                ldx: lapack_int; rcond: ptr cfloat;                                berr: ptr cfloat; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr lapack_complex_float;                                rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cporfsx_work".}   
    proc zporfsx_work *(matrix_order: cint; uplo: char; equed: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              af: ptr lapack_complex_double; ldaf: lapack_int;                              s: ptr cdouble; b: ptr lapack_complex_double;                              ldb: lapack_int; x: ptr lapack_complex_double;                              ldx: lapack_int; rcond: ptr cdouble;                                berr: ptr cdouble; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble;                                work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zporfsx_work".}   
    proc sposv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                            b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sposv_work".}   
    proc dposv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                            b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dposv_work".}   
    proc cposv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; a: ptr lapack_complex_float;                              lda: lapack_int; b: ptr lapack_complex_float;                              ldb: lapack_int): lapack_int {.importc: "LAPACKE_cposv_work".}   
    proc zposv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; a: ptr lapack_complex_double;                            lda: lapack_int; b: ptr lapack_complex_double;                            ldb: lapack_int): lapack_int {.importc: "LAPACKE_zposv_work".}   
    proc dsposv_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                               ldx: lapack_int; work: ptr cdouble;                               swork: ptr cfloat; iter: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsposv_work".}   
    proc zcposv_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; work: ptr lapack_complex_double;                             swork: ptr lapack_complex_float; rwork: ptr cdouble;                               iter: ptr lapack_int): lapack_int {.importc: "LAPACKE_zcposv_work".}   
    proc sposvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                               lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                             equed: cstring; s: ptr cfloat; b: ptr cfloat;                               ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sposvx_work".}   
    proc dposvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                               lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                             equed: cstring; s: ptr cdouble; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dposvx_work".}   
    proc cposvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             af: ptr lapack_complex_float; ldaf: lapack_int;                             equed: cstring; s: ptr cfloat;                               b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cposvx_work".}   
    proc zposvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             af: ptr lapack_complex_double; ldaf: lapack_int;                             equed: cstring; s: ptr cdouble;                               b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zposvx_work".}   
    proc sposvxx_work *(matrix_order: cint; fact: char; uplo: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                                lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                              equed: cstring; s: ptr cfloat; b: ptr cfloat;                                ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                              rcond: ptr cfloat; rpvgrw: ptr cfloat;                                berr: ptr cfloat; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr cfloat;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sposvxx_work".}   
    proc dposvxx_work *(matrix_order: cint; fact: char; uplo: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                                lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                              equed: cstring; s: ptr cdouble; b: ptr cdouble;                                ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                              rcond: ptr cdouble; rpvgrw: ptr cdouble;                                berr: ptr cdouble; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble; work: ptr cdouble;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dposvxx_work".}   
    proc cposvxx_work *(matrix_order: cint; fact: char; uplo: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              af: ptr lapack_complex_float; ldaf: lapack_int;                              equed: cstring; s: ptr cfloat;                                b: ptr lapack_complex_float; ldb: lapack_int;                              x: ptr lapack_complex_float; ldx: lapack_int;                              rcond: ptr cfloat; rpvgrw: ptr cfloat;                                berr: ptr cfloat; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr lapack_complex_float;                                rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cposvxx_work".}   
    proc zposvxx_work *(matrix_order: cint; fact: char; uplo: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              af: ptr lapack_complex_double; ldaf: lapack_int;                              equed: cstring; s: ptr cdouble;                                b: ptr lapack_complex_double; ldb: lapack_int;                              x: ptr lapack_complex_double; ldx: lapack_int;                              rcond: ptr cdouble; rpvgrw: ptr cdouble;                                berr: ptr cdouble; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble;                                work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zposvxx_work".}   
    proc spotrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_spotrf_work".}   
    proc dpotrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dpotrf_work".}   
    proc cpotrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_cpotrf_work".}   
    proc zpotrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_zpotrf_work".}   
    proc spotri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_spotri_work".}   
    proc dpotri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dpotri_work".}   
    proc cpotri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_cpotri_work".}   
    proc zpotri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_zpotri_work".}   
    proc spotrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_spotrs_work".}   
    proc dpotrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpotrs_work".}   
    proc cpotrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpotrs_work".}   
    proc zpotrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpotrs_work".}   
    proc sppcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cfloat; anorm: cfloat; rcond: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sppcon_work".}   
    proc dppcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cdouble; anorm: cdouble; rcond: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dppcon_work".}   
    proc cppcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float; anorm: cfloat;                               rcond: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cppcon_work".}   
    proc zppcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double; anorm: cdouble;                               rcond: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zppcon_work".}   
    proc sppequ_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cfloat; s: ptr cfloat; scond: ptr cfloat;                               amax: ptr cfloat): lapack_int {.importc: "LAPACKE_sppequ_work".}   
    proc dppequ_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cdouble; s: ptr cdouble; scond: ptr cdouble;                               amax: ptr cdouble): lapack_int {.importc: "LAPACKE_dppequ_work".}   
    proc cppequ_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float; s: ptr cfloat;                               scond: ptr cfloat; amax: ptr cfloat): lapack_int {.importc: "LAPACKE_cppequ_work".}   
    proc zppequ_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double; s: ptr cdouble;                               scond: ptr cdouble; amax: ptr cdouble): lapack_int {.importc: "LAPACKE_zppequ_work".}   
    proc spprfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr cfloat; afp: ptr cfloat;                               b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                               ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_spprfs_work".}   
    proc dpprfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr cdouble; afp: ptr cdouble;                               b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                               ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dpprfs_work".}   
    proc cpprfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_float;                               afp: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cpprfs_work".}   
    proc zpprfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_double;                             afp: ptr lapack_complex_double;                             b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zpprfs_work".}   
    proc sppsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; ap: ptr cfloat; b: ptr cfloat;                              ldb: lapack_int): lapack_int {.importc: "LAPACKE_sppsv_work".}   
    proc dppsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; ap: ptr cdouble; b: ptr cdouble;                              ldb: lapack_int): lapack_int {.importc: "LAPACKE_dppsv_work".}   
    proc cppsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; ap: ptr lapack_complex_float;                              b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cppsv_work".}   
    proc zppsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; ap: ptr lapack_complex_double;                            b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zppsv_work".}   
    proc sppsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int; ap: ptr cfloat;                               afp: ptr cfloat; equed: cstring; s: ptr cfloat;                               b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                               ldx: lapack_int; rcond: ptr cfloat;                               ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sppsvx_work".}   
    proc dppsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int; ap: ptr cdouble;                               afp: ptr cdouble; equed: cstring; s: ptr cdouble;                               b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                               ldx: lapack_int; rcond: ptr cdouble;                               ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dppsvx_work".}   
    proc cppsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             ap: ptr lapack_complex_float;                               afp: ptr lapack_complex_float; equed: cstring;                              s: ptr cfloat; b: ptr lapack_complex_float;                               ldb: lapack_int; x: ptr lapack_complex_float;                               ldx: lapack_int; rcond: ptr cfloat;                               ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cppsvx_work".}   
    proc zppsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             ap: ptr lapack_complex_double;                             afp: ptr lapack_complex_double; equed: cstring;                              s: ptr cdouble; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; rcond: ptr cdouble;                               ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zppsvx_work".}   
    proc spptrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cfloat): lapack_int {.importc: "LAPACKE_spptrf_work".}   
    proc dpptrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cdouble): lapack_int {.importc: "LAPACKE_dpptrf_work".}   
    proc cpptrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cpptrf_work".}   
    proc zpptrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zpptrf_work".}   
    proc spptri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cfloat): lapack_int {.importc: "LAPACKE_spptri_work".}   
    proc dpptri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cdouble): lapack_int {.importc: "LAPACKE_dpptri_work".}   
    proc cpptri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cpptri_work".}   
    proc zpptri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zpptri_work".}   
    proc spptrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr cfloat; b: ptr cfloat;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_spptrs_work".}   
    proc dpptrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr cdouble; b: ptr cdouble;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpptrs_work".}   
    proc cpptrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpptrs_work".}   
    proc zpptrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_double;                             b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpptrs_work".}   
    proc spstrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; piv: ptr lapack_int;                             rank: ptr lapack_int; tol: cfloat; work: ptr cfloat): lapack_int {.importc: "LAPACKE_spstrf_work".}   
    proc dpstrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int;                             piv: ptr lapack_int; rank: ptr lapack_int;                             tol: cdouble; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dpstrf_work".}   
    proc cpstrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             piv: ptr lapack_int; rank: ptr lapack_int;                             tol: cfloat; work: ptr cfloat): lapack_int {.importc: "LAPACKE_cpstrf_work".}   
    proc zpstrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             piv: ptr lapack_int; rank: ptr lapack_int;                             tol: cdouble; work: ptr cdouble): lapack_int {.importc: "LAPACKE_zpstrf_work".}   
    proc sptcon_work *(n: lapack_int; d: ptr cfloat; e: ptr cfloat;                               anorm: cfloat; rcond: ptr cfloat; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sptcon_work".}   
    proc dptcon_work *(n: lapack_int; d: ptr cdouble; e: ptr cdouble;                               anorm: cdouble; rcond: ptr cdouble;                               work: ptr cdouble): lapack_int {.importc: "LAPACKE_dptcon_work".}   
    proc cptcon_work *(n: lapack_int; d: ptr cfloat;                               e: ptr lapack_complex_float; anorm: cfloat;                               rcond: ptr cfloat; work: ptr cfloat): lapack_int {.importc: "LAPACKE_cptcon_work".}   
    proc zptcon_work *(n: lapack_int; d: ptr cdouble;                               e: ptr lapack_complex_double; anorm: cdouble;                               rcond: ptr cdouble; work: ptr cdouble): lapack_int {.importc: "LAPACKE_zptcon_work".}   
    proc spteqr_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cfloat; e: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_spteqr_work".}   
    proc dpteqr_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cdouble; e: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dpteqr_work".}   
    proc cpteqr_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cfloat; e: ptr cfloat;                               z: ptr lapack_complex_float; ldz: lapack_int;                             work: ptr cfloat): lapack_int {.importc: "LAPACKE_cpteqr_work".}   
    proc zpteqr_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cdouble; e: ptr cdouble;                               z: ptr lapack_complex_double; ldz: lapack_int;                             work: ptr cdouble): lapack_int {.importc: "LAPACKE_zpteqr_work".}   
    proc sptrfs_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                             d: ptr cfloat; e: ptr cfloat; df: ptr cfloat;                               ef: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                             x: ptr cfloat; ldx: lapack_int; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sptrfs_work".}   
    proc dptrfs_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                             d: ptr cdouble; e: ptr cdouble; df: ptr cdouble;                               ef: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                             x: ptr cdouble; ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dptrfs_work".}   
    proc cptrfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; d: ptr cfloat;                               e: ptr lapack_complex_float; df: ptr cfloat;                               ef: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cptrfs_work".}   
    proc zptrfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; d: ptr cdouble;                               e: ptr lapack_complex_double; df: ptr cdouble;                               ef: ptr lapack_complex_double;                             b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zptrfs_work".}   
    proc sptsv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            d: ptr cfloat; e: ptr cfloat; b: ptr cfloat;                              ldb: lapack_int): lapack_int {.importc: "LAPACKE_sptsv_work".}   
    proc dptsv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            d: ptr cdouble; e: ptr cdouble; b: ptr cdouble;                              ldb: lapack_int): lapack_int {.importc: "LAPACKE_dptsv_work".}   
    proc cptsv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            d: ptr cfloat; e: ptr lapack_complex_float;                              b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cptsv_work".}   
    proc zptsv_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                            d: ptr cdouble; e: ptr lapack_complex_double;                            b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zptsv_work".}   
    proc sptsvx_work *(matrix_order: cint; fact: char; n: lapack_int;                             nrhs: lapack_int; d: ptr cfloat; e: ptr cfloat;                               df: ptr cfloat; ef: ptr cfloat; b: ptr cfloat;                               ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sptsvx_work".}   
    proc dptsvx_work *(matrix_order: cint; fact: char; n: lapack_int;                             nrhs: lapack_int; d: ptr cdouble; e: ptr cdouble;                               df: ptr cdouble; ef: ptr cdouble; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dptsvx_work".}   
    proc cptsvx_work *(matrix_order: cint; fact: char; n: lapack_int;                             nrhs: lapack_int; d: ptr cfloat;                               e: ptr lapack_complex_float; df: ptr cfloat;                               ef: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cptsvx_work".}   
    proc zptsvx_work *(matrix_order: cint; fact: char; n: lapack_int;                             nrhs: lapack_int; d: ptr cdouble;                               e: ptr lapack_complex_double; df: ptr cdouble;                               ef: ptr lapack_complex_double;                             b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zptsvx_work".}   
    proc spttrf_work *(n: lapack_int; d: ptr cfloat; e: ptr cfloat): lapack_int {.importc: "LAPACKE_spttrf_work".}   
    proc dpttrf_work *(n: lapack_int; d: ptr cdouble; e: ptr cdouble): lapack_int {.importc: "LAPACKE_dpttrf_work".}   
    proc cpttrf_work *(n: lapack_int; d: ptr cfloat;                               e: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cpttrf_work".}   
    proc zpttrf_work *(n: lapack_int; d: ptr cdouble;                               e: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zpttrf_work".}   
    proc spttrs_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                             d: ptr cfloat; e: ptr cfloat; b: ptr cfloat;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_spttrs_work".}   
    proc dpttrs_work *(matrix_order: cint; n: lapack_int; nrhs: lapack_int;                             d: ptr cdouble; e: ptr cdouble; b: ptr cdouble;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_dpttrs_work".}   
    proc cpttrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; d: ptr cfloat;                               e: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_cpttrs_work".}   
    proc zpttrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; d: ptr cdouble;                               e: ptr lapack_complex_double;                             b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zpttrs_work".}   
    proc ssbev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; kd: lapack_int; ab: ptr cfloat;                              ldab: lapack_int; w: ptr cfloat; z: ptr cfloat;                              ldz: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_ssbev_work".}   
    proc dsbev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; kd: lapack_int; ab: ptr cdouble;                              ldab: lapack_int; w: ptr cdouble; z: ptr cdouble;                              ldz: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dsbev_work".}   
    proc ssbevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; kd: lapack_int; ab: ptr cfloat;                               ldab: lapack_int; w: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_ssbevd_work".}   
    proc dsbevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; kd: lapack_int; ab: ptr cdouble;                               ldab: lapack_int; w: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_dsbevd_work".}   
    proc ssbevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; kd: lapack_int;                             ab: ptr cfloat; ldab: lapack_int; q: ptr cfloat;                               ldq: lapack_int; vl: cfloat; vu: cfloat;                               il: lapack_int; iu: lapack_int; abstol: cfloat;                               m: ptr lapack_int; w: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssbevx_work".}   
    proc dsbevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; kd: lapack_int;                             ab: ptr cdouble; ldab: lapack_int; q: ptr cdouble;                               ldq: lapack_int; vl: cdouble; vu: cdouble;                               il: lapack_int; iu: lapack_int; abstol: cdouble;                               m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsbevx_work".}   
    proc ssbgst_work *(matrix_order: cint; vect: char; uplo: char;                                n: lapack_int; ka: lapack_int; kb: lapack_int;                             ab: ptr cfloat; ldab: lapack_int; bb: ptr cfloat;                               ldbb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             work: ptr cfloat): lapack_int {.importc: "LAPACKE_ssbgst_work".}   
    proc dsbgst_work *(matrix_order: cint; vect: char; uplo: char;                                n: lapack_int; ka: lapack_int; kb: lapack_int;                             ab: ptr cdouble; ldab: lapack_int; bb: ptr cdouble;                               ldbb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             work: ptr cdouble): lapack_int {.importc: "LAPACKE_dsbgst_work".}   
    proc ssbgv_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; ka: lapack_int; kb: lapack_int;                            ab: ptr cfloat; ldab: lapack_int; bb: ptr cfloat;                              ldbb: lapack_int; w: ptr cfloat; z: ptr cfloat;                              ldz: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_ssbgv_work".}   
    proc dsbgv_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; ka: lapack_int; kb: lapack_int;                            ab: ptr cdouble; ldab: lapack_int; bb: ptr cdouble;                              ldbb: lapack_int; w: ptr cdouble; z: ptr cdouble;                              ldz: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dsbgv_work".}   
    proc ssbgvd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; ka: lapack_int; kb: lapack_int;                             ab: ptr cfloat; ldab: lapack_int; bb: ptr cfloat;                               ldbb: lapack_int; w: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_ssbgvd_work".}   
    proc dsbgvd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; ka: lapack_int; kb: lapack_int;                             ab: ptr cdouble; ldab: lapack_int; bb: ptr cdouble;                               ldbb: lapack_int; w: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_dsbgvd_work".}   
    proc ssbgvx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; ka: lapack_int;                             kb: lapack_int; ab: ptr cfloat; ldab: lapack_int;                             bb: ptr cfloat; ldbb: lapack_int; q: ptr cfloat;                               ldq: lapack_int; vl: cfloat; vu: cfloat;                               il: lapack_int; iu: lapack_int; abstol: cfloat;                               m: ptr lapack_int; w: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssbgvx_work".}   
    proc dsbgvx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; ka: lapack_int;                             kb: lapack_int; ab: ptr cdouble; ldab: lapack_int;                             bb: ptr cdouble; ldbb: lapack_int; q: ptr cdouble;                               ldq: lapack_int; vl: cdouble; vu: cdouble;                               il: lapack_int; iu: lapack_int; abstol: cdouble;                               m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsbgvx_work".}   
    proc ssbtrd_work *(matrix_order: cint; vect: char; uplo: char;                                n: lapack_int; kd: lapack_int; ab: ptr cfloat;                               ldab: lapack_int; d: ptr cfloat; e: ptr cfloat;                               q: ptr cfloat; ldq: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_ssbtrd_work".}   
    proc dsbtrd_work *(matrix_order: cint; vect: char; uplo: char;                                n: lapack_int; kd: lapack_int; ab: ptr cdouble;                               ldab: lapack_int; d: ptr cdouble; e: ptr cdouble;                               q: ptr cdouble; ldq: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dsbtrd_work".}   
    proc ssfrk_work *(matrix_order: cint; transr: char; uplo: char;                               trans: char; n: lapack_int; k: lapack_int;                            alpha: cfloat; a: ptr cfloat; lda: lapack_int;                            beta: cfloat; c: ptr cfloat): lapack_int {.importc: "LAPACKE_ssfrk_work".}   
    proc dsfrk_work *(matrix_order: cint; transr: char; uplo: char;                               trans: char; n: lapack_int; k: lapack_int;                            alpha: cdouble; a: ptr cdouble; lda: lapack_int;                            beta: cdouble; c: ptr cdouble): lapack_int {.importc: "LAPACKE_dsfrk_work".}   
    proc sspcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cfloat; ipiv: ptr lapack_int; anorm: cfloat;                               rcond: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sspcon_work".}   
    proc dspcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cdouble; ipiv: ptr lapack_int;                             anorm: cdouble; rcond: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dspcon_work".}   
    proc cspcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                             anorm: cfloat; rcond: ptr cfloat;                               work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cspcon_work".}   
    proc zspcon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                             anorm: cdouble; rcond: ptr cdouble;                               work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zspcon_work".}   
    proc sspev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; ap: ptr cfloat; w: ptr cfloat;                              z: ptr cfloat; ldz: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sspev_work".}   
    proc dspev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; ap: ptr cdouble; w: ptr cdouble;                              z: ptr cdouble; ldz: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dspev_work".}   
    proc sspevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; ap: ptr cfloat; w: ptr cfloat;                               z: ptr cfloat; ldz: lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_sspevd_work".}   
    proc dspevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; ap: ptr cdouble; w: ptr cdouble;                               z: ptr cdouble; ldz: lapack_int; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_dspevd_work".}   
    proc sspevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; ap: ptr cfloat;                               vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                             w: ptr cfloat; z: ptr cfloat; ldz: lapack_int;                             work: ptr cfloat; iwork: ptr lapack_int;                             ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_sspevx_work".}   
    proc dspevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; ap: ptr cdouble;                               vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; abstol: cdouble; m: ptr lapack_int;                             w: ptr cdouble; z: ptr cdouble; ldz: lapack_int;                             work: ptr cdouble; iwork: ptr lapack_int;                             ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dspevx_work".}   
    proc sspgst_work *(matrix_order: cint; itype: lapack_int; uplo: char;                                n: lapack_int; ap: ptr cfloat; bp: ptr cfloat): lapack_int {.importc: "LAPACKE_sspgst_work".}   
    proc dspgst_work *(matrix_order: cint; itype: lapack_int; uplo: char;                                n: lapack_int; ap: ptr cdouble; bp: ptr cdouble): lapack_int {.importc: "LAPACKE_dspgst_work".}   
    proc sspgv_work *(matrix_order: cint; itype: lapack_int; jobz: char;                               uplo: char; n: lapack_int; ap: ptr cfloat;                              bp: ptr cfloat; w: ptr cfloat; z: ptr cfloat;                              ldz: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sspgv_work".}   
    proc dspgv_work *(matrix_order: cint; itype: lapack_int; jobz: char;                               uplo: char; n: lapack_int; ap: ptr cdouble;                              bp: ptr cdouble; w: ptr cdouble; z: ptr cdouble;                              ldz: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dspgv_work".}   
    proc sspgvd_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                uplo: char; n: lapack_int; ap: ptr cfloat;                               bp: ptr cfloat; w: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_sspgvd_work".}   
    proc dspgvd_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                uplo: char; n: lapack_int; ap: ptr cdouble;                               bp: ptr cdouble; w: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_dspgvd_work".}   
    proc sspgvx_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                range: char; uplo: char; n: lapack_int;                             ap: ptr cfloat; bp: ptr cfloat; vl: cfloat;                               vu: cfloat; il: lapack_int; iu: lapack_int;                             abstol: cfloat; m: ptr lapack_int; w: ptr cfloat;                               z: ptr cfloat; ldz: lapack_int; work: ptr cfloat;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_sspgvx_work".}   
    proc dspgvx_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                range: char; uplo: char; n: lapack_int;                             ap: ptr cdouble; bp: ptr cdouble; vl: cdouble;                               vu: cdouble; il: lapack_int; iu: lapack_int;                             abstol: cdouble; m: ptr lapack_int; w: ptr cdouble;                               z: ptr cdouble; ldz: lapack_int; work: ptr cdouble;                               iwork: ptr lapack_int; ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dspgvx_work".}   
    proc ssprfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr cfloat; afp: ptr cfloat;                               ipiv: ptr lapack_int; b: ptr cfloat;                               ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssprfs_work".}   
    proc dsprfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr cdouble; afp: ptr cdouble;                               ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsprfs_work".}   
    proc csprfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_float;                               afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_csprfs_work".}   
    proc zsprfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_double;                             afp: ptr lapack_complex_double;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zsprfs_work".}   
    proc sspsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; ap: ptr cfloat;                              ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_sspsv_work".}   
    proc dspsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; ap: ptr cdouble;                              ipiv: ptr lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dspsv_work".}   
    proc cspsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; ap: ptr lapack_complex_float;                              ipiv: ptr lapack_int; b: ptr lapack_complex_float;                              ldb: lapack_int): lapack_int {.importc: "LAPACKE_cspsv_work".}   
    proc zspsv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; ap: ptr lapack_complex_double;                            ipiv: ptr lapack_int; b: ptr lapack_complex_double;                            ldb: lapack_int): lapack_int {.importc: "LAPACKE_zspsv_work".}   
    proc sspsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int; ap: ptr cfloat;                               afp: ptr cfloat; ipiv: ptr lapack_int;                             b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                               ldx: lapack_int; rcond: ptr cfloat;                               ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sspsvx_work".}   
    proc dspsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int; ap: ptr cdouble;                               afp: ptr cdouble; ipiv: ptr lapack_int;                             b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                               ldx: lapack_int; rcond: ptr cdouble;                               ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dspsvx_work".}   
    proc cspsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             ap: ptr lapack_complex_float;                               afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_cspsvx_work".}   
    proc zspsvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             ap: ptr lapack_complex_double;                             afp: ptr lapack_complex_double;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; rcond: ptr cdouble;                               ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zspsvx_work".}   
    proc ssptrd_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cfloat; d: ptr cfloat; e: ptr cfloat;                               tau: ptr cfloat): lapack_int {.importc: "LAPACKE_ssptrd_work".}   
    proc dsptrd_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cdouble; d: ptr cdouble; e: ptr cdouble;                               tau: ptr cdouble): lapack_int {.importc: "LAPACKE_dsptrd_work".}   
    proc ssptrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cfloat; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssptrf_work".}   
    proc dsptrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cdouble; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsptrf_work".}   
    proc csptrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_csptrf_work".}   
    proc zsptrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zsptrf_work".}   
    proc ssptri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cfloat; ipiv: ptr lapack_int;                             work: ptr cfloat): lapack_int {.importc: "LAPACKE_ssptri_work".}   
    proc dsptri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cdouble; ipiv: ptr lapack_int;                             work: ptr cdouble): lapack_int {.importc: "LAPACKE_dsptri_work".}   
    proc csptri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                             work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_csptri_work".}   
    proc zsptri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zsptri_work".}   
    proc ssptrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr cfloat;                               ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ssptrs_work".}   
    proc dsptrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr cdouble;                               ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_dsptrs_work".}   
    proc csptrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_float;                               ipiv: ptr lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_csptrs_work".}   
    proc zsptrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; ap: ptr lapack_complex_double;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int): lapack_int {.importc: "LAPACKE_zsptrs_work".}   
    proc sstebz_work *(range: char; order: char; n: lapack_int; vl: cfloat;                               vu: cfloat; il: lapack_int; iu: lapack_int;                             abstol: cfloat; d: ptr cfloat; e: ptr cfloat;                               m: ptr lapack_int; nsplit: ptr lapack_int;                             w: ptr cfloat; iblock: ptr lapack_int;                             isplit: ptr lapack_int; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sstebz_work".}   
    proc dstebz_work *(range: char; order: char; n: lapack_int;                             vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; abstol: cdouble; d: ptr cdouble;                               e: ptr cdouble; m: ptr lapack_int;                             nsplit: ptr lapack_int; w: ptr cdouble;                               iblock: ptr lapack_int; isplit: ptr lapack_int;                             work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dstebz_work".}   
    proc sstedc_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cfloat; e: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_sstedc_work".}   
    proc dstedc_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cdouble; e: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_dstedc_work".}   
    proc cstedc_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cfloat; e: ptr cfloat;                               z: ptr lapack_complex_float; ldz: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat; lrwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_cstedc_work".}   
    proc zstedc_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cdouble; e: ptr cdouble;                               z: ptr lapack_complex_double; ldz: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble; lrwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_zstedc_work".}   
    proc sstegr_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cfloat; e: ptr cfloat;                               vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                             w: ptr cfloat; z: ptr cfloat; ldz: lapack_int;                             isuppz: ptr lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_sstegr_work".}   
    proc dstegr_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cdouble; e: ptr cdouble;                               vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; abstol: cdouble; m: ptr lapack_int;                             w: ptr cdouble; z: ptr cdouble; ldz: lapack_int;                             isuppz: ptr lapack_int; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_dstegr_work".}   
    proc cstegr_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cfloat; e: ptr cfloat;                               vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                             w: ptr cfloat; z: ptr lapack_complex_float;                               ldz: lapack_int; isuppz: ptr lapack_int;                             work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_cstegr_work".}   
    proc zstegr_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cdouble; e: ptr cdouble;                               vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; abstol: cdouble; m: ptr lapack_int;                             w: ptr cdouble; z: ptr lapack_complex_double;                             ldz: lapack_int; isuppz: ptr lapack_int;                             work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_zstegr_work".}   
    proc sstein_work *(matrix_order: cint; n: lapack_int; d: ptr cfloat;                               e: ptr cfloat; m: lapack_int; w: ptr cfloat;                               iblock: ptr lapack_int; isplit: ptr lapack_int;                             z: ptr cfloat; ldz: lapack_int; work: ptr cfloat;                               iwork: ptr lapack_int; ifailv: ptr lapack_int): lapack_int {.importc: "LAPACKE_sstein_work".}   
    proc dstein_work *(matrix_order: cint; n: lapack_int; d: ptr cdouble;                               e: ptr cdouble; m: lapack_int; w: ptr cdouble;                               iblock: ptr lapack_int; isplit: ptr lapack_int;                             z: ptr cdouble; ldz: lapack_int; work: ptr cdouble;                               iwork: ptr lapack_int; ifailv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dstein_work".}   
    proc cstein_work *(matrix_order: cint; n: lapack_int; d: ptr cfloat;                               e: ptr cfloat; m: lapack_int; w: ptr cfloat;                               iblock: ptr lapack_int; isplit: ptr lapack_int;                             z: ptr lapack_complex_float; ldz: lapack_int;                             work: ptr cfloat; iwork: ptr lapack_int;                             ifailv: ptr lapack_int): lapack_int {.importc: "LAPACKE_cstein_work".}   
    proc zstein_work *(matrix_order: cint; n: lapack_int; d: ptr cdouble;                               e: ptr cdouble; m: lapack_int; w: ptr cdouble;                               iblock: ptr lapack_int; isplit: ptr lapack_int;                             z: ptr lapack_complex_double; ldz: lapack_int;                             work: ptr cdouble; iwork: ptr lapack_int;                             ifailv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zstein_work".}   
    proc sstemr_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cfloat; e: ptr cfloat;                               vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; m: ptr lapack_int; w: ptr cfloat;                               z: ptr cfloat; ldz: lapack_int; nzc: lapack_int;                             isuppz: ptr lapack_int; tryrac: ptr lapack_logical;                               work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_sstemr_work".}   
    proc dstemr_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cdouble; e: ptr cdouble;                               vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; m: ptr lapack_int; w: ptr cdouble;                               z: ptr cdouble; ldz: lapack_int; nzc: lapack_int;                             isuppz: ptr lapack_int; tryrac: ptr lapack_logical;                               work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_dstemr_work".}   
    proc cstemr_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cfloat; e: ptr cfloat;                               vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; m: ptr lapack_int; w: ptr cfloat;                               z: ptr lapack_complex_float; ldz: lapack_int;                             nzc: lapack_int; isuppz: ptr lapack_int;                             tryrac: ptr lapack_logical; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_cstemr_work".}   
    proc zstemr_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cdouble; e: ptr cdouble;                               vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; m: ptr lapack_int; w: ptr cdouble;                               z: ptr lapack_complex_double; ldz: lapack_int;                             nzc: lapack_int; isuppz: ptr lapack_int;                             tryrac: ptr lapack_logical; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_zstemr_work".}   
    proc ssteqr_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cfloat; e: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_ssteqr_work".}   
    proc dsteqr_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cdouble; e: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dsteqr_work".}   
    proc csteqr_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cfloat; e: ptr cfloat;                               z: ptr lapack_complex_float; ldz: lapack_int;                             work: ptr cfloat): lapack_int {.importc: "LAPACKE_csteqr_work".}   
    proc zsteqr_work *(matrix_order: cint; compz: char; n: lapack_int;                             d: ptr cdouble; e: ptr cdouble;                               z: ptr lapack_complex_double; ldz: lapack_int;                             work: ptr cdouble): lapack_int {.importc: "LAPACKE_zsteqr_work".}   
    proc ssterf_work *(n: lapack_int; d: ptr cfloat; e: ptr cfloat): lapack_int {.importc: "LAPACKE_ssterf_work".}   
    proc dsterf_work *(n: lapack_int; d: ptr cdouble; e: ptr cdouble): lapack_int {.importc: "LAPACKE_dsterf_work".}   
    proc sstev_work *(matrix_order: cint; jobz: char; n: lapack_int;                            d: ptr cfloat; e: ptr cfloat; z: ptr cfloat;                              ldz: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sstev_work".}   
    proc dstev_work *(matrix_order: cint; jobz: char; n: lapack_int;                            d: ptr cdouble; e: ptr cdouble; z: ptr cdouble;                              ldz: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dstev_work".}   
    proc sstevd_work *(matrix_order: cint; jobz: char; n: lapack_int;                             d: ptr cfloat; e: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_sstevd_work".}   
    proc dstevd_work *(matrix_order: cint; jobz: char; n: lapack_int;                             d: ptr cdouble; e: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_dstevd_work".}   
    proc sstevr_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cfloat; e: ptr cfloat;                               vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                             w: ptr cfloat; z: ptr cfloat; ldz: lapack_int;                             isuppz: ptr lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_sstevr_work".}   
    proc dstevr_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cdouble; e: ptr cdouble;                               vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; abstol: cdouble; m: ptr lapack_int;                             w: ptr cdouble; z: ptr cdouble; ldz: lapack_int;                             isuppz: ptr lapack_int; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_dstevr_work".}   
    proc sstevx_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cfloat; e: ptr cfloat;                               vl: cfloat; vu: cfloat; il: lapack_int;                             iu: lapack_int; abstol: cfloat; m: ptr lapack_int;                             w: ptr cfloat; z: ptr cfloat; ldz: lapack_int;                             work: ptr cfloat; iwork: ptr lapack_int;                             ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_sstevx_work".}   
    proc dstevx_work *(matrix_order: cint; jobz: char; range: char;                                n: lapack_int; d: ptr cdouble; e: ptr cdouble;                               vl: cdouble; vu: cdouble; il: lapack_int;                             iu: lapack_int; abstol: cdouble; m: ptr lapack_int;                             w: ptr cdouble; z: ptr cdouble; ldz: lapack_int;                             work: ptr cdouble; iwork: ptr lapack_int;                             ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dstevx_work".}   
    proc ssycon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int;                             ipiv: ptr lapack_int; anorm: cfloat;                               rcond: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssycon_work".}   
    proc dsycon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int;                             ipiv: ptr lapack_int; anorm: cdouble;                               rcond: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsycon_work".}   
    proc csycon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ipiv: ptr lapack_int; anorm: cfloat;                               rcond: ptr cfloat; work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_csycon_work".}   
    proc zsycon_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ipiv: ptr lapack_int; anorm: cdouble;                               rcond: ptr cdouble; work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zsycon_work".}   
    proc ssyequb_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr cfloat; lda: lapack_int; s: ptr cfloat;                                scond: ptr cfloat; amax: ptr cfloat;                                work: ptr cfloat): lapack_int {.importc: "LAPACKE_ssyequb_work".}   
    proc dsyequb_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr cdouble; lda: lapack_int; s: ptr cdouble;                                scond: ptr cdouble; amax: ptr cdouble;                                work: ptr cdouble): lapack_int {.importc: "LAPACKE_dsyequb_work".}   
    proc csyequb_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat;                                work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_csyequb_work".}   
    proc zsyequb_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              s: ptr cdouble; scond: ptr cdouble;                                amax: ptr cdouble; work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zsyequb_work".}   
    proc ssyev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; a: ptr cfloat; lda: lapack_int;                            w: ptr cfloat; work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_ssyev_work".}   
    proc dsyev_work *(matrix_order: cint; jobz: char; uplo: char;                               n: lapack_int; a: ptr cdouble; lda: lapack_int;                            w: ptr cdouble; work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dsyev_work".}   
    proc ssyevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; a: ptr cfloat; lda: lapack_int;                             w: ptr cfloat; work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_ssyevd_work".}   
    proc dsyevd_work *(matrix_order: cint; jobz: char; uplo: char;                                n: lapack_int; a: ptr cdouble; lda: lapack_int;                             w: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_dsyevd_work".}   
    proc ssyevr_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; vl: cfloat; vu: cfloat;                               il: lapack_int; iu: lapack_int; abstol: cfloat;                               m: ptr lapack_int; w: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; isuppz: ptr lapack_int;                             work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_ssyevr_work".}   
    proc dsyevr_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; a: ptr cdouble;                               lda: lapack_int; vl: cdouble; vu: cdouble;                               il: lapack_int; iu: lapack_int; abstol: cdouble;                               m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; isuppz: ptr lapack_int;                             work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_dsyevr_work".}   
    proc ssyevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; vl: cfloat; vu: cfloat;                               il: lapack_int; iu: lapack_int; abstol: cfloat;                               m: ptr lapack_int; w: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssyevx_work".}   
    proc dsyevx_work *(matrix_order: cint; jobz: char; range: char;                                uplo: char; n: lapack_int; a: ptr cdouble;                               lda: lapack_int; vl: cdouble; vu: cdouble;                               il: lapack_int; iu: lapack_int; abstol: cdouble;                               m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsyevx_work".}   
    proc ssygst_work *(matrix_order: cint; itype: lapack_int; uplo: char;                                n: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ssygst_work".}   
    proc dsygst_work *(matrix_order: cint; itype: lapack_int; uplo: char;                                n: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dsygst_work".}   
    proc ssygv_work *(matrix_order: cint; itype: lapack_int; jobz: char;                               uplo: char; n: lapack_int; a: ptr cfloat;                              lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                            w: ptr cfloat; work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_ssygv_work".}   
    proc dsygv_work *(matrix_order: cint; itype: lapack_int; jobz: char;                               uplo: char; n: lapack_int; a: ptr cdouble;                              lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                            w: ptr cdouble; work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dsygv_work".}   
    proc ssygvd_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                uplo: char; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                             w: ptr cfloat; work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_ssygvd_work".}   
    proc dsygvd_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                uplo: char; n: lapack_int; a: ptr cdouble;                               lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                             w: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_dsygvd_work".}   
    proc ssygvx_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                range: char; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int; vl: cfloat; vu: cfloat;                               il: lapack_int; iu: lapack_int; abstol: cfloat;                               m: ptr lapack_int; w: ptr cfloat; z: ptr cfloat;                               ldz: lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssygvx_work".}   
    proc dsygvx_work *(matrix_order: cint; itype: lapack_int; jobz: char;                                range: char; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; vl: cdouble; vu: cdouble;                               il: lapack_int; iu: lapack_int; abstol: cdouble;                               m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                               ldz: lapack_int; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int;                             ifail: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsygvx_work".}   
    proc ssyrfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                             af: ptr cfloat; ldaf: lapack_int;                             ipiv: ptr lapack_int; b: ptr cfloat;                               ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssyrfs_work".}   
    proc dsyrfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                             af: ptr cdouble; ldaf: lapack_int;                             ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsyrfs_work".}   
    proc csyrfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; af: ptr lapack_complex_float;                               ldaf: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_csyrfs_work".}   
    proc zsyrfs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; af: ptr lapack_complex_double;                             ldaf: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zsyrfs_work".}   
    proc ssyrfsx_work *(matrix_order: cint; uplo: char; equed: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                                lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                              ipiv: ptr lapack_int; s: ptr cfloat; b: ptr cfloat;                                ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                              rcond: ptr cfloat; berr: ptr cfloat;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr cfloat;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssyrfsx_work".}   
    proc dsyrfsx_work *(matrix_order: cint; uplo: char; equed: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                                lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                              ipiv: ptr lapack_int; s: ptr cdouble;                                b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                                ldx: lapack_int; rcond: ptr cdouble;                                berr: ptr cdouble; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble; work: ptr cdouble;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsyrfsx_work".}   
    proc csyrfsx_work *(matrix_order: cint; uplo: char; equed: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              af: ptr lapack_complex_float; ldaf: lapack_int;                              ipiv: ptr lapack_int; s: ptr cfloat;                                b: ptr lapack_complex_float; ldb: lapack_int;                              x: ptr lapack_complex_float; ldx: lapack_int;                              rcond: ptr cfloat; berr: ptr cfloat;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr lapack_complex_float;                                rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_csyrfsx_work".}   
    proc zsyrfsx_work *(matrix_order: cint; uplo: char; equed: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              af: ptr lapack_complex_double; ldaf: lapack_int;                              ipiv: ptr lapack_int; s: ptr cdouble;                                b: ptr lapack_complex_double; ldb: lapack_int;                              x: ptr lapack_complex_double; ldx: lapack_int;                              rcond: ptr cdouble; berr: ptr cdouble;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble;                                work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zsyrfsx_work".}   
    proc ssysv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                            ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int;                            work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_ssysv_work".}   
    proc dsysv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                            ipiv: ptr lapack_int; b: ptr cdouble;                              ldb: lapack_int; work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dsysv_work".}   
    proc csysv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; a: ptr lapack_complex_float;                              lda: lapack_int; ipiv: ptr lapack_int;                            b: ptr lapack_complex_float; ldb: lapack_int;                            work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_csysv_work".}   
    proc zsysv_work *(matrix_order: cint; uplo: char; n: lapack_int;                            nrhs: lapack_int; a: ptr lapack_complex_double;                            lda: lapack_int; ipiv: ptr lapack_int;                            b: ptr lapack_complex_double; ldb: lapack_int;                            work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zsysv_work".}   
    proc ssysvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                               lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                             ipiv: ptr lapack_int; b: ptr cfloat;                               ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             rcond: ptr cfloat; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssysvx_work".}   
    proc dsysvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                               lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                             ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             rcond: ptr cdouble; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsysvx_work".}   
    proc csysvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             af: ptr lapack_complex_float; ldaf: lapack_int;                             ipiv: ptr lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; x: ptr lapack_complex_float;                               ldx: lapack_int; rcond: ptr cfloat;                               ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_csysvx_work".}   
    proc zsysvx_work *(matrix_order: cint; fact: char; uplo: char;                                n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             af: ptr lapack_complex_double; ldaf: lapack_int;                             ipiv: ptr lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; rcond: ptr cdouble;                               ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zsysvx_work".}   
    proc ssysvxx_work *(matrix_order: cint; fact: char; uplo: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cfloat;                                lda: lapack_int; af: ptr cfloat; ldaf: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               s: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                              x: ptr cfloat; ldx: lapack_int; rcond: ptr cfloat;                                rpvgrw: ptr cfloat; berr: ptr cfloat;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr cfloat;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssysvxx_work".}   
    proc dsysvxx_work *(matrix_order: cint; fact: char; uplo: char;                                 n: lapack_int; nrhs: lapack_int; a: ptr cdouble;                                lda: lapack_int; af: ptr cdouble; ldaf: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               s: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                              x: ptr cdouble; ldx: lapack_int;                              rcond: ptr cdouble; rpvgrw: ptr cdouble;                                berr: ptr cdouble; n_err_bnds: lapack_int;                              err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble; work: ptr cdouble;                                iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsysvxx_work".}   
    proc csysvxx_work *(matrix_order: cint; fact: char; uplo: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              af: ptr lapack_complex_float; ldaf: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               s: ptr cfloat; b: ptr lapack_complex_float;                                ldb: lapack_int; x: ptr lapack_complex_float;                                ldx: lapack_int; rcond: ptr cfloat;                                rpvgrw: ptr cfloat; berr: ptr cfloat;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cfloat;                                err_bnds_comp: ptr cfloat; nparams: lapack_int;                              params: ptr cfloat; work: ptr lapack_complex_float;                                rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_csysvxx_work".}   
    proc zsysvxx_work *(matrix_order: cint; fact: char; uplo: char;                                 n: lapack_int; nrhs: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              af: ptr lapack_complex_double; ldaf: lapack_int;                              ipiv: ptr lapack_int; equed: cstring;                               s: ptr cdouble; b: ptr lapack_complex_double;                              ldb: lapack_int; x: ptr lapack_complex_double;                              ldx: lapack_int; rcond: ptr cdouble;                                rpvgrw: ptr cdouble; berr: ptr cdouble;                                n_err_bnds: lapack_int; err_bnds_norm: ptr cdouble;                                err_bnds_comp: ptr cdouble; nparams: lapack_int;                              params: ptr cdouble;                                work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_zsysvxx_work".}   
    proc ssytrd_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; d: ptr cfloat;                               e: ptr cfloat; tau: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_ssytrd_work".}   
    proc dsytrd_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; d: ptr cdouble;                               e: ptr cdouble; tau: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dsytrd_work".}   
    proc ssytrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int;                             ipiv: ptr lapack_int; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_ssytrf_work".}   
    proc dsytrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int;                             ipiv: ptr lapack_int; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dsytrf_work".}   
    proc csytrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ipiv: ptr lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_csytrf_work".}   
    proc zsytrf_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ipiv: ptr lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zsytrf_work".}   
    proc ssytri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int;                             ipiv: ptr lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_ssytri_work".}   
    proc dsytri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int;                             ipiv: ptr lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dsytri_work".}   
    proc csytri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ipiv: ptr lapack_int; work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_csytri_work".}   
    proc zsytri_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ipiv: ptr lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zsytri_work".}   
    proc ssytrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                             ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ssytrs_work".}   
    proc dsytrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                             ipiv: ptr lapack_int; b: ptr cdouble;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_dsytrs_work".}   
    proc csytrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_csytrs_work".}   
    proc zsytrs_work *(matrix_order: cint; uplo: char; n: lapack_int;                             nrhs: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; ipiv: ptr lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zsytrs_work".}   
    proc stbcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int; kd: lapack_int;                             ab: ptr cfloat; ldab: lapack_int; rcond: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_stbcon_work".}   
    proc dtbcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int; kd: lapack_int;                             ab: ptr cdouble; ldab: lapack_int;                             rcond: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtbcon_work".}   
    proc ctbcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int; kd: lapack_int;                             ab: ptr lapack_complex_float; ldab: lapack_int;                             rcond: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_ctbcon_work".}   
    proc ztbcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int; kd: lapack_int;                             ab: ptr lapack_complex_double; ldab: lapack_int;                             rcond: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_ztbcon_work".}   
    proc stbrfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; kd: lapack_int;                             nrhs: lapack_int; ab: ptr cfloat; ldab: lapack_int;                             b: ptr cfloat; ldb: lapack_int; x: ptr cfloat;                               ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_stbrfs_work".}   
    proc dtbrfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; kd: lapack_int;                             nrhs: lapack_int; ab: ptr cdouble; ldab: lapack_int;                             b: ptr cdouble; ldb: lapack_int; x: ptr cdouble;                               ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtbrfs_work".}   
    proc ctbrfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; kd: lapack_int;                             nrhs: lapack_int; ab: ptr lapack_complex_float;                               ldab: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int; x: ptr lapack_complex_float;                               ldx: lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_ctbrfs_work".}   
    proc ztbrfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; kd: lapack_int;                             nrhs: lapack_int; ab: ptr lapack_complex_double;                             ldab: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int; x: ptr lapack_complex_double;                             ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_ztbrfs_work".}   
    proc stbtrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; kd: lapack_int;                             nrhs: lapack_int; ab: ptr cfloat; ldab: lapack_int;                             b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_stbtrs_work".}   
    proc dtbtrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; kd: lapack_int;                             nrhs: lapack_int; ab: ptr cdouble; ldab: lapack_int;                             b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dtbtrs_work".}   
    proc ctbtrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; kd: lapack_int;                             nrhs: lapack_int; ab: ptr lapack_complex_float;                               ldab: lapack_int; b: ptr lapack_complex_float;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_ctbtrs_work".}   
    proc ztbtrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; kd: lapack_int;                             nrhs: lapack_int; ab: ptr lapack_complex_double;                             ldab: lapack_int; b: ptr lapack_complex_double;                             ldb: lapack_int): lapack_int {.importc: "LAPACKE_ztbtrs_work".}   
    proc stfsm_work *(matrix_order: cint; transr: char; side: char;                               uplo: char; trans: char; diag: char; m: lapack_int;                            n: lapack_int; alpha: cfloat; a: ptr cfloat;                              b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_stfsm_work".}   
    proc dtfsm_work *(matrix_order: cint; transr: char; side: char;                               uplo: char; trans: char; diag: char; m: lapack_int;                            n: lapack_int; alpha: cdouble; a: ptr cdouble;                              b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dtfsm_work".}   
    proc ctfsm_work *(matrix_order: cint; transr: char; side: char;                               uplo: char; trans: char; diag: char; m: lapack_int;                            n: lapack_int; alpha: lapack_complex_float;                              a: ptr lapack_complex_float;                              b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ctfsm_work".}   
    proc ztfsm_work *(matrix_order: cint; transr: char; side: char;                               uplo: char; trans: char; diag: char; m: lapack_int;                            n: lapack_int; alpha: lapack_complex_double;                            a: ptr lapack_complex_double;                            b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ztfsm_work".}   
    proc stftri_work *(matrix_order: cint; transr: char; uplo: char;                                diag: char; n: lapack_int; a: ptr cfloat): lapack_int {.importc: "LAPACKE_stftri_work".}   
    proc dtftri_work *(matrix_order: cint; transr: char; uplo: char;                                diag: char; n: lapack_int; a: ptr cdouble): lapack_int {.importc: "LAPACKE_dtftri_work".}   
    proc ctftri_work *(matrix_order: cint; transr: char; uplo: char;                                diag: char; n: lapack_int;                             a: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctftri_work".}   
    proc ztftri_work *(matrix_order: cint; transr: char; uplo: char;                                diag: char; n: lapack_int;                             a: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztftri_work".}   
    proc stfttp_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; arf: ptr cfloat; ap: ptr cfloat): lapack_int {.importc: "LAPACKE_stfttp_work".}   
    proc dtfttp_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; arf: ptr cdouble; ap: ptr cdouble): lapack_int {.importc: "LAPACKE_dtfttp_work".}   
    proc ctfttp_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; arf: ptr lapack_complex_float;                               ap: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctfttp_work".}   
    proc ztfttp_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; arf: ptr lapack_complex_double;                             ap: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztfttp_work".}   
    proc stfttr_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; arf: ptr cfloat; a: ptr cfloat;                               lda: lapack_int): lapack_int {.importc: "LAPACKE_stfttr_work".}   
    proc dtfttr_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; arf: ptr cdouble; a: ptr cdouble;                               lda: lapack_int): lapack_int {.importc: "LAPACKE_dtfttr_work".}   
    proc ctfttr_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; arf: ptr lapack_complex_float;                               a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_ctfttr_work".}   
    proc ztfttr_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; arf: ptr lapack_complex_double;                             a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_ztfttr_work".}   
    proc stgevc_work *(matrix_order: cint; side: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             s: ptr cfloat; lds: lapack_int; p: ptr cfloat;                               ldp: lapack_int; vl: ptr cfloat; ldvl: lapack_int;                             vr: ptr cfloat; ldvr: lapack_int; mm: lapack_int;                             m: ptr lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_stgevc_work".}   
    proc dtgevc_work *(matrix_order: cint; side: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             s: ptr cdouble; lds: lapack_int; p: ptr cdouble;                               ldp: lapack_int; vl: ptr cdouble; ldvl: lapack_int;                             vr: ptr cdouble; ldvr: lapack_int; mm: lapack_int;                             m: ptr lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dtgevc_work".}   
    proc ctgevc_work *(matrix_order: cint; side: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             s: ptr lapack_complex_float; lds: lapack_int;                             p: ptr lapack_complex_float; ldp: lapack_int;                             vl: ptr lapack_complex_float; ldvl: lapack_int;                             vr: ptr lapack_complex_float; ldvr: lapack_int;                             mm: lapack_int; m: ptr lapack_int;                             work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_ctgevc_work".}   
    proc ztgevc_work *(matrix_order: cint; side: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             s: ptr lapack_complex_double; lds: lapack_int;                             p: ptr lapack_complex_double; ldp: lapack_int;                             vl: ptr lapack_complex_double; ldvl: lapack_int;                             vr: ptr lapack_complex_double; ldvr: lapack_int;                             mm: lapack_int; m: ptr lapack_int;                             work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_ztgevc_work".}   
    proc stgexc_work *(matrix_order: cint; wantq: lapack_logical;                               wantz: lapack_logical; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                             q: ptr cfloat; ldq: lapack_int; z: ptr cfloat;                               ldz: lapack_int; ifst: ptr lapack_int;                             ilst: ptr lapack_int; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_stgexc_work".}   
    proc dtgexc_work *(matrix_order: cint; wantq: lapack_logical;                               wantz: lapack_logical; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; q: ptr cdouble; ldq: lapack_int;                             z: ptr cdouble; ldz: lapack_int;                             ifst: ptr lapack_int; ilst: ptr lapack_int;                             work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dtgexc_work".}   
    proc ctgexc_work *(matrix_order: cint; wantq: lapack_logical;                               wantz: lapack_logical; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             q: ptr lapack_complex_float; ldq: lapack_int;                             z: ptr lapack_complex_float; ldz: lapack_int;                             ifst: lapack_int; ilst: lapack_int): lapack_int {.importc: "LAPACKE_ctgexc_work".}   
    proc ztgexc_work *(matrix_order: cint; wantq: lapack_logical;                               wantz: lapack_logical; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             q: ptr lapack_complex_double; ldq: lapack_int;                             z: ptr lapack_complex_double; ldz: lapack_int;                             ifst: lapack_int; ilst: lapack_int): lapack_int {.importc: "LAPACKE_ztgexc_work".}   
    proc stgsen_work *(matrix_order: cint; ijob: lapack_int;                             wantq: lapack_logical; wantz: lapack_logical;                               select: ptr lapack_logical; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int; alphar: ptr cfloat;                               alphai: ptr cfloat; beta: ptr cfloat; q: ptr cfloat;                               ldq: lapack_int; z: ptr cfloat; ldz: lapack_int;                             m: ptr lapack_int; pl: ptr cfloat; pr: ptr cfloat;                               dif: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_stgsen_work".}   
    proc dtgsen_work *(matrix_order: cint; ijob: lapack_int;                             wantq: lapack_logical; wantz: lapack_logical;                               select: ptr lapack_logical; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; alphar: ptr cdouble;                               alphai: ptr cdouble; beta: ptr cdouble;                               q: ptr cdouble; ldq: lapack_int; z: ptr cdouble;                               ldz: lapack_int; m: ptr lapack_int; pl: ptr cdouble;                               pr: ptr cdouble; dif: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_dtgsen_work".}   
    proc ctgsen_work *(matrix_order: cint; ijob: lapack_int;                             wantq: lapack_logical; wantz: lapack_logical;                               select: ptr lapack_logical; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             alpha: ptr lapack_complex_float;                               beta: ptr lapack_complex_float;                               q: ptr lapack_complex_float; ldq: lapack_int;                             z: ptr lapack_complex_float; ldz: lapack_int;                             m: ptr lapack_int; pl: ptr cfloat; pr: ptr cfloat;                               dif: ptr cfloat; work: ptr lapack_complex_float;                               lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_ctgsen_work".}   
    proc ztgsen_work *(matrix_order: cint; ijob: lapack_int;                             wantq: lapack_logical; wantz: lapack_logical;                               select: ptr lapack_logical; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             alpha: ptr lapack_complex_double;                             beta: ptr lapack_complex_double;                             q: ptr lapack_complex_double; ldq: lapack_int;                             z: ptr lapack_complex_double; ldz: lapack_int;                             m: ptr lapack_int; pl: ptr cdouble; pr: ptr cdouble;                               dif: ptr cdouble; work: ptr lapack_complex_double;                             lwork: lapack_int; iwork: ptr lapack_int;                             liwork: lapack_int): lapack_int {.importc: "LAPACKE_ztgsen_work".}   
    proc stgsja_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; p: lapack_int;                             n: lapack_int; k: lapack_int; l: lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int; tola: cfloat; tolb: cfloat;                               alpha: ptr cfloat; beta: ptr cfloat; u: ptr cfloat;                               ldu: lapack_int; v: ptr cfloat; ldv: lapack_int;                             q: ptr cfloat; ldq: lapack_int; work: ptr cfloat;                               ncycle: ptr lapack_int): lapack_int {.importc: "LAPACKE_stgsja_work".}   
    proc dtgsja_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; p: lapack_int;                             n: lapack_int; k: lapack_int; l: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; tola: cdouble; tolb: cdouble;                               alpha: ptr cdouble; beta: ptr cdouble;                               u: ptr cdouble; ldu: lapack_int; v: ptr cdouble;                               ldv: lapack_int; q: ptr cdouble; ldq: lapack_int;                             work: ptr cdouble; ncycle: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtgsja_work".}   
    proc ctgsja_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; p: lapack_int;                             n: lapack_int; k: lapack_int; l: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             tola: cfloat; tolb: cfloat; alpha: ptr cfloat;                               beta: ptr cfloat; u: ptr lapack_complex_float;                               ldu: lapack_int; v: ptr lapack_complex_float;                               ldv: lapack_int; q: ptr lapack_complex_float;                               ldq: lapack_int; work: ptr lapack_complex_float;                               ncycle: ptr lapack_int): lapack_int {.importc: "LAPACKE_ctgsja_work".}   
    proc ztgsja_work *(matrix_order: cint; jobu: char; jobv: char;                                jobq: char; m: lapack_int; p: lapack_int;                             n: lapack_int; k: lapack_int; l: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             tola: cdouble; tolb: cdouble; alpha: ptr cdouble;                               beta: ptr cdouble; u: ptr lapack_complex_double;                             ldu: lapack_int; v: ptr lapack_complex_double;                             ldv: lapack_int; q: ptr lapack_complex_double;                             ldq: lapack_int; work: ptr lapack_complex_double;                             ncycle: ptr lapack_int): lapack_int {.importc: "LAPACKE_ztgsja_work".}   
    proc stgsna_work *(matrix_order: cint; job: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int; vl: ptr cfloat; ldvl: lapack_int;                             vr: ptr cfloat; ldvr: lapack_int; s: ptr cfloat;                               dif: ptr cfloat; mm: lapack_int; m: ptr lapack_int;                             work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_stgsna_work".}   
    proc dtgsna_work *(matrix_order: cint; job: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; vl: ptr cdouble; ldvl: lapack_int;                             vr: ptr cdouble; ldvr: lapack_int; s: ptr cdouble;                               dif: ptr cdouble; mm: lapack_int; m: ptr lapack_int;                             work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtgsna_work".}   
    proc ctgsna_work *(matrix_order: cint; job: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             vl: ptr lapack_complex_float; ldvl: lapack_int;                             vr: ptr lapack_complex_float; ldvr: lapack_int;                             s: ptr cfloat; dif: ptr cfloat; mm: lapack_int;                             m: ptr lapack_int; work: ptr lapack_complex_float;                               lwork: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_ctgsna_work".}   
    proc ztgsna_work *(matrix_order: cint; job: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             vl: ptr lapack_complex_double; ldvl: lapack_int;                             vr: ptr lapack_complex_double; ldvr: lapack_int;                             s: ptr cdouble; dif: ptr cdouble; mm: lapack_int;                             m: ptr lapack_int; work: ptr lapack_complex_double;                             lwork: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_ztgsna_work".}   
    proc stgsyl_work *(matrix_order: cint; trans: char; ijob: lapack_int;                             m: lapack_int; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; b: ptr cfloat; ldb: lapack_int;                             c: ptr cfloat; ldc: lapack_int; d: ptr cfloat;                               ldd: lapack_int; e: ptr cfloat; lde: lapack_int;                             f: ptr cfloat; ldf: lapack_int; scale: ptr cfloat;                               dif: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_stgsyl_work".}   
    proc dtgsyl_work *(matrix_order: cint; trans: char; ijob: lapack_int;                             m: lapack_int; n: lapack_int; a: ptr cdouble;                               lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                             c: ptr cdouble; ldc: lapack_int; d: ptr cdouble;                               ldd: lapack_int; e: ptr cdouble; lde: lapack_int;                             f: ptr cdouble; ldf: lapack_int; scale: ptr cdouble;                               dif: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtgsyl_work".}   
    proc ctgsyl_work *(matrix_order: cint; trans: char; ijob: lapack_int;                             m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             c: ptr lapack_complex_float; ldc: lapack_int;                             d: ptr lapack_complex_float; ldd: lapack_int;                             e: ptr lapack_complex_float; lde: lapack_int;                             f: ptr lapack_complex_float; ldf: lapack_int;                             scale: ptr cfloat; dif: ptr cfloat;                               work: ptr lapack_complex_float; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_ctgsyl_work".}   
    proc ztgsyl_work *(matrix_order: cint; trans: char; ijob: lapack_int;                             m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             c: ptr lapack_complex_double; ldc: lapack_int;                             d: ptr lapack_complex_double; ldd: lapack_int;                             e: ptr lapack_complex_double; lde: lapack_int;                             f: ptr lapack_complex_double; ldf: lapack_int;                             scale: ptr cdouble; dif: ptr cdouble;                               work: ptr lapack_complex_double; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_ztgsyl_work".}   
    proc stpcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int; ap: ptr cfloat;                               rcond: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_stpcon_work".}   
    proc dtpcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int; ap: ptr cdouble;                               rcond: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtpcon_work".}   
    proc ctpcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int;                             ap: ptr lapack_complex_float; rcond: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_ctpcon_work".}   
    proc ztpcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int;                             ap: ptr lapack_complex_double; rcond: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_ztpcon_work".}   
    proc stprfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             ap: ptr cfloat; b: ptr cfloat; ldb: lapack_int;                             x: ptr cfloat; ldx: lapack_int; ferr: ptr cfloat;                               berr: ptr cfloat; work: ptr cfloat;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_stprfs_work".}   
    proc dtprfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             ap: ptr cdouble; b: ptr cdouble; ldb: lapack_int;                             x: ptr cdouble; ldx: lapack_int; ferr: ptr cdouble;                               berr: ptr cdouble; work: ptr cdouble;                               iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtprfs_work".}   
    proc ctprfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             ap: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_ctprfs_work".}   
    proc ztprfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             ap: ptr lapack_complex_double;                             b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_ztprfs_work".}   
    proc stptri_work *(matrix_order: cint; uplo: char; diag: char;                                n: lapack_int; ap: ptr cfloat): lapack_int {.importc: "LAPACKE_stptri_work".}   
    proc dtptri_work *(matrix_order: cint; uplo: char; diag: char;                                n: lapack_int; ap: ptr cdouble): lapack_int {.importc: "LAPACKE_dtptri_work".}   
    proc ctptri_work *(matrix_order: cint; uplo: char; diag: char;                                n: lapack_int; ap: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctptri_work".}   
    proc ztptri_work *(matrix_order: cint; uplo: char; diag: char;                                n: lapack_int; ap: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztptri_work".}   
    proc stptrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             ap: ptr cfloat; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_stptrs_work".}   
    proc dtptrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             ap: ptr cdouble; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dtptrs_work".}   
    proc ctptrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             ap: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ctptrs_work".}   
    proc ztptrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             ap: ptr lapack_complex_double;                             b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ztptrs_work".}   
    proc stpttf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; ap: ptr cfloat; arf: ptr cfloat): lapack_int {.importc: "LAPACKE_stpttf_work".}   
    proc dtpttf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; ap: ptr cdouble; arf: ptr cdouble): lapack_int {.importc: "LAPACKE_dtpttf_work".}   
    proc ctpttf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; ap: ptr lapack_complex_float;                               arf: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctpttf_work".}   
    proc ztpttf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; ap: ptr lapack_complex_double;                             arf: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztpttf_work".}   
    proc stpttr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cfloat; a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_stpttr_work".}   
    proc dtpttr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr cdouble; a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dtpttr_work".}   
    proc ctpttr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float;                               a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_ctpttr_work".}   
    proc ztpttr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double;                             a: ptr lapack_complex_double; lda: lapack_int): lapack_int {.importc: "LAPACKE_ztpttr_work".}   
    proc strcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int; a: ptr cfloat;                               lda: lapack_int; rcond: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_strcon_work".}   
    proc dtrcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int; a: ptr cdouble;                               lda: lapack_int; rcond: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtrcon_work".}   
    proc ctrcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             rcond: ptr cfloat; work: ptr lapack_complex_float;                               rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_ctrcon_work".}   
    proc ztrcon_work *(matrix_order: cint; norm: char; uplo: char;                                diag: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             rcond: ptr cdouble; work: ptr lapack_complex_double;                             rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_ztrcon_work".}   
    proc strevc_work *(matrix_order: cint; side: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr cfloat; ldt: lapack_int; vl: ptr cfloat;                               ldvl: lapack_int; vr: ptr cfloat; ldvr: lapack_int;                             mm: lapack_int; m: ptr lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_strevc_work".}   
    proc dtrevc_work *(matrix_order: cint; side: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr cdouble; ldt: lapack_int; vl: ptr cdouble;                               ldvl: lapack_int; vr: ptr cdouble; ldvr: lapack_int;                             mm: lapack_int; m: ptr lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrevc_work".}   
    proc ctrevc_work *(matrix_order: cint; side: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr lapack_complex_float; ldt: lapack_int;                             vl: ptr lapack_complex_float; ldvl: lapack_int;                             vr: ptr lapack_complex_float; ldvr: lapack_int;                             mm: lapack_int; m: ptr lapack_int;                             work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_ctrevc_work".}   
    proc ztrevc_work *(matrix_order: cint; side: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr lapack_complex_double; ldt: lapack_int;                             vl: ptr lapack_complex_double; ldvl: lapack_int;                             vr: ptr lapack_complex_double; ldvr: lapack_int;                             mm: lapack_int; m: ptr lapack_int;                             work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_ztrevc_work".}   
    proc strexc_work *(matrix_order: cint; compq: char; n: lapack_int;                             t: ptr cfloat; ldt: lapack_int; q: ptr cfloat;                               ldq: lapack_int; ifst: ptr lapack_int;                             ilst: ptr lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_strexc_work".}   
    proc dtrexc_work *(matrix_order: cint; compq: char; n: lapack_int;                             t: ptr cdouble; ldt: lapack_int; q: ptr cdouble;                               ldq: lapack_int; ifst: ptr lapack_int;                             ilst: ptr lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrexc_work".}   
    proc ctrexc_work *(matrix_order: cint; compq: char; n: lapack_int;                             t: ptr lapack_complex_float; ldt: lapack_int;                             q: ptr lapack_complex_float; ldq: lapack_int;                             ifst: lapack_int; ilst: lapack_int): lapack_int {.importc: "LAPACKE_ctrexc_work".}   
    proc ztrexc_work *(matrix_order: cint; compq: char; n: lapack_int;                             t: ptr lapack_complex_double; ldt: lapack_int;                             q: ptr lapack_complex_double; ldq: lapack_int;                             ifst: lapack_int; ilst: lapack_int): lapack_int {.importc: "LAPACKE_ztrexc_work".}   
    proc strrfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int; x: ptr cfloat; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr cfloat; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_strrfs_work".}   
    proc dtrrfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; x: ptr cdouble; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr cdouble; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtrrfs_work".}   
    proc ctrrfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             x: ptr lapack_complex_float; ldx: lapack_int;                             ferr: ptr cfloat; berr: ptr cfloat;                               work: ptr lapack_complex_float; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_ctrrfs_work".}   
    proc ztrrfs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             x: ptr lapack_complex_double; ldx: lapack_int;                             ferr: ptr cdouble; berr: ptr cdouble;                               work: ptr lapack_complex_double; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_ztrrfs_work".}   
    proc strsen_work *(matrix_order: cint; job: char; compq: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr cfloat; ldt: lapack_int; q: ptr cfloat;                               ldq: lapack_int; wr: ptr cfloat; wi: ptr cfloat;                               m: ptr lapack_int; s: ptr cfloat; sep: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_strsen_work".}   
    proc dtrsen_work *(matrix_order: cint; job: char; compq: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr cdouble; ldt: lapack_int; q: ptr cdouble;                               ldq: lapack_int; wr: ptr cdouble; wi: ptr cdouble;                               m: ptr lapack_int; s: ptr cdouble; sep: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int; liwork: lapack_int): lapack_int {.importc: "LAPACKE_dtrsen_work".}   
    proc ctrsen_work *(matrix_order: cint; job: char; compq: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr lapack_complex_float; ldt: lapack_int;                             q: ptr lapack_complex_float; ldq: lapack_int;                             w: ptr lapack_complex_float; m: ptr lapack_int;                             s: ptr cfloat; sep: ptr cfloat;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_ctrsen_work".}   
    proc ztrsen_work *(matrix_order: cint; job: char; compq: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr lapack_complex_double; ldt: lapack_int;                             q: ptr lapack_complex_double; ldq: lapack_int;                             w: ptr lapack_complex_double; m: ptr lapack_int;                             s: ptr cdouble; sep: ptr cdouble;                               work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_ztrsen_work".}   
    proc strsna_work *(matrix_order: cint; job: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr cfloat; ldt: lapack_int; vl: ptr cfloat;                               ldvl: lapack_int; vr: ptr cfloat; ldvr: lapack_int;                             s: ptr cfloat; sep: ptr cfloat; mm: lapack_int;                             m: ptr lapack_int; work: ptr cfloat;                               ldwork: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_strsna_work".}   
    proc dtrsna_work *(matrix_order: cint; job: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr cdouble; ldt: lapack_int; vl: ptr cdouble;                               ldvl: lapack_int; vr: ptr cdouble; ldvr: lapack_int;                             s: ptr cdouble; sep: ptr cdouble; mm: lapack_int;                             m: ptr lapack_int; work: ptr cdouble;                               ldwork: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dtrsna_work".}   
    proc ctrsna_work *(matrix_order: cint; job: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr lapack_complex_float; ldt: lapack_int;                             vl: ptr lapack_complex_float; ldvl: lapack_int;                             vr: ptr lapack_complex_float; ldvr: lapack_int;                             s: ptr cfloat; sep: ptr cfloat; mm: lapack_int;                             m: ptr lapack_int; work: ptr lapack_complex_float;                               ldwork: lapack_int; rwork: ptr cfloat): lapack_int {.importc: "LAPACKE_ctrsna_work".}   
    proc ztrsna_work *(matrix_order: cint; job: char; howmny: char;                                select: ptr lapack_logical; n: lapack_int;                             t: ptr lapack_complex_double; ldt: lapack_int;                             vl: ptr lapack_complex_double; ldvl: lapack_int;                             vr: ptr lapack_complex_double; ldvr: lapack_int;                             s: ptr cdouble; sep: ptr cdouble; mm: lapack_int;                             m: ptr lapack_int; work: ptr lapack_complex_double;                             ldwork: lapack_int; rwork: ptr cdouble): lapack_int {.importc: "LAPACKE_ztrsna_work".}   
    proc strsyl_work *(matrix_order: cint; trana: char; tranb: char;                                isgn: lapack_int; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int; c: ptr cfloat; ldc: lapack_int;                             scale: ptr cfloat): lapack_int {.importc: "LAPACKE_strsyl_work".}   
    proc dtrsyl_work *(matrix_order: cint; trana: char; tranb: char;                                isgn: lapack_int; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int; c: ptr cdouble; ldc: lapack_int;                             scale: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrsyl_work".}   
    proc ctrsyl_work *(matrix_order: cint; trana: char; tranb: char;                                isgn: lapack_int; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             c: ptr lapack_complex_float; ldc: lapack_int;                             scale: ptr cfloat): lapack_int {.importc: "LAPACKE_ctrsyl_work".}   
    proc ztrsyl_work *(matrix_order: cint; trana: char; tranb: char;                                isgn: lapack_int; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             c: ptr lapack_complex_double; ldc: lapack_int;                             scale: ptr cdouble): lapack_int {.importc: "LAPACKE_ztrsyl_work".}   
    proc strtri_work *(matrix_order: cint; uplo: char; diag: char;                                n: lapack_int; a: ptr cfloat; lda: lapack_int): lapack_int {.importc: "LAPACKE_strtri_work".}   
    proc dtrtri_work *(matrix_order: cint; uplo: char; diag: char;                                n: lapack_int; a: ptr cdouble; lda: lapack_int): lapack_int {.importc: "LAPACKE_dtrtri_work".}   
    proc ctrtri_work *(matrix_order: cint; uplo: char; diag: char;                                n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int): lapack_int {.importc: "LAPACKE_ctrtri_work".}   
    proc ztrtri_work *(matrix_order: cint; uplo: char; diag: char;                                n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int): lapack_int {.importc: "LAPACKE_ztrtri_work".}   
    proc strtrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_strtrs_work".}   
    proc dtrtrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                               ldb: lapack_int): lapack_int {.importc: "LAPACKE_dtrtrs_work".}   
    proc ctrtrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ctrtrs_work".}   
    proc ztrtrs_work *(matrix_order: cint; uplo: char; trans: char;                                diag: char; n: lapack_int; nrhs: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ztrtrs_work".}   
    proc strttf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr cfloat; lda: lapack_int;                             arf: ptr cfloat): lapack_int {.importc: "LAPACKE_strttf_work".}   
    proc dtrttf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr cdouble; lda: lapack_int;                             arf: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrttf_work".}   
    proc ctrttf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; arf: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctrttf_work".}   
    proc ztrttf_work *(matrix_order: cint; transr: char; uplo: char;                                n: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; arf: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztrttf_work".}   
    proc strttp_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; ap: ptr cfloat): lapack_int {.importc: "LAPACKE_strttp_work".}   
    proc dtrttp_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; ap: ptr cdouble): lapack_int {.importc: "LAPACKE_dtrttp_work".}   
    proc ctrttp_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             ap: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctrttp_work".}   
    proc ztrttp_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             ap: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztrttp_work".}   
    proc stzrzf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cfloat; lda: lapack_int; tau: ptr cfloat;                               work: ptr cfloat; lwork: lapack_int): lapack_int {.importc: "LAPACKE_stzrzf_work".}   
    proc dtzrzf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr cdouble; lda: lapack_int; tau: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dtzrzf_work".}   
    proc ctzrzf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_ctzrzf_work".}   
    proc ztzrzf_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_ztzrzf_work".}   
    proc cungbr_work *(matrix_order: cint; vect: char; m: lapack_int;                             n: lapack_int; k: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cungbr_work".}   
    proc zungbr_work *(matrix_order: cint; vect: char; m: lapack_int;                             n: lapack_int; k: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zungbr_work".}   
    proc cunghr_work *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunghr_work".}   
    proc zunghr_work *(matrix_order: cint; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunghr_work".}   
    proc cunglq_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunglq_work".}   
    proc zunglq_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunglq_work".}   
    proc cungql_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cungql_work".}   
    proc zungql_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zungql_work".}   
    proc cungqr_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cungqr_work".}   
    proc zungqr_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zungqr_work".}   
    proc cungrq_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cungrq_work".}   
    proc zungrq_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zungrq_work".}   
    proc cungtr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cungtr_work".}   
    proc zungtr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zungtr_work".}   
    proc cunmbr_work *(matrix_order: cint; vect: char; side: char;                                trans: char; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; tau: ptr lapack_complex_float;                               c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunmbr_work".}   
    proc zunmbr_work *(matrix_order: cint; vect: char; side: char;                                trans: char; m: lapack_int; n: lapack_int;                             k: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; tau: ptr lapack_complex_double;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunmbr_work".}   
    proc cunmhr_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; tau: ptr lapack_complex_float;                               c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunmhr_work".}   
    proc zunmhr_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; ilo: lapack_int;                             ihi: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; tau: ptr lapack_complex_double;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunmhr_work".}   
    proc cunmlq_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunmlq_work".}   
    proc zunmlq_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunmlq_work".}   
    proc cunmql_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunmql_work".}   
    proc zunmql_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunmql_work".}   
    proc cunmqr_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunmqr_work".}   
    proc zunmqr_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunmqr_work".}   
    proc cunmrq_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunmrq_work".}   
    proc zunmrq_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunmrq_work".}   
    proc cunmrz_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             l: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; tau: ptr lapack_complex_float;                               c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunmrz_work".}   
    proc zunmrz_work *(matrix_order: cint; side: char; trans: char;                                m: lapack_int; n: lapack_int; k: lapack_int;                             l: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; tau: ptr lapack_complex_double;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunmrz_work".}   
    proc cunmtr_work *(matrix_order: cint; side: char; uplo: char;                                trans: char; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             tau: ptr lapack_complex_float;                               c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunmtr_work".}   
    proc zunmtr_work *(matrix_order: cint; side: char; uplo: char;                                trans: char; m: lapack_int; n: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             tau: ptr lapack_complex_double;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunmtr_work".}   
    proc cupgtr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_float;                               tau: ptr lapack_complex_float;                               q: ptr lapack_complex_float; ldq: lapack_int;                             work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cupgtr_work".}   
    proc zupgtr_work *(matrix_order: cint; uplo: char; n: lapack_int;                             ap: ptr lapack_complex_double;                             tau: ptr lapack_complex_double;                             q: ptr lapack_complex_double; ldq: lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zupgtr_work".}   
    proc cupmtr_work *(matrix_order: cint; side: char; uplo: char;                                trans: char; m: lapack_int; n: lapack_int;                             ap: ptr lapack_complex_float;                               tau: ptr lapack_complex_float;                               c: ptr lapack_complex_float; ldc: lapack_int;                             work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cupmtr_work".}   
    proc zupmtr_work *(matrix_order: cint; side: char; uplo: char;                                trans: char; m: lapack_int; n: lapack_int;                             ap: ptr lapack_complex_double;                             tau: ptr lapack_complex_double;                             c: ptr lapack_complex_double; ldc: lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zupmtr_work".}   
    proc claghe *(matrix_order: cint; n: lapack_int; k: lapack_int;                        d: ptr cfloat; a: ptr lapack_complex_float;                          lda: lapack_int; iseed: ptr lapack_int): lapack_int {.importc: "LAPACKE_claghe".}   
    proc zlaghe *(matrix_order: cint; n: lapack_int; k: lapack_int;                        d: ptr cdouble; a: ptr lapack_complex_double;                        lda: lapack_int; iseed: ptr lapack_int): lapack_int {.importc: "LAPACKE_zlaghe".}   
    proc slagsy *(matrix_order: cint; n: lapack_int; k: lapack_int;                        d: ptr cfloat; a: ptr cfloat; lda: lapack_int;                        iseed: ptr lapack_int): lapack_int {.importc: "LAPACKE_slagsy".}   
    proc dlagsy *(matrix_order: cint; n: lapack_int; k: lapack_int;                        d: ptr cdouble; a: ptr cdouble; lda: lapack_int;                        iseed: ptr lapack_int): lapack_int {.importc: "LAPACKE_dlagsy".}   
    proc clagsy *(matrix_order: cint; n: lapack_int; k: lapack_int;                        d: ptr cfloat; a: ptr lapack_complex_float;                          lda: lapack_int; iseed: ptr lapack_int): lapack_int {.importc: "LAPACKE_clagsy".}   
    proc zlagsy *(matrix_order: cint; n: lapack_int; k: lapack_int;                        d: ptr cdouble; a: ptr lapack_complex_double;                        lda: lapack_int; iseed: ptr lapack_int): lapack_int {.importc: "LAPACKE_zlagsy".}   
    proc slapmr *(matrix_order: cint; forwrd: lapack_logical;                          m: lapack_int; n: lapack_int; x: ptr cfloat;                          ldx: lapack_int; k: ptr lapack_int): lapack_int {.importc: "LAPACKE_slapmr".}   
    proc dlapmr *(matrix_order: cint; forwrd: lapack_logical;                          m: lapack_int; n: lapack_int; x: ptr cdouble;                          ldx: lapack_int; k: ptr lapack_int): lapack_int {.importc: "LAPACKE_dlapmr".}   
    proc clapmr *(matrix_order: cint; forwrd: lapack_logical;                          m: lapack_int; n: lapack_int;                        x: ptr lapack_complex_float; ldx: lapack_int;                        k: ptr lapack_int): lapack_int {.importc: "LAPACKE_clapmr".}   
    proc zlapmr *(matrix_order: cint; forwrd: lapack_logical;                          m: lapack_int; n: lapack_int;                        x: ptr lapack_complex_double; ldx: lapack_int;                        k: ptr lapack_int): lapack_int {.importc: "LAPACKE_zlapmr".}   
    proc slapy2 *(x: cfloat; y: cfloat): cfloat {.importc: "LAPACKE_slapy2".}   
    proc dlapy2 *(x: cdouble; y: cdouble): cdouble {.importc: "LAPACKE_dlapy2".}   
    proc slapy3 *(x: cfloat; y: cfloat; z: cfloat): cfloat {.importc: "LAPACKE_slapy3".}   
    proc dlapy3 *(x: cdouble; y: cdouble; z: cdouble): cdouble {.importc: "LAPACKE_dlapy3".}   
    proc slartgp *(f: cfloat; g: cfloat; cs: ptr cfloat; sn: ptr cfloat;                           r: ptr cfloat): lapack_int {.importc: "LAPACKE_slartgp".}   
    proc dlartgp *(f: cdouble; g: cdouble; cs: ptr cdouble;                           sn: ptr cdouble; r: ptr cdouble): lapack_int {.importc: "LAPACKE_dlartgp".}   
    proc slartgs *(x: cfloat; y: cfloat; sigma: cfloat; cs: ptr cfloat;                           sn: ptr cfloat): lapack_int {.importc: "LAPACKE_slartgs".}   
    proc dlartgs *(x: cdouble; y: cdouble; sigma: cdouble; cs: ptr cdouble;                           sn: ptr cdouble): lapack_int {.importc: "LAPACKE_dlartgs".}   
    #LAPACK 3.3.0
    proc cbbcsd *(matrix_order: cint; jobu1: char; jobu2: char;                           jobv1t: char; jobv2t: char; trans: char; m: lapack_int;                        p: lapack_int; q: lapack_int; theta: ptr cfloat;                          phi: ptr cfloat; u1: ptr lapack_complex_float;                          ldu1: lapack_int; u2: ptr lapack_complex_float;                          ldu2: lapack_int; v1t: ptr lapack_complex_float;                          ldv1t: lapack_int; v2t: ptr lapack_complex_float;                          ldv2t: lapack_int; b11d: ptr cfloat; b11e: ptr cfloat;                          b12d: ptr cfloat; b12e: ptr cfloat; b21d: ptr cfloat;                          b21e: ptr cfloat; b22d: ptr cfloat; b22e: ptr cfloat): lapack_int {.importc: "LAPACKE_cbbcsd".}   
    proc cbbcsd_work *(matrix_order: cint; jobu1: char; jobu2: char;                                jobv1t: char; jobv2t: char; trans: char;                                m: lapack_int; p: lapack_int; q: lapack_int;                             theta: ptr cfloat; phi: ptr cfloat;                               u1: ptr lapack_complex_float; ldu1: lapack_int;                             u2: ptr lapack_complex_float; ldu2: lapack_int;                             v1t: ptr lapack_complex_float; ldv1t: lapack_int;                             v2t: ptr lapack_complex_float; ldv2t: lapack_int;                             b11d: ptr cfloat; b11e: ptr cfloat;                               b12d: ptr cfloat; b12e: ptr cfloat;                               b21d: ptr cfloat; b21e: ptr cfloat;                               b22d: ptr cfloat; b22e: ptr cfloat;                               rwork: ptr cfloat; lrwork: lapack_int): lapack_int {.importc: "LAPACKE_cbbcsd_work".}   
    proc cheswapr *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr lapack_complex_float; i1: lapack_int;                          i2: lapack_int): lapack_int {.importc: "LAPACKE_cheswapr".}   
    proc cheswapr_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr lapack_complex_float; i1: lapack_int;                               i2: lapack_int): lapack_int {.importc: "LAPACKE_cheswapr_work".}   
    proc chetri2 *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_chetri2".}   
    proc chetri2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              ipiv: ptr lapack_int;                              work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_chetri2_work".}   
    proc chetri2x *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr lapack_complex_float; lda: lapack_int;                          ipiv: ptr lapack_int; nb: lapack_int): lapack_int {.importc: "LAPACKE_chetri2x".}   
    proc chetri2x_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr lapack_complex_float; lda: lapack_int;                               ipiv: ptr lapack_int;                               work: ptr lapack_complex_float; nb: lapack_int): lapack_int {.importc: "LAPACKE_chetri2x_work".}   
    proc chetrs2 *(matrix_order: cint; uplo: char; n: lapack_int;                         nrhs: lapack_int; a: ptr lapack_complex_float;                           lda: lapack_int; ipiv: ptr lapack_int;                         b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_chetrs2".}   
    proc chetrs2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              nrhs: lapack_int; a: ptr lapack_complex_float;                                lda: lapack_int; ipiv: ptr lapack_int;                              b: ptr lapack_complex_float; ldb: lapack_int;                              work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_chetrs2_work".}   
    proc csyconv *(matrix_order: cint; uplo: char; way: char;                            n: lapack_int; a: ptr lapack_complex_float;                           lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_csyconv".}   
    proc csyconv_work *(matrix_order: cint; uplo: char; way: char;                                 n: lapack_int; a: ptr lapack_complex_float;                                lda: lapack_int; ipiv: ptr lapack_int;                              work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_csyconv_work".}   
    proc csyswapr *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr lapack_complex_float; i1: lapack_int;                          i2: lapack_int): lapack_int {.importc: "LAPACKE_csyswapr".}   
    proc csyswapr_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr lapack_complex_float; i1: lapack_int;                               i2: lapack_int): lapack_int {.importc: "LAPACKE_csyswapr_work".}   
    proc csytri2 *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_csytri2".}   
    proc csytri2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              ipiv: ptr lapack_int;                              work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_csytri2_work".}   
    proc csytri2x *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr lapack_complex_float; lda: lapack_int;                          ipiv: ptr lapack_int; nb: lapack_int): lapack_int {.importc: "LAPACKE_csytri2x".}   
    proc csytri2x_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr lapack_complex_float; lda: lapack_int;                               ipiv: ptr lapack_int;                               work: ptr lapack_complex_float; nb: lapack_int): lapack_int {.importc: "LAPACKE_csytri2x_work".}   
    proc csytrs2 *(matrix_order: cint; uplo: char; n: lapack_int;                         nrhs: lapack_int; a: ptr lapack_complex_float;                           lda: lapack_int; ipiv: ptr lapack_int;                         b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_csytrs2".}   
    proc csytrs2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              nrhs: lapack_int; a: ptr lapack_complex_float;                                lda: lapack_int; ipiv: ptr lapack_int;                              b: ptr lapack_complex_float; ldb: lapack_int;                              work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_csytrs2_work".}   
    proc cunbdb *(matrix_order: cint; trans: char; signs: char;                           m: lapack_int; p: lapack_int; q: lapack_int;                        x11: ptr lapack_complex_float; ldx11: lapack_int;                        x12: ptr lapack_complex_float; ldx12: lapack_int;                        x21: ptr lapack_complex_float; ldx21: lapack_int;                        x22: ptr lapack_complex_float; ldx22: lapack_int;                        theta: ptr cfloat; phi: ptr cfloat;                          taup1: ptr lapack_complex_float;                          taup2: ptr lapack_complex_float;                          tauq1: ptr lapack_complex_float;                          tauq2: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cunbdb".}   
    proc cunbdb_work *(matrix_order: cint; trans: char; signs: char;                                m: lapack_int; p: lapack_int; q: lapack_int;                             x11: ptr lapack_complex_float; ldx11: lapack_int;                             x12: ptr lapack_complex_float; ldx12: lapack_int;                             x21: ptr lapack_complex_float; ldx21: lapack_int;                             x22: ptr lapack_complex_float; ldx22: lapack_int;                             theta: ptr cfloat; phi: ptr cfloat;                               taup1: ptr lapack_complex_float;                               taup2: ptr lapack_complex_float;                               tauq1: ptr lapack_complex_float;                               tauq2: ptr lapack_complex_float;                               work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_cunbdb_work".}   
    proc cuncsd *(matrix_order: cint; jobu1: char; jobu2: char;                           jobv1t: char; jobv2t: char; trans: char; signs: char;                           m: lapack_int; p: lapack_int; q: lapack_int;                        x11: ptr lapack_complex_float; ldx11: lapack_int;                        x12: ptr lapack_complex_float; ldx12: lapack_int;                        x21: ptr lapack_complex_float; ldx21: lapack_int;                        x22: ptr lapack_complex_float; ldx22: lapack_int;                        theta: ptr cfloat; u1: ptr lapack_complex_float;                          ldu1: lapack_int; u2: ptr lapack_complex_float;                          ldu2: lapack_int; v1t: ptr lapack_complex_float;                          ldv1t: lapack_int; v2t: ptr lapack_complex_float;                          ldv2t: lapack_int): lapack_int {.importc: "LAPACKE_cuncsd".}   
    proc cuncsd_work *(matrix_order: cint; jobu1: char; jobu2: char;                                jobv1t: char; jobv2t: char; trans: char;                                signs: char; m: lapack_int; p: lapack_int;                             q: lapack_int; x11: ptr lapack_complex_float;                               ldx11: lapack_int; x12: ptr lapack_complex_float;                               ldx12: lapack_int; x21: ptr lapack_complex_float;                               ldx21: lapack_int; x22: ptr lapack_complex_float;                               ldx22: lapack_int; theta: ptr cfloat;                               u1: ptr lapack_complex_float; ldu1: lapack_int;                             u2: ptr lapack_complex_float; ldu2: lapack_int;                             v1t: ptr lapack_complex_float; ldv1t: lapack_int;                             v2t: ptr lapack_complex_float; ldv2t: lapack_int;                             work: ptr lapack_complex_float; lwork: lapack_int;                             rwork: ptr cfloat; lrwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_cuncsd_work".}   
    proc dbbcsd *(matrix_order: cint; jobu1: char; jobu2: char;                           jobv1t: char; jobv2t: char; trans: char; m: lapack_int;                        p: lapack_int; q: lapack_int; theta: ptr cdouble;                          phi: ptr cdouble; u1: ptr cdouble; ldu1: lapack_int;                        u2: ptr cdouble; ldu2: lapack_int; v1t: ptr cdouble;                          ldv1t: lapack_int; v2t: ptr cdouble; ldv2t: lapack_int;                        b11d: ptr cdouble; b11e: ptr cdouble; b12d: ptr cdouble;                          b12e: ptr cdouble; b21d: ptr cdouble; b21e: ptr cdouble;                          b22d: ptr cdouble; b22e: ptr cdouble): lapack_int {.importc: "LAPACKE_dbbcsd".}   
    proc dbbcsd_work *(matrix_order: cint; jobu1: char; jobu2: char;                                jobv1t: char; jobv2t: char; trans: char;                                m: lapack_int; p: lapack_int; q: lapack_int;                             theta: ptr cdouble; phi: ptr cdouble;                               u1: ptr cdouble; ldu1: lapack_int; u2: ptr cdouble;                               ldu2: lapack_int; v1t: ptr cdouble;                               ldv1t: lapack_int; v2t: ptr cdouble;                               ldv2t: lapack_int; b11d: ptr cdouble;                               b11e: ptr cdouble; b12d: ptr cdouble;                               b12e: ptr cdouble; b21d: ptr cdouble;                               b21e: ptr cdouble; b22d: ptr cdouble;                               b22e: ptr cdouble; work: ptr cdouble;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_dbbcsd_work".}   
    proc dorbdb *(matrix_order: cint; trans: char; signs: char;                           m: lapack_int; p: lapack_int; q: lapack_int;                        x11: ptr cdouble; ldx11: lapack_int; x12: ptr cdouble;                          ldx12: lapack_int; x21: ptr cdouble; ldx21: lapack_int;                        x22: ptr cdouble; ldx22: lapack_int; theta: ptr cdouble;                          phi: ptr cdouble; taup1: ptr cdouble; taup2: ptr cdouble;                          tauq1: ptr cdouble; tauq2: ptr cdouble): lapack_int {.importc: "LAPACKE_dorbdb".}   
    proc dorbdb_work *(matrix_order: cint; trans: char; signs: char;                                m: lapack_int; p: lapack_int; q: lapack_int;                             x11: ptr cdouble; ldx11: lapack_int;                             x12: ptr cdouble; ldx12: lapack_int;                             x21: ptr cdouble; ldx21: lapack_int;                             x22: ptr cdouble; ldx22: lapack_int;                             theta: ptr cdouble; phi: ptr cdouble;                               taup1: ptr cdouble; taup2: ptr cdouble;                               tauq1: ptr cdouble; tauq2: ptr cdouble;                               work: ptr cdouble; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dorbdb_work".}   
    proc dorcsd *(matrix_order: cint; jobu1: char; jobu2: char;                           jobv1t: char; jobv2t: char; trans: char; signs: char;                           m: lapack_int; p: lapack_int; q: lapack_int;                        x11: ptr cdouble; ldx11: lapack_int; x12: ptr cdouble;                          ldx12: lapack_int; x21: ptr cdouble; ldx21: lapack_int;                        x22: ptr cdouble; ldx22: lapack_int; theta: ptr cdouble;                          u1: ptr cdouble; ldu1: lapack_int; u2: ptr cdouble;                          ldu2: lapack_int; v1t: ptr cdouble; ldv1t: lapack_int;                        v2t: ptr cdouble; ldv2t: lapack_int): lapack_int {.importc: "LAPACKE_dorcsd".}   
    proc dorcsd_work *(matrix_order: cint; jobu1: char; jobu2: char;                                jobv1t: char; jobv2t: char; trans: char;                                signs: char; m: lapack_int; p: lapack_int;                             q: lapack_int; x11: ptr cdouble; ldx11: lapack_int;                             x12: ptr cdouble; ldx12: lapack_int;                             x21: ptr cdouble; ldx21: lapack_int;                             x22: ptr cdouble; ldx22: lapack_int;                             theta: ptr cdouble; u1: ptr cdouble;                               ldu1: lapack_int; u2: ptr cdouble; ldu2: lapack_int;                             v1t: ptr cdouble; ldv1t: lapack_int;                             v2t: ptr cdouble; ldv2t: lapack_int;                             work: ptr cdouble; lwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_dorcsd_work".}   
    proc dsyconv *(matrix_order: cint; uplo: char; way: char;                            n: lapack_int; a: ptr cdouble; lda: lapack_int;                         ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsyconv".}   
    proc dsyconv_work *(matrix_order: cint; uplo: char; way: char;                                 n: lapack_int; a: ptr cdouble; lda: lapack_int;                              ipiv: ptr lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dsyconv_work".}   
    proc dsyswapr *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr cdouble; i1: lapack_int; i2: lapack_int): lapack_int {.importc: "LAPACKE_dsyswapr".}   
    proc dsyswapr_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr cdouble; i1: lapack_int; i2: lapack_int): lapack_int {.importc: "LAPACKE_dsyswapr_work".}   
    proc dsytri2 *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr cdouble; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_dsytri2".}   
    proc dsytri2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr cdouble; lda: lapack_int;                              ipiv: ptr lapack_int;                              work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_dsytri2_work".}   
    proc dsytri2x *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr cdouble; lda: lapack_int; ipiv: ptr lapack_int;                          nb: lapack_int): lapack_int {.importc: "LAPACKE_dsytri2x".}   
    proc dsytri2x_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr cdouble; lda: lapack_int;                               ipiv: ptr lapack_int; work: ptr cdouble;                                 nb: lapack_int): lapack_int {.importc: "LAPACKE_dsytri2x_work".}   
    proc dsytrs2 *(matrix_order: cint; uplo: char; n: lapack_int;                         nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                         ipiv: ptr lapack_int; b: ptr cdouble; ldb: lapack_int): lapack_int {.importc: "LAPACKE_dsytrs2".}   
    proc dsytrs2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              nrhs: lapack_int; a: ptr cdouble; lda: lapack_int;                              ipiv: ptr lapack_int; b: ptr cdouble;                                ldb: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dsytrs2_work".}   
    proc sbbcsd *(matrix_order: cint; jobu1: char; jobu2: char;                           jobv1t: char; jobv2t: char; trans: char; m: lapack_int;                        p: lapack_int; q: lapack_int; theta: ptr cfloat;                          phi: ptr cfloat; u1: ptr cfloat; ldu1: lapack_int;                        u2: ptr cfloat; ldu2: lapack_int; v1t: ptr cfloat;                          ldv1t: lapack_int; v2t: ptr cfloat; ldv2t: lapack_int;                        b11d: ptr cfloat; b11e: ptr cfloat; b12d: ptr cfloat;                          b12e: ptr cfloat; b21d: ptr cfloat; b21e: ptr cfloat;                          b22d: ptr cfloat; b22e: ptr cfloat): lapack_int {.importc: "LAPACKE_sbbcsd".}   
    proc sbbcsd_work *(matrix_order: cint; jobu1: char; jobu2: char;                                jobv1t: char; jobv2t: char; trans: char;                                m: lapack_int; p: lapack_int; q: lapack_int;                             theta: ptr cfloat; phi: ptr cfloat; u1: ptr cfloat;                               ldu1: lapack_int; u2: ptr cfloat; ldu2: lapack_int;                             v1t: ptr cfloat; ldv1t: lapack_int; v2t: ptr cfloat;                               ldv2t: lapack_int; b11d: ptr cfloat;                               b11e: ptr cfloat; b12d: ptr cfloat;                               b12e: ptr cfloat; b21d: ptr cfloat;                               b21e: ptr cfloat; b22d: ptr cfloat;                               b22e: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sbbcsd_work".}   
    proc sorbdb *(matrix_order: cint; trans: char; signs: char;                           m: lapack_int; p: lapack_int; q: lapack_int;                        x11: ptr cfloat; ldx11: lapack_int; x12: ptr cfloat;                          ldx12: lapack_int; x21: ptr cfloat; ldx21: lapack_int;                        x22: ptr cfloat; ldx22: lapack_int; theta: ptr cfloat;                          phi: ptr cfloat; taup1: ptr cfloat; taup2: ptr cfloat;                          tauq1: ptr cfloat; tauq2: ptr cfloat): lapack_int {.importc: "LAPACKE_sorbdb".}   
    proc sorbdb_work *(matrix_order: cint; trans: char; signs: char;                                m: lapack_int; p: lapack_int; q: lapack_int;                             x11: ptr cfloat; ldx11: lapack_int; x12: ptr cfloat;                               ldx12: lapack_int; x21: ptr cfloat;                               ldx21: lapack_int; x22: ptr cfloat;                               ldx22: lapack_int; theta: ptr cfloat;                               phi: ptr cfloat; taup1: ptr cfloat;                               taup2: ptr cfloat; tauq1: ptr cfloat;                               tauq2: ptr cfloat; work: ptr cfloat;                               lwork: lapack_int): lapack_int {.importc: "LAPACKE_sorbdb_work".}   
    proc sorcsd *(matrix_order: cint; jobu1: char; jobu2: char;                           jobv1t: char; jobv2t: char; trans: char; signs: char;                           m: lapack_int; p: lapack_int; q: lapack_int;                        x11: ptr cfloat; ldx11: lapack_int; x12: ptr cfloat;                          ldx12: lapack_int; x21: ptr cfloat; ldx21: lapack_int;                        x22: ptr cfloat; ldx22: lapack_int; theta: ptr cfloat;                          u1: ptr cfloat; ldu1: lapack_int; u2: ptr cfloat;                          ldu2: lapack_int; v1t: ptr cfloat; ldv1t: lapack_int;                        v2t: ptr cfloat; ldv2t: lapack_int): lapack_int {.importc: "LAPACKE_sorcsd".}   
    proc sorcsd_work *(matrix_order: cint; jobu1: char; jobu2: char;                                jobv1t: char; jobv2t: char; trans: char;                                signs: char; m: lapack_int; p: lapack_int;                             q: lapack_int; x11: ptr cfloat; ldx11: lapack_int;                             x12: ptr cfloat; ldx12: lapack_int; x21: ptr cfloat;                               ldx21: lapack_int; x22: ptr cfloat;                               ldx22: lapack_int; theta: ptr cfloat;                               u1: ptr cfloat; ldu1: lapack_int; u2: ptr cfloat;                               ldu2: lapack_int; v1t: ptr cfloat;                               ldv1t: lapack_int; v2t: ptr cfloat;                               ldv2t: lapack_int; work: ptr cfloat;                               lwork: lapack_int; iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_sorcsd_work".}   
    proc ssyconv *(matrix_order: cint; uplo: char; way: char;                            n: lapack_int; a: ptr cfloat; lda: lapack_int;                         ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssyconv".}   
    proc ssyconv_work *(matrix_order: cint; uplo: char; way: char;                                 n: lapack_int; a: ptr cfloat; lda: lapack_int;                              ipiv: ptr lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_ssyconv_work".}   
    proc ssyswapr *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr cfloat; i1: lapack_int; i2: lapack_int): lapack_int {.importc: "LAPACKE_ssyswapr".}   
    proc ssyswapr_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr cfloat; i1: lapack_int; i2: lapack_int): lapack_int {.importc: "LAPACKE_ssyswapr_work".}   
    proc ssytri2 *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_ssytri2".}   
    proc ssytri2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr cfloat; lda: lapack_int;                              ipiv: ptr lapack_int;                              work: ptr lapack_complex_float; lwork: lapack_int): lapack_int {.importc: "LAPACKE_ssytri2_work".}   
    proc ssytri2x *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr cfloat; lda: lapack_int; ipiv: ptr lapack_int;                          nb: lapack_int): lapack_int {.importc: "LAPACKE_ssytri2x".}   
    proc ssytri2x_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr cfloat; lda: lapack_int;                               ipiv: ptr lapack_int; work: ptr cfloat;                                 nb: lapack_int): lapack_int {.importc: "LAPACKE_ssytri2x_work".}   
    proc ssytrs2 *(matrix_order: cint; uplo: char; n: lapack_int;                         nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                         ipiv: ptr lapack_int; b: ptr cfloat; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ssytrs2".}   
    proc ssytrs2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              nrhs: lapack_int; a: ptr cfloat; lda: lapack_int;                              ipiv: ptr lapack_int; b: ptr cfloat;                                ldb: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_ssytrs2_work".}   
    proc zbbcsd *(matrix_order: cint; jobu1: char; jobu2: char;                           jobv1t: char; jobv2t: char; trans: char; m: lapack_int;                        p: lapack_int; q: lapack_int; theta: ptr cdouble;                          phi: ptr cdouble; u1: ptr lapack_complex_double;                        ldu1: lapack_int; u2: ptr lapack_complex_double;                        ldu2: lapack_int; v1t: ptr lapack_complex_double;                        ldv1t: lapack_int; v2t: ptr lapack_complex_double;                        ldv2t: lapack_int; b11d: ptr cdouble; b11e: ptr cdouble;                          b12d: ptr cdouble; b12e: ptr cdouble; b21d: ptr cdouble;                          b21e: ptr cdouble; b22d: ptr cdouble; b22e: ptr cdouble): lapack_int {.importc: "LAPACKE_zbbcsd".}   
    proc zbbcsd_work *(matrix_order: cint; jobu1: char; jobu2: char;                                jobv1t: char; jobv2t: char; trans: char;                                m: lapack_int; p: lapack_int; q: lapack_int;                             theta: ptr cdouble; phi: ptr cdouble;                               u1: ptr lapack_complex_double; ldu1: lapack_int;                             u2: ptr lapack_complex_double; ldu2: lapack_int;                             v1t: ptr lapack_complex_double; ldv1t: lapack_int;                             v2t: ptr lapack_complex_double; ldv2t: lapack_int;                             b11d: ptr cdouble; b11e: ptr cdouble;                               b12d: ptr cdouble; b12e: ptr cdouble;                               b21d: ptr cdouble; b21e: ptr cdouble;                               b22d: ptr cdouble; b22e: ptr cdouble;                               rwork: ptr cdouble; lrwork: lapack_int): lapack_int {.importc: "LAPACKE_zbbcsd_work".}   
    proc zheswapr *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr lapack_complex_double; i1: lapack_int;                          i2: lapack_int): lapack_int {.importc: "LAPACKE_zheswapr".}   
    proc zheswapr_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr lapack_complex_double; i1: lapack_int;                               i2: lapack_int): lapack_int {.importc: "LAPACKE_zheswapr_work".}   
    proc zhetri2 *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zhetri2".}   
    proc zhetri2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              ipiv: ptr lapack_int;                              work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zhetri2_work".}   
    proc zhetri2x *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr lapack_complex_double; lda: lapack_int;                          ipiv: ptr lapack_int; nb: lapack_int): lapack_int {.importc: "LAPACKE_zhetri2x".}   
    proc zhetri2x_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr lapack_complex_double; lda: lapack_int;                               ipiv: ptr lapack_int;                               work: ptr lapack_complex_double; nb: lapack_int): lapack_int {.importc: "LAPACKE_zhetri2x_work".}   
    proc zhetrs2 *(matrix_order: cint; uplo: char; n: lapack_int;                         nrhs: lapack_int; a: ptr lapack_complex_double;                         lda: lapack_int; ipiv: ptr lapack_int;                         b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zhetrs2".}   
    proc zhetrs2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              nrhs: lapack_int; a: ptr lapack_complex_double;                              lda: lapack_int; ipiv: ptr lapack_int;                              b: ptr lapack_complex_double; ldb: lapack_int;                              work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zhetrs2_work".}   
    proc zsyconv *(matrix_order: cint; uplo: char; way: char;                            n: lapack_int; a: ptr lapack_complex_double;                         lda: lapack_int; ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zsyconv".}   
    proc zsyconv_work *(matrix_order: cint; uplo: char; way: char;                                 n: lapack_int; a: ptr lapack_complex_double;                              lda: lapack_int; ipiv: ptr lapack_int;                              work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zsyconv_work".}   
    proc zsyswapr *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr lapack_complex_double; i1: lapack_int;                          i2: lapack_int): lapack_int {.importc: "LAPACKE_zsyswapr".}   
    proc zsyswapr_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr lapack_complex_double; i1: lapack_int;                               i2: lapack_int): lapack_int {.importc: "LAPACKE_zsyswapr_work".}   
    proc zsytri2 *(matrix_order: cint; uplo: char; n: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         ipiv: ptr lapack_int): lapack_int {.importc: "LAPACKE_zsytri2".}   
    proc zsytri2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              ipiv: ptr lapack_int;                              work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zsytri2_work".}   
    proc zsytri2x *(matrix_order: cint; uplo: char; n: lapack_int;                          a: ptr lapack_complex_double; lda: lapack_int;                          ipiv: ptr lapack_int; nb: lapack_int): lapack_int {.importc: "LAPACKE_zsytri2x".}   
    proc zsytri2x_work *(matrix_order: cint; uplo: char; n: lapack_int;                               a: ptr lapack_complex_double; lda: lapack_int;                               ipiv: ptr lapack_int;                               work: ptr lapack_complex_double; nb: lapack_int): lapack_int {.importc: "LAPACKE_zsytri2x_work".}   
    proc zsytrs2 *(matrix_order: cint; uplo: char; n: lapack_int;                         nrhs: lapack_int; a: ptr lapack_complex_double;                         lda: lapack_int; ipiv: ptr lapack_int;                         b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_zsytrs2".}   
    proc zsytrs2_work *(matrix_order: cint; uplo: char; n: lapack_int;                              nrhs: lapack_int; a: ptr lapack_complex_double;                              lda: lapack_int; ipiv: ptr lapack_int;                              b: ptr lapack_complex_double; ldb: lapack_int;                              work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zsytrs2_work".}   
    proc zunbdb *(matrix_order: cint; trans: char; signs: char;                           m: lapack_int; p: lapack_int; q: lapack_int;                        x11: ptr lapack_complex_double; ldx11: lapack_int;                        x12: ptr lapack_complex_double; ldx12: lapack_int;                        x21: ptr lapack_complex_double; ldx21: lapack_int;                        x22: ptr lapack_complex_double; ldx22: lapack_int;                        theta: ptr cdouble; phi: ptr cdouble;                          taup1: ptr lapack_complex_double;                        taup2: ptr lapack_complex_double;                        tauq1: ptr lapack_complex_double;                        tauq2: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zunbdb".}   
    proc zunbdb_work *(matrix_order: cint; trans: char; signs: char;                                m: lapack_int; p: lapack_int; q: lapack_int;                             x11: ptr lapack_complex_double; ldx11: lapack_int;                             x12: ptr lapack_complex_double; ldx12: lapack_int;                             x21: ptr lapack_complex_double; ldx21: lapack_int;                             x22: ptr lapack_complex_double; ldx22: lapack_int;                             theta: ptr cdouble; phi: ptr cdouble;                               taup1: ptr lapack_complex_double;                             taup2: ptr lapack_complex_double;                             tauq1: ptr lapack_complex_double;                             tauq2: ptr lapack_complex_double;                             work: ptr lapack_complex_double; lwork: lapack_int): lapack_int {.importc: "LAPACKE_zunbdb_work".}   
    proc zuncsd *(matrix_order: cint; jobu1: char; jobu2: char;                           jobv1t: char; jobv2t: char; trans: char; signs: char;                           m: lapack_int; p: lapack_int; q: lapack_int;                        x11: ptr lapack_complex_double; ldx11: lapack_int;                        x12: ptr lapack_complex_double; ldx12: lapack_int;                        x21: ptr lapack_complex_double; ldx21: lapack_int;                        x22: ptr lapack_complex_double; ldx22: lapack_int;                        theta: ptr cdouble; u1: ptr lapack_complex_double;                        ldu1: lapack_int; u2: ptr lapack_complex_double;                        ldu2: lapack_int; v1t: ptr lapack_complex_double;                        ldv1t: lapack_int; v2t: ptr lapack_complex_double;                        ldv2t: lapack_int): lapack_int {.importc: "LAPACKE_zuncsd".}   
    proc zuncsd_work *(matrix_order: cint; jobu1: char; jobu2: char;                                jobv1t: char; jobv2t: char; trans: char;                                signs: char; m: lapack_int; p: lapack_int;                             q: lapack_int; x11: ptr lapack_complex_double;                             ldx11: lapack_int; x12: ptr lapack_complex_double;                             ldx12: lapack_int; x21: ptr lapack_complex_double;                             ldx21: lapack_int; x22: ptr lapack_complex_double;                             ldx22: lapack_int; theta: ptr cdouble;                               u1: ptr lapack_complex_double; ldu1: lapack_int;                             u2: ptr lapack_complex_double; ldu2: lapack_int;                             v1t: ptr lapack_complex_double; ldv1t: lapack_int;                             v2t: ptr lapack_complex_double; ldv2t: lapack_int;                             work: ptr lapack_complex_double; lwork: lapack_int;                             rwork: ptr cdouble; lrwork: lapack_int;                             iwork: ptr lapack_int): lapack_int {.importc: "LAPACKE_zuncsd_work".}   
    #LAPACK 3.4.0
    proc sgemqrt *(matrix_order: cint; side: char; trans: char;                            m: lapack_int; n: lapack_int; k: lapack_int;                         nb: lapack_int; v: ptr cfloat; ldv: lapack_int;                         t: ptr cfloat; ldt: lapack_int; c: ptr cfloat;                           ldc: lapack_int): lapack_int {.importc: "LAPACKE_sgemqrt".}   
    proc dgemqrt *(matrix_order: cint; side: char; trans: char;                            m: lapack_int; n: lapack_int; k: lapack_int;                         nb: lapack_int; v: ptr cdouble; ldv: lapack_int;                         t: ptr cdouble; ldt: lapack_int; c: ptr cdouble;                           ldc: lapack_int): lapack_int {.importc: "LAPACKE_dgemqrt".}   
    proc cgemqrt *(matrix_order: cint; side: char; trans: char;                            m: lapack_int; n: lapack_int; k: lapack_int;                         nb: lapack_int; v: ptr lapack_complex_float;                           ldv: lapack_int; t: ptr lapack_complex_float;                           ldt: lapack_int; c: ptr lapack_complex_float;                           ldc: lapack_int): lapack_int {.importc: "LAPACKE_cgemqrt".}   
    proc zgemqrt *(matrix_order: cint; side: char; trans: char;                            m: lapack_int; n: lapack_int; k: lapack_int;                         nb: lapack_int; v: ptr lapack_complex_double;                         ldv: lapack_int; t: ptr lapack_complex_double;                         ldt: lapack_int; c: ptr lapack_complex_double;                         ldc: lapack_int): lapack_int {.importc: "LAPACKE_zgemqrt".}   
    proc sgeqrt *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nb: lapack_int; a: ptr cfloat; lda: lapack_int;                        t: ptr cfloat; ldt: lapack_int): lapack_int {.importc: "LAPACKE_sgeqrt".}   
    proc dgeqrt *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nb: lapack_int; a: ptr cdouble; lda: lapack_int;                        t: ptr cdouble; ldt: lapack_int): lapack_int {.importc: "LAPACKE_dgeqrt".}   
    proc cgeqrt *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nb: lapack_int; a: ptr lapack_complex_float;                          lda: lapack_int; t: ptr lapack_complex_float;                          ldt: lapack_int): lapack_int {.importc: "LAPACKE_cgeqrt".}   
    proc zgeqrt *(matrix_order: cint; m: lapack_int; n: lapack_int;                        nb: lapack_int; a: ptr lapack_complex_double;                        lda: lapack_int; t: ptr lapack_complex_double;                        ldt: lapack_int): lapack_int {.importc: "LAPACKE_zgeqrt".}   
    proc sgeqrt2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr cfloat; lda: lapack_int; t: ptr cfloat;                           ldt: lapack_int): lapack_int {.importc: "LAPACKE_sgeqrt2".}   
    proc dgeqrt2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr cdouble; lda: lapack_int; t: ptr cdouble;                           ldt: lapack_int): lapack_int {.importc: "LAPACKE_dgeqrt2".}   
    proc cgeqrt2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         t: ptr lapack_complex_float; ldt: lapack_int): lapack_int {.importc: "LAPACKE_cgeqrt2".}   
    proc zgeqrt2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         t: ptr lapack_complex_double; ldt: lapack_int): lapack_int {.importc: "LAPACKE_zgeqrt2".}   
    proc sgeqrt3 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr cfloat; lda: lapack_int; t: ptr cfloat;                           ldt: lapack_int): lapack_int {.importc: "LAPACKE_sgeqrt3".}   
    proc dgeqrt3 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr cdouble; lda: lapack_int; t: ptr cdouble;                           ldt: lapack_int): lapack_int {.importc: "LAPACKE_dgeqrt3".}   
    proc cgeqrt3 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         t: ptr lapack_complex_float; ldt: lapack_int): lapack_int {.importc: "LAPACKE_cgeqrt3".}   
    proc zgeqrt3 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         t: ptr lapack_complex_double; ldt: lapack_int): lapack_int {.importc: "LAPACKE_zgeqrt3".}   
    proc stpmqrt *(matrix_order: cint; side: char; trans: char;                            m: lapack_int; n: lapack_int; k: lapack_int;                         l: lapack_int; nb: lapack_int; v: ptr cfloat;                           ldv: lapack_int; t: ptr cfloat; ldt: lapack_int;                         a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                           ldb: lapack_int): lapack_int {.importc: "LAPACKE_stpmqrt".}   
    proc dtpmqrt *(matrix_order: cint; side: char; trans: char;                            m: lapack_int; n: lapack_int; k: lapack_int;                         l: lapack_int; nb: lapack_int; v: ptr cdouble;                           ldv: lapack_int; t: ptr cdouble; ldt: lapack_int;                         a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                           ldb: lapack_int): lapack_int {.importc: "LAPACKE_dtpmqrt".}   
    proc ctpmqrt *(matrix_order: cint; side: char; trans: char;                            m: lapack_int; n: lapack_int; k: lapack_int;                         l: lapack_int; nb: lapack_int;                         v: ptr lapack_complex_float; ldv: lapack_int;                         t: ptr lapack_complex_float; ldt: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         b: ptr lapack_complex_float; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ctpmqrt".}   
    proc ztpmqrt *(matrix_order: cint; side: char; trans: char;                            m: lapack_int; n: lapack_int; k: lapack_int;                         l: lapack_int; nb: lapack_int;                         v: ptr lapack_complex_double; ldv: lapack_int;                         t: ptr lapack_complex_double; ldt: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         b: ptr lapack_complex_double; ldb: lapack_int): lapack_int {.importc: "LAPACKE_ztpmqrt".}   
    proc dtpqrt *(matrix_order: cint; m: lapack_int; n: lapack_int;                        l: lapack_int; nb: lapack_int; a: ptr cdouble;                          lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                        t: ptr cdouble; ldt: lapack_int): lapack_int {.importc: "LAPACKE_dtpqrt".}   
    proc ctpqrt *(matrix_order: cint; m: lapack_int; n: lapack_int;                        l: lapack_int; nb: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        t: ptr lapack_complex_float; b: ptr lapack_complex_float;                          ldb: lapack_int; ldt: lapack_int): lapack_int {.importc: "LAPACKE_ctpqrt".}   
    proc ztpqrt *(matrix_order: cint; m: lapack_int; n: lapack_int;                        l: lapack_int; nb: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        t: ptr lapack_complex_double; ldt: lapack_int): lapack_int {.importc: "LAPACKE_ztpqrt".}   
    proc stpqrt2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                           ldb: lapack_int; t: ptr cfloat; ldt: lapack_int): lapack_int {.importc: "LAPACKE_stpqrt2".}   
    proc dtpqrt2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                           ldb: lapack_int; t: ptr cdouble; ldt: lapack_int): lapack_int {.importc: "LAPACKE_dtpqrt2".}   
    proc ctpqrt2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr lapack_complex_float; lda: lapack_int;                         b: ptr lapack_complex_float; ldb: lapack_int;                         t: ptr lapack_complex_float; ldt: lapack_int): lapack_int {.importc: "LAPACKE_ctpqrt2".}   
    proc ztpqrt2 *(matrix_order: cint; m: lapack_int; n: lapack_int;                         a: ptr lapack_complex_double; lda: lapack_int;                         b: ptr lapack_complex_double; ldb: lapack_int;                         t: ptr lapack_complex_double; ldt: lapack_int): lapack_int {.importc: "LAPACKE_ztpqrt2".}   
    proc stprfb *(matrix_order: cint; side: char; trans: char;                           direct: char; storev: char; m: lapack_int; n: lapack_int;                        k: lapack_int; l: lapack_int; v: ptr cfloat;                          ldv: lapack_int; t: ptr cfloat; ldt: lapack_int;                        a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                          ldb: lapack_int; myldwork: lapack_int): lapack_int {.importc: "LAPACKE_stprfb".}   
    proc dtprfb *(matrix_order: cint; side: char; trans: char;                           direct: char; storev: char; m: lapack_int; n: lapack_int;                        k: lapack_int; l: lapack_int; v: ptr cdouble;                          ldv: lapack_int; t: ptr cdouble; ldt: lapack_int;                        a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                          ldb: lapack_int; myldwork: lapack_int): lapack_int {.importc: "LAPACKE_dtprfb".}   
    proc ctprfb *(matrix_order: cint; side: char; trans: char;                           direct: char; storev: char; m: lapack_int; n: lapack_int;                        k: lapack_int; l: lapack_int;                        v: ptr lapack_complex_float; ldv: lapack_int;                        t: ptr lapack_complex_float; ldt: lapack_int;                        a: ptr lapack_complex_float; lda: lapack_int;                        b: ptr lapack_complex_float; ldb: lapack_int;                        myldwork: lapack_int): lapack_int {.importc: "LAPACKE_ctprfb".}   
    proc ztprfb *(matrix_order: cint; side: char; trans: char;                           direct: char; storev: char; m: lapack_int; n: lapack_int;                        k: lapack_int; l: lapack_int;                        v: ptr lapack_complex_double; ldv: lapack_int;                        t: ptr lapack_complex_double; ldt: lapack_int;                        a: ptr lapack_complex_double; lda: lapack_int;                        b: ptr lapack_complex_double; ldb: lapack_int;                        myldwork: lapack_int): lapack_int {.importc: "LAPACKE_ztprfb".}   
    proc sgemqrt_work *(matrix_order: cint; side: char; trans: char;                                 m: lapack_int; n: lapack_int; k: lapack_int;                              nb: lapack_int; v: ptr cfloat; ldv: lapack_int;                              t: ptr cfloat; ldt: lapack_int; c: ptr cfloat;                                ldc: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sgemqrt_work".}   
    proc dgemqrt_work *(matrix_order: cint; side: char; trans: char;                                 m: lapack_int; n: lapack_int; k: lapack_int;                              nb: lapack_int; v: ptr cdouble; ldv: lapack_int;                              t: ptr cdouble; ldt: lapack_int; c: ptr cdouble;                                ldc: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dgemqrt_work".}   
    proc cgemqrt_work *(matrix_order: cint; side: char; trans: char;                                 m: lapack_int; n: lapack_int; k: lapack_int;                              nb: lapack_int; v: ptr lapack_complex_float;                                ldv: lapack_int; t: ptr lapack_complex_float;                                ldt: lapack_int; c: ptr lapack_complex_float;                                ldc: lapack_int; work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgemqrt_work".}   
    proc zgemqrt_work *(matrix_order: cint; side: char; trans: char;                                 m: lapack_int; n: lapack_int; k: lapack_int;                              nb: lapack_int; v: ptr lapack_complex_double;                              ldv: lapack_int; t: ptr lapack_complex_double;                              ldt: lapack_int; c: ptr lapack_complex_double;                              ldc: lapack_int; work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgemqrt_work".}   
    proc sgeqrt_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nb: lapack_int; a: ptr cfloat; lda: lapack_int;                             t: ptr cfloat; ldt: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_sgeqrt_work".}   
    proc dgeqrt_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nb: lapack_int; a: ptr cdouble; lda: lapack_int;                             t: ptr cdouble; ldt: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dgeqrt_work".}   
    proc cgeqrt_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nb: lapack_int; a: ptr lapack_complex_float;                               lda: lapack_int; t: ptr lapack_complex_float;                               ldt: lapack_int; work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_cgeqrt_work".}   
    proc zgeqrt_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             nb: lapack_int; a: ptr lapack_complex_double;                             lda: lapack_int; t: ptr lapack_complex_double;                             ldt: lapack_int; work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_zgeqrt_work".}   
    proc sgeqrt2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr cfloat; lda: lapack_int; t: ptr cfloat;                                ldt: lapack_int): lapack_int {.importc: "LAPACKE_sgeqrt2_work".}   
    proc dgeqrt2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr cdouble; lda: lapack_int; t: ptr cdouble;                                ldt: lapack_int): lapack_int {.importc: "LAPACKE_dgeqrt2_work".}   
    proc cgeqrt2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              t: ptr lapack_complex_float; ldt: lapack_int): lapack_int {.importc: "LAPACKE_cgeqrt2_work".}   
    proc zgeqrt2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              t: ptr lapack_complex_double; ldt: lapack_int): lapack_int {.importc: "LAPACKE_zgeqrt2_work".}   
    proc sgeqrt3_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr cfloat; lda: lapack_int; t: ptr cfloat;                                ldt: lapack_int): lapack_int {.importc: "LAPACKE_sgeqrt3_work".}   
    proc dgeqrt3_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr cdouble; lda: lapack_int; t: ptr cdouble;                                ldt: lapack_int): lapack_int {.importc: "LAPACKE_dgeqrt3_work".}   
    proc cgeqrt3_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              t: ptr lapack_complex_float; ldt: lapack_int): lapack_int {.importc: "LAPACKE_cgeqrt3_work".}   
    proc zgeqrt3_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              t: ptr lapack_complex_double; ldt: lapack_int): lapack_int {.importc: "LAPACKE_zgeqrt3_work".}   
    proc stpmqrt_work *(matrix_order: cint; side: char; trans: char;                                 m: lapack_int; n: lapack_int; k: lapack_int;                              l: lapack_int; nb: lapack_int; v: ptr cfloat;                                ldv: lapack_int; t: ptr cfloat; ldt: lapack_int;                              a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                                ldb: lapack_int; work: ptr cfloat): lapack_int {.importc: "LAPACKE_stpmqrt_work".}   
    proc dtpmqrt_work *(matrix_order: cint; side: char; trans: char;                                 m: lapack_int; n: lapack_int; k: lapack_int;                              l: lapack_int; nb: lapack_int; v: ptr cdouble;                                ldv: lapack_int; t: ptr cdouble; ldt: lapack_int;                              a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                                ldb: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dtpmqrt_work".}   
    proc ctpmqrt_work *(matrix_order: cint; side: char; trans: char;                                 m: lapack_int; n: lapack_int; k: lapack_int;                              l: lapack_int; nb: lapack_int;                              v: ptr lapack_complex_float; ldv: lapack_int;                              t: ptr lapack_complex_float; ldt: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              b: ptr lapack_complex_float; ldb: lapack_int;                              work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctpmqrt_work".}   
    proc ztpmqrt_work *(matrix_order: cint; side: char; trans: char;                                 m: lapack_int; n: lapack_int; k: lapack_int;                              l: lapack_int; nb: lapack_int;                              v: ptr lapack_complex_double; ldv: lapack_int;                              t: ptr lapack_complex_double; ldt: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              b: ptr lapack_complex_double; ldb: lapack_int;                              work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztpmqrt_work".}   
    proc dtpqrt_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             l: lapack_int; nb: lapack_int; a: ptr cdouble;                               lda: lapack_int; b: ptr cdouble; ldb: lapack_int;                             t: ptr cdouble; ldt: lapack_int; work: ptr cdouble): lapack_int {.importc: "LAPACKE_dtpqrt_work".}   
    proc ctpqrt_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             l: lapack_int; nb: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             t: ptr lapack_complex_float;                               b: ptr lapack_complex_float; ldb: lapack_int;                             ldt: lapack_int; work: ptr lapack_complex_float): lapack_int {.importc: "LAPACKE_ctpqrt_work".}   
    proc ztpqrt_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                             l: lapack_int; nb: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             t: ptr lapack_complex_double; ldt: lapack_int;                             work: ptr lapack_complex_double): lapack_int {.importc: "LAPACKE_ztpqrt_work".}   
    proc stpqrt2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr cfloat; lda: lapack_int; b: ptr cfloat;                                ldb: lapack_int; t: ptr cfloat; ldt: lapack_int): lapack_int {.importc: "LAPACKE_stpqrt2_work".}   
    proc dtpqrt2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr cdouble; lda: lapack_int; b: ptr cdouble;                                ldb: lapack_int; t: ptr cdouble; ldt: lapack_int): lapack_int {.importc: "LAPACKE_dtpqrt2_work".}   
    proc ctpqrt2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr lapack_complex_float; lda: lapack_int;                              b: ptr lapack_complex_float; ldb: lapack_int;                              t: ptr lapack_complex_float; ldt: lapack_int): lapack_int {.importc: "LAPACKE_ctpqrt2_work".}   
    proc ztpqrt2_work *(matrix_order: cint; m: lapack_int; n: lapack_int;                              a: ptr lapack_complex_double; lda: lapack_int;                              b: ptr lapack_complex_double; ldb: lapack_int;                              t: ptr lapack_complex_double; ldt: lapack_int): lapack_int {.importc: "LAPACKE_ztpqrt2_work".}   
    proc stprfb_work *(matrix_order: cint; side: char; trans: char;                                direct: char; storev: char; m: lapack_int;                             n: lapack_int; k: lapack_int; l: lapack_int;                             v: ptr cfloat; ldv: lapack_int; t: ptr cfloat;                               ldt: lapack_int; a: ptr cfloat; lda: lapack_int;                             b: ptr cfloat; ldb: lapack_int; mywork: ptr cfloat;                               myldwork: lapack_int): lapack_int {.importc: "LAPACKE_stprfb_work".}   
    proc dtprfb_work *(matrix_order: cint; side: char; trans: char;                                direct: char; storev: char; m: lapack_int;                             n: lapack_int; k: lapack_int; l: lapack_int;                             v: ptr cdouble; ldv: lapack_int; t: ptr cdouble;                               ldt: lapack_int; a: ptr cdouble; lda: lapack_int;                             b: ptr cdouble; ldb: lapack_int;                             mywork: ptr cdouble; myldwork: lapack_int): lapack_int {.importc: "LAPACKE_dtprfb_work".}   
    proc ctprfb_work *(matrix_order: cint; side: char; trans: char;                                direct: char; storev: char; m: lapack_int;                             n: lapack_int; k: lapack_int; l: lapack_int;                             v: ptr lapack_complex_float; ldv: lapack_int;                             t: ptr lapack_complex_float; ldt: lapack_int;                             a: ptr lapack_complex_float; lda: lapack_int;                             b: ptr lapack_complex_float; ldb: lapack_int;                             mywork: ptr cfloat; myldwork: lapack_int): lapack_int {.importc: "LAPACKE_ctprfb_work".}   
    proc ztprfb_work *(matrix_order: cint; side: char; trans: char;                                direct: char; storev: char; m: lapack_int;                             n: lapack_int; k: lapack_int; l: lapack_int;                             v: ptr lapack_complex_double; ldv: lapack_int;                             t: ptr lapack_complex_double; ldt: lapack_int;                             a: ptr lapack_complex_double; lda: lapack_int;                             b: ptr lapack_complex_double; ldb: lapack_int;                             mywork: ptr cdouble; myldwork: lapack_int): lapack_int {.importc: "LAPACKE_ztprfb_work".}   
    #LAPACK 3.X.X
    proc csyr *(matrix_order: cint; uplo: char; n: lapack_int;                      alpha: lapack_complex_float; x: ptr lapack_complex_float;                        incx: lapack_int; a: ptr lapack_complex_float;                        lda: lapack_int): lapack_int {.importc: "LAPACKE_csyr".}   
    proc zsyr *(matrix_order: cint; uplo: char; n: lapack_int;                      alpha: lapack_complex_double; x: ptr lapack_complex_double;                      incx: lapack_int; a: ptr lapack_complex_double;                      lda: lapack_int): lapack_int {.importc: "LAPACKE_zsyr".}   
    proc csyr_work *(matrix_order: cint; uplo: char; n: lapack_int;                           alpha: lapack_complex_float;                             x: ptr lapack_complex_float; incx: lapack_int;                           a: ptr lapack_complex_float; lda: lapack_int): lapack_int {.importc: "LAPACKE_csyr_work".}   
    proc zsyr_work *(matrix_order: cint; uplo: char; n: lapack_int;                           alpha: lapack_complex_double;                           x: ptr lapack_complex_double; incx: lapack_int;                           a: ptr lapack_complex_double; lda: lapack_int): lapack_int   {.importc: "LAPACKE_zsyr_work".}   

    const 
      LAPACK_sgetrf* = LAPACK_GLOBAL(sgetrf, SGETRF)
      LAPACK_dgetrf* = LAPACK_GLOBAL(dgetrf, DGETRF)
      LAPACK_cgetrf* = LAPACK_GLOBAL(cgetrf, CGETRF)
      LAPACK_zgetrf* = LAPACK_GLOBAL(zgetrf, ZGETRF)
      LAPACK_sgbtrf* = LAPACK_GLOBAL(sgbtrf, SGBTRF)
      LAPACK_dgbtrf* = LAPACK_GLOBAL(dgbtrf, DGBTRF)
      LAPACK_cgbtrf* = LAPACK_GLOBAL(cgbtrf, CGBTRF)
      LAPACK_zgbtrf* = LAPACK_GLOBAL(zgbtrf, ZGBTRF)
      LAPACK_sgttrf* = LAPACK_GLOBAL(sgttrf, SGTTRF)
      LAPACK_dgttrf* = LAPACK_GLOBAL(dgttrf, DGTTRF)
      LAPACK_cgttrf* = LAPACK_GLOBAL(cgttrf, CGTTRF)
      LAPACK_zgttrf* = LAPACK_GLOBAL(zgttrf, ZGTTRF)
      LAPACK_spotrf* = LAPACK_GLOBAL(spotrf, SPOTRF)
      LAPACK_dpotrf* = LAPACK_GLOBAL(dpotrf, DPOTRF)
      LAPACK_cpotrf* = LAPACK_GLOBAL(cpotrf, CPOTRF)
      LAPACK_zpotrf* = LAPACK_GLOBAL(zpotrf, ZPOTRF)
      LAPACK_dpstrf* = LAPACK_GLOBAL(dpstrf, DPSTRF)
      LAPACK_spstrf* = LAPACK_GLOBAL(spstrf, SPSTRF)
      LAPACK_zpstrf* = LAPACK_GLOBAL(zpstrf, ZPSTRF)
      LAPACK_cpstrf* = LAPACK_GLOBAL(cpstrf, CPSTRF)
      LAPACK_dpftrf* = LAPACK_GLOBAL(dpftrf, DPFTRF)
      LAPACK_spftrf* = LAPACK_GLOBAL(spftrf, SPFTRF)
      LAPACK_zpftrf* = LAPACK_GLOBAL(zpftrf, ZPFTRF)
      LAPACK_cpftrf* = LAPACK_GLOBAL(cpftrf, CPFTRF)
      LAPACK_spptrf* = LAPACK_GLOBAL(spptrf, SPPTRF)
      LAPACK_dpptrf* = LAPACK_GLOBAL(dpptrf, DPPTRF)
      LAPACK_cpptrf* = LAPACK_GLOBAL(cpptrf, CPPTRF)
      LAPACK_zpptrf* = LAPACK_GLOBAL(zpptrf, ZPPTRF)
      LAPACK_spbtrf* = LAPACK_GLOBAL(spbtrf, SPBTRF)
      LAPACK_dpbtrf* = LAPACK_GLOBAL(dpbtrf, DPBTRF)
      LAPACK_cpbtrf* = LAPACK_GLOBAL(cpbtrf, CPBTRF)
      LAPACK_zpbtrf* = LAPACK_GLOBAL(zpbtrf, ZPBTRF)
      LAPACK_spttrf* = LAPACK_GLOBAL(spttrf, SPTTRF)
      LAPACK_dpttrf* = LAPACK_GLOBAL(dpttrf, DPTTRF)
      LAPACK_cpttrf* = LAPACK_GLOBAL(cpttrf, CPTTRF)
      LAPACK_zpttrf* = LAPACK_GLOBAL(zpttrf, ZPTTRF)
      LAPACK_ssytrf* = LAPACK_GLOBAL(ssytrf, SSYTRF)
      LAPACK_dsytrf* = LAPACK_GLOBAL(dsytrf, DSYTRF)
      LAPACK_csytrf* = LAPACK_GLOBAL(csytrf, CSYTRF)
      LAPACK_zsytrf* = LAPACK_GLOBAL(zsytrf, ZSYTRF)
      LAPACK_chetrf* = LAPACK_GLOBAL(chetrf, CHETRF)
      LAPACK_zhetrf* = LAPACK_GLOBAL(zhetrf, ZHETRF)
      LAPACK_ssptrf* = LAPACK_GLOBAL(ssptrf, SSPTRF)
      LAPACK_dsptrf* = LAPACK_GLOBAL(dsptrf, DSPTRF)
      LAPACK_csptrf* = LAPACK_GLOBAL(csptrf, CSPTRF)
      LAPACK_zsptrf* = LAPACK_GLOBAL(zsptrf, ZSPTRF)
      LAPACK_chptrf* = LAPACK_GLOBAL(chptrf, CHPTRF)
      LAPACK_zhptrf* = LAPACK_GLOBAL(zhptrf, ZHPTRF)
      LAPACK_sgetrs* = LAPACK_GLOBAL(sgetrs, SGETRS)
      LAPACK_dgetrs* = LAPACK_GLOBAL(dgetrs, DGETRS)
      LAPACK_cgetrs* = LAPACK_GLOBAL(cgetrs, CGETRS)
      LAPACK_zgetrs* = LAPACK_GLOBAL(zgetrs, ZGETRS)
      LAPACK_sgbtrs* = LAPACK_GLOBAL(sgbtrs, SGBTRS)
      LAPACK_dgbtrs* = LAPACK_GLOBAL(dgbtrs, DGBTRS)
      LAPACK_cgbtrs* = LAPACK_GLOBAL(cgbtrs, CGBTRS)
      LAPACK_zgbtrs* = LAPACK_GLOBAL(zgbtrs, ZGBTRS)
      LAPACK_sgttrs* = LAPACK_GLOBAL(sgttrs, SGTTRS)
      LAPACK_dgttrs* = LAPACK_GLOBAL(dgttrs, DGTTRS)
      LAPACK_cgttrs* = LAPACK_GLOBAL(cgttrs, CGTTRS)
      LAPACK_zgttrs* = LAPACK_GLOBAL(zgttrs, ZGTTRS)
      LAPACK_spotrs* = LAPACK_GLOBAL(spotrs, SPOTRS)
      LAPACK_dpotrs* = LAPACK_GLOBAL(dpotrs, DPOTRS)
      LAPACK_cpotrs* = LAPACK_GLOBAL(cpotrs, CPOTRS)
      LAPACK_zpotrs* = LAPACK_GLOBAL(zpotrs, ZPOTRS)
      LAPACK_dpftrs* = LAPACK_GLOBAL(dpftrs, DPFTRS)
      LAPACK_spftrs* = LAPACK_GLOBAL(spftrs, SPFTRS)
      LAPACK_zpftrs* = LAPACK_GLOBAL(zpftrs, ZPFTRS)
      LAPACK_cpftrs* = LAPACK_GLOBAL(cpftrs, CPFTRS)
      LAPACK_spptrs* = LAPACK_GLOBAL(spptrs, SPPTRS)
      LAPACK_dpptrs* = LAPACK_GLOBAL(dpptrs, DPPTRS)
      LAPACK_cpptrs* = LAPACK_GLOBAL(cpptrs, CPPTRS)
      LAPACK_zpptrs* = LAPACK_GLOBAL(zpptrs, ZPPTRS)
      LAPACK_spbtrs* = LAPACK_GLOBAL(spbtrs, SPBTRS)
      LAPACK_dpbtrs* = LAPACK_GLOBAL(dpbtrs, DPBTRS)
      LAPACK_cpbtrs* = LAPACK_GLOBAL(cpbtrs, CPBTRS)
      LAPACK_zpbtrs* = LAPACK_GLOBAL(zpbtrs, ZPBTRS)
      LAPACK_spttrs* = LAPACK_GLOBAL(spttrs, SPTTRS)
      LAPACK_dpttrs* = LAPACK_GLOBAL(dpttrs, DPTTRS)
      LAPACK_cpttrs* = LAPACK_GLOBAL(cpttrs, CPTTRS)
      LAPACK_zpttrs* = LAPACK_GLOBAL(zpttrs, ZPTTRS)
      LAPACK_ssytrs* = LAPACK_GLOBAL(ssytrs, SSYTRS)
      LAPACK_dsytrs* = LAPACK_GLOBAL(dsytrs, DSYTRS)
      LAPACK_csytrs* = LAPACK_GLOBAL(csytrs, CSYTRS)
      LAPACK_zsytrs* = LAPACK_GLOBAL(zsytrs, ZSYTRS)
      LAPACK_chetrs* = LAPACK_GLOBAL(chetrs, CHETRS)
      LAPACK_zhetrs* = LAPACK_GLOBAL(zhetrs, ZHETRS)
      LAPACK_ssptrs* = LAPACK_GLOBAL(ssptrs, SSPTRS)
      LAPACK_dsptrs* = LAPACK_GLOBAL(dsptrs, DSPTRS)
      LAPACK_csptrs* = LAPACK_GLOBAL(csptrs, CSPTRS)
      LAPACK_zsptrs* = LAPACK_GLOBAL(zsptrs, ZSPTRS)
      LAPACK_chptrs* = LAPACK_GLOBAL(chptrs, CHPTRS)
      LAPACK_zhptrs* = LAPACK_GLOBAL(zhptrs, ZHPTRS)
      LAPACK_strtrs* = LAPACK_GLOBAL(strtrs, STRTRS)
      LAPACK_dtrtrs* = LAPACK_GLOBAL(dtrtrs, DTRTRS)
      LAPACK_ctrtrs* = LAPACK_GLOBAL(ctrtrs, CTRTRS)
      LAPACK_ztrtrs* = LAPACK_GLOBAL(ztrtrs, ZTRTRS)
      LAPACK_stptrs* = LAPACK_GLOBAL(stptrs, STPTRS)
      LAPACK_dtptrs* = LAPACK_GLOBAL(dtptrs, DTPTRS)
      LAPACK_ctptrs* = LAPACK_GLOBAL(ctptrs, CTPTRS)
      LAPACK_ztptrs* = LAPACK_GLOBAL(ztptrs, ZTPTRS)
      LAPACK_stbtrs* = LAPACK_GLOBAL(stbtrs, STBTRS)
      LAPACK_dtbtrs* = LAPACK_GLOBAL(dtbtrs, DTBTRS)
      LAPACK_ctbtrs* = LAPACK_GLOBAL(ctbtrs, CTBTRS)
      LAPACK_ztbtrs* = LAPACK_GLOBAL(ztbtrs, ZTBTRS)
      LAPACK_sgecon* = LAPACK_GLOBAL(sgecon, SGECON)
      LAPACK_dgecon* = LAPACK_GLOBAL(dgecon, DGECON)
      LAPACK_cgecon* = LAPACK_GLOBAL(cgecon, CGECON)
      LAPACK_zgecon* = LAPACK_GLOBAL(zgecon, ZGECON)
      LAPACK_sgbcon* = LAPACK_GLOBAL(sgbcon, SGBCON)
      LAPACK_dgbcon* = LAPACK_GLOBAL(dgbcon, DGBCON)
      LAPACK_cgbcon* = LAPACK_GLOBAL(cgbcon, CGBCON)
      LAPACK_zgbcon* = LAPACK_GLOBAL(zgbcon, ZGBCON)
      LAPACK_sgtcon* = LAPACK_GLOBAL(sgtcon, SGTCON)
      LAPACK_dgtcon* = LAPACK_GLOBAL(dgtcon, DGTCON)
      LAPACK_cgtcon* = LAPACK_GLOBAL(cgtcon, CGTCON)
      LAPACK_zgtcon* = LAPACK_GLOBAL(zgtcon, ZGTCON)
      LAPACK_spocon* = LAPACK_GLOBAL(spocon, SPOCON)
      LAPACK_dpocon* = LAPACK_GLOBAL(dpocon, DPOCON)
      LAPACK_cpocon* = LAPACK_GLOBAL(cpocon, CPOCON)
      LAPACK_zpocon* = LAPACK_GLOBAL(zpocon, ZPOCON)
      LAPACK_sppcon* = LAPACK_GLOBAL(sppcon, SPPCON)
      LAPACK_dppcon* = LAPACK_GLOBAL(dppcon, DPPCON)
      LAPACK_cppcon* = LAPACK_GLOBAL(cppcon, CPPCON)
      LAPACK_zppcon* = LAPACK_GLOBAL(zppcon, ZPPCON)
      LAPACK_spbcon* = LAPACK_GLOBAL(spbcon, SPBCON)
      LAPACK_dpbcon* = LAPACK_GLOBAL(dpbcon, DPBCON)
      LAPACK_cpbcon* = LAPACK_GLOBAL(cpbcon, CPBCON)
      LAPACK_zpbcon* = LAPACK_GLOBAL(zpbcon, ZPBCON)
      LAPACK_sptcon* = LAPACK_GLOBAL(sptcon, SPTCON)
      LAPACK_dptcon* = LAPACK_GLOBAL(dptcon, DPTCON)
      LAPACK_cptcon* = LAPACK_GLOBAL(cptcon, CPTCON)
      LAPACK_zptcon* = LAPACK_GLOBAL(zptcon, ZPTCON)
      LAPACK_ssycon* = LAPACK_GLOBAL(ssycon, SSYCON)
      LAPACK_dsycon* = LAPACK_GLOBAL(dsycon, DSYCON)
      LAPACK_csycon* = LAPACK_GLOBAL(csycon, CSYCON)
      LAPACK_zsycon* = LAPACK_GLOBAL(zsycon, ZSYCON)
      LAPACK_checon* = LAPACK_GLOBAL(checon, CHECON)
      LAPACK_zhecon* = LAPACK_GLOBAL(zhecon, ZHECON)
      LAPACK_sspcon* = LAPACK_GLOBAL(sspcon, SSPCON)
      LAPACK_dspcon* = LAPACK_GLOBAL(dspcon, DSPCON)
      LAPACK_cspcon* = LAPACK_GLOBAL(cspcon, CSPCON)
      LAPACK_zspcon* = LAPACK_GLOBAL(zspcon, ZSPCON)
      LAPACK_chpcon* = LAPACK_GLOBAL(chpcon, CHPCON)
      LAPACK_zhpcon* = LAPACK_GLOBAL(zhpcon, ZHPCON)
      LAPACK_strcon* = LAPACK_GLOBAL(strcon, STRCON)
      LAPACK_dtrcon* = LAPACK_GLOBAL(dtrcon, DTRCON)
      LAPACK_ctrcon* = LAPACK_GLOBAL(ctrcon, CTRCON)
      LAPACK_ztrcon* = LAPACK_GLOBAL(ztrcon, ZTRCON)
      LAPACK_stpcon* = LAPACK_GLOBAL(stpcon, STPCON)
      LAPACK_dtpcon* = LAPACK_GLOBAL(dtpcon, DTPCON)
      LAPACK_ctpcon* = LAPACK_GLOBAL(ctpcon, CTPCON)
      LAPACK_ztpcon* = LAPACK_GLOBAL(ztpcon, ZTPCON)
      LAPACK_stbcon* = LAPACK_GLOBAL(stbcon, STBCON)
      LAPACK_dtbcon* = LAPACK_GLOBAL(dtbcon, DTBCON)
      LAPACK_ctbcon* = LAPACK_GLOBAL(ctbcon, CTBCON)
      LAPACK_ztbcon* = LAPACK_GLOBAL(ztbcon, ZTBCON)
      LAPACK_sgerfs* = LAPACK_GLOBAL(sgerfs, SGERFS)
      LAPACK_dgerfs* = LAPACK_GLOBAL(dgerfs, DGERFS)
      LAPACK_cgerfs* = LAPACK_GLOBAL(cgerfs, CGERFS)
      LAPACK_zgerfs* = LAPACK_GLOBAL(zgerfs, ZGERFS)
      LAPACK_dgerfsx* = LAPACK_GLOBAL(dgerfsx, DGERFSX)
      LAPACK_sgerfsx* = LAPACK_GLOBAL(sgerfsx, SGERFSX)
      LAPACK_zgerfsx* = LAPACK_GLOBAL(zgerfsx, ZGERFSX)
      LAPACK_cgerfsx* = LAPACK_GLOBAL(cgerfsx, CGERFSX)
      LAPACK_sgbrfs* = LAPACK_GLOBAL(sgbrfs, SGBRFS)
      LAPACK_dgbrfs* = LAPACK_GLOBAL(dgbrfs, DGBRFS)
      LAPACK_cgbrfs* = LAPACK_GLOBAL(cgbrfs, CGBRFS)
      LAPACK_zgbrfs* = LAPACK_GLOBAL(zgbrfs, ZGBRFS)
      LAPACK_dgbrfsx* = LAPACK_GLOBAL(dgbrfsx, DGBRFSX)
      LAPACK_sgbrfsx* = LAPACK_GLOBAL(sgbrfsx, SGBRFSX)
      LAPACK_zgbrfsx* = LAPACK_GLOBAL(zgbrfsx, ZGBRFSX)
      LAPACK_cgbrfsx* = LAPACK_GLOBAL(cgbrfsx, CGBRFSX)
      LAPACK_sgtrfs* = LAPACK_GLOBAL(sgtrfs, SGTRFS)
      LAPACK_dgtrfs* = LAPACK_GLOBAL(dgtrfs, DGTRFS)
      LAPACK_cgtrfs* = LAPACK_GLOBAL(cgtrfs, CGTRFS)
      LAPACK_zgtrfs* = LAPACK_GLOBAL(zgtrfs, ZGTRFS)
      LAPACK_sporfs* = LAPACK_GLOBAL(sporfs, SPORFS)
      LAPACK_dporfs* = LAPACK_GLOBAL(dporfs, DPORFS)
      LAPACK_cporfs* = LAPACK_GLOBAL(cporfs, CPORFS)
      LAPACK_zporfs* = LAPACK_GLOBAL(zporfs, ZPORFS)
      LAPACK_dporfsx* = LAPACK_GLOBAL(dporfsx, DPORFSX)
      LAPACK_sporfsx* = LAPACK_GLOBAL(sporfsx, SPORFSX)
      LAPACK_zporfsx* = LAPACK_GLOBAL(zporfsx, ZPORFSX)
      LAPACK_cporfsx* = LAPACK_GLOBAL(cporfsx, CPORFSX)
      LAPACK_spprfs* = LAPACK_GLOBAL(spprfs, SPPRFS)
      LAPACK_dpprfs* = LAPACK_GLOBAL(dpprfs, DPPRFS)
      LAPACK_cpprfs* = LAPACK_GLOBAL(cpprfs, CPPRFS)
      LAPACK_zpprfs* = LAPACK_GLOBAL(zpprfs, ZPPRFS)
      LAPACK_spbrfs* = LAPACK_GLOBAL(spbrfs, SPBRFS)
      LAPACK_dpbrfs* = LAPACK_GLOBAL(dpbrfs, DPBRFS)
      LAPACK_cpbrfs* = LAPACK_GLOBAL(cpbrfs, CPBRFS)
      LAPACK_zpbrfs* = LAPACK_GLOBAL(zpbrfs, ZPBRFS)
      LAPACK_sptrfs* = LAPACK_GLOBAL(sptrfs, SPTRFS)
      LAPACK_dptrfs* = LAPACK_GLOBAL(dptrfs, DPTRFS)
      LAPACK_cptrfs* = LAPACK_GLOBAL(cptrfs, CPTRFS)
      LAPACK_zptrfs* = LAPACK_GLOBAL(zptrfs, ZPTRFS)
      LAPACK_ssyrfs* = LAPACK_GLOBAL(ssyrfs, SSYRFS)
      LAPACK_dsyrfs* = LAPACK_GLOBAL(dsyrfs, DSYRFS)
      LAPACK_csyrfs* = LAPACK_GLOBAL(csyrfs, CSYRFS)
      LAPACK_zsyrfs* = LAPACK_GLOBAL(zsyrfs, ZSYRFS)
      LAPACK_dsyrfsx* = LAPACK_GLOBAL(dsyrfsx, DSYRFSX)
      LAPACK_ssyrfsx* = LAPACK_GLOBAL(ssyrfsx, SSYRFSX)
      LAPACK_zsyrfsx* = LAPACK_GLOBAL(zsyrfsx, ZSYRFSX)
      LAPACK_csyrfsx* = LAPACK_GLOBAL(csyrfsx, CSYRFSX)
      LAPACK_cherfs* = LAPACK_GLOBAL(cherfs, CHERFS)
      LAPACK_zherfs* = LAPACK_GLOBAL(zherfs, ZHERFS)
      LAPACK_zherfsx* = LAPACK_GLOBAL(zherfsx, ZHERFSX)
      LAPACK_cherfsx* = LAPACK_GLOBAL(cherfsx, CHERFSX)
      LAPACK_ssprfs* = LAPACK_GLOBAL(ssprfs, SSPRFS)
      LAPACK_dsprfs* = LAPACK_GLOBAL(dsprfs, DSPRFS)
      LAPACK_csprfs* = LAPACK_GLOBAL(csprfs, CSPRFS)
      LAPACK_zsprfs* = LAPACK_GLOBAL(zsprfs, ZSPRFS)
      LAPACK_chprfs* = LAPACK_GLOBAL(chprfs, CHPRFS)
      LAPACK_zhprfs* = LAPACK_GLOBAL(zhprfs, ZHPRFS)
      LAPACK_strrfs* = LAPACK_GLOBAL(strrfs, STRRFS)
      LAPACK_dtrrfs* = LAPACK_GLOBAL(dtrrfs, DTRRFS)
      LAPACK_ctrrfs* = LAPACK_GLOBAL(ctrrfs, CTRRFS)
      LAPACK_ztrrfs* = LAPACK_GLOBAL(ztrrfs, ZTRRFS)
      LAPACK_stprfs* = LAPACK_GLOBAL(stprfs, STPRFS)
      LAPACK_dtprfs* = LAPACK_GLOBAL(dtprfs, DTPRFS)
      LAPACK_ctprfs* = LAPACK_GLOBAL(ctprfs, CTPRFS)
      LAPACK_ztprfs* = LAPACK_GLOBAL(ztprfs, ZTPRFS)
      LAPACK_stbrfs* = LAPACK_GLOBAL(stbrfs, STBRFS)
      LAPACK_dtbrfs* = LAPACK_GLOBAL(dtbrfs, DTBRFS)
      LAPACK_ctbrfs* = LAPACK_GLOBAL(ctbrfs, CTBRFS)
      LAPACK_ztbrfs* = LAPACK_GLOBAL(ztbrfs, ZTBRFS)
      LAPACK_sgetri* = LAPACK_GLOBAL(sgetri, SGETRI)
      LAPACK_dgetri* = LAPACK_GLOBAL(dgetri, DGETRI)
      LAPACK_cgetri* = LAPACK_GLOBAL(cgetri, CGETRI)
      LAPACK_zgetri* = LAPACK_GLOBAL(zgetri, ZGETRI)
      LAPACK_spotri* = LAPACK_GLOBAL(spotri, SPOTRI)
      LAPACK_dpotri* = LAPACK_GLOBAL(dpotri, DPOTRI)
      LAPACK_cpotri* = LAPACK_GLOBAL(cpotri, CPOTRI)
      LAPACK_zpotri* = LAPACK_GLOBAL(zpotri, ZPOTRI)
      LAPACK_dpftri* = LAPACK_GLOBAL(dpftri, DPFTRI)
      LAPACK_spftri* = LAPACK_GLOBAL(spftri, SPFTRI)
      LAPACK_zpftri* = LAPACK_GLOBAL(zpftri, ZPFTRI)
      LAPACK_cpftri* = LAPACK_GLOBAL(cpftri, CPFTRI)
      LAPACK_spptri* = LAPACK_GLOBAL(spptri, SPPTRI)
      LAPACK_dpptri* = LAPACK_GLOBAL(dpptri, DPPTRI)
      LAPACK_cpptri* = LAPACK_GLOBAL(cpptri, CPPTRI)
      LAPACK_zpptri* = LAPACK_GLOBAL(zpptri, ZPPTRI)
      LAPACK_ssytri* = LAPACK_GLOBAL(ssytri, SSYTRI)
      LAPACK_dsytri* = LAPACK_GLOBAL(dsytri, DSYTRI)
      LAPACK_csytri* = LAPACK_GLOBAL(csytri, CSYTRI)
      LAPACK_zsytri* = LAPACK_GLOBAL(zsytri, ZSYTRI)
      LAPACK_chetri* = LAPACK_GLOBAL(chetri, CHETRI)
      LAPACK_zhetri* = LAPACK_GLOBAL(zhetri, ZHETRI)
      LAPACK_ssptri* = LAPACK_GLOBAL(ssptri, SSPTRI)
      LAPACK_dsptri* = LAPACK_GLOBAL(dsptri, DSPTRI)
      LAPACK_csptri* = LAPACK_GLOBAL(csptri, CSPTRI)
      LAPACK_zsptri* = LAPACK_GLOBAL(zsptri, ZSPTRI)
      LAPACK_chptri* = LAPACK_GLOBAL(chptri, CHPTRI)
      LAPACK_zhptri* = LAPACK_GLOBAL(zhptri, ZHPTRI)
      LAPACK_strtri* = LAPACK_GLOBAL(strtri, STRTRI)
      LAPACK_dtrtri* = LAPACK_GLOBAL(dtrtri, DTRTRI)
      LAPACK_ctrtri* = LAPACK_GLOBAL(ctrtri, CTRTRI)
      LAPACK_ztrtri* = LAPACK_GLOBAL(ztrtri, ZTRTRI)
      LAPACK_dtftri* = LAPACK_GLOBAL(dtftri, DTFTRI)
      LAPACK_stftri* = LAPACK_GLOBAL(stftri, STFTRI)
      LAPACK_ztftri* = LAPACK_GLOBAL(ztftri, ZTFTRI)
      LAPACK_ctftri* = LAPACK_GLOBAL(ctftri, CTFTRI)
      LAPACK_stptri* = LAPACK_GLOBAL(stptri, STPTRI)
      LAPACK_dtptri* = LAPACK_GLOBAL(dtptri, DTPTRI)
      LAPACK_ctptri* = LAPACK_GLOBAL(ctptri, CTPTRI)
      LAPACK_ztptri* = LAPACK_GLOBAL(ztptri, ZTPTRI)
      LAPACK_sgeequ* = LAPACK_GLOBAL(sgeequ, SGEEQU)
      LAPACK_dgeequ* = LAPACK_GLOBAL(dgeequ, DGEEQU)
      LAPACK_cgeequ* = LAPACK_GLOBAL(cgeequ, CGEEQU)
      LAPACK_zgeequ* = LAPACK_GLOBAL(zgeequ, ZGEEQU)
      LAPACK_dgeequb* = LAPACK_GLOBAL(dgeequb, DGEEQUB)
      LAPACK_sgeequb* = LAPACK_GLOBAL(sgeequb, SGEEQUB)
      LAPACK_zgeequb* = LAPACK_GLOBAL(zgeequb, ZGEEQUB)
      LAPACK_cgeequb* = LAPACK_GLOBAL(cgeequb, CGEEQUB)
      LAPACK_sgbequ* = LAPACK_GLOBAL(sgbequ, SGBEQU)
      LAPACK_dgbequ* = LAPACK_GLOBAL(dgbequ, DGBEQU)
      LAPACK_cgbequ* = LAPACK_GLOBAL(cgbequ, CGBEQU)
      LAPACK_zgbequ* = LAPACK_GLOBAL(zgbequ, ZGBEQU)
      LAPACK_dgbequb* = LAPACK_GLOBAL(dgbequb, DGBEQUB)
      LAPACK_sgbequb* = LAPACK_GLOBAL(sgbequb, SGBEQUB)
      LAPACK_zgbequb* = LAPACK_GLOBAL(zgbequb, ZGBEQUB)
      LAPACK_cgbequb* = LAPACK_GLOBAL(cgbequb, CGBEQUB)
      LAPACK_spoequ* = LAPACK_GLOBAL(spoequ, SPOEQU)
      LAPACK_dpoequ* = LAPACK_GLOBAL(dpoequ, DPOEQU)
      LAPACK_cpoequ* = LAPACK_GLOBAL(cpoequ, CPOEQU)
      LAPACK_zpoequ* = LAPACK_GLOBAL(zpoequ, ZPOEQU)
      LAPACK_dpoequb* = LAPACK_GLOBAL(dpoequb, DPOEQUB)
      LAPACK_spoequb* = LAPACK_GLOBAL(spoequb, SPOEQUB)
      LAPACK_zpoequb* = LAPACK_GLOBAL(zpoequb, ZPOEQUB)
      LAPACK_cpoequb* = LAPACK_GLOBAL(cpoequb, CPOEQUB)
      LAPACK_sppequ* = LAPACK_GLOBAL(sppequ, SPPEQU)
      LAPACK_dppequ* = LAPACK_GLOBAL(dppequ, DPPEQU)
      LAPACK_cppequ* = LAPACK_GLOBAL(cppequ, CPPEQU)
      LAPACK_zppequ* = LAPACK_GLOBAL(zppequ, ZPPEQU)
      LAPACK_spbequ* = LAPACK_GLOBAL(spbequ, SPBEQU)
      LAPACK_dpbequ* = LAPACK_GLOBAL(dpbequ, DPBEQU)
      LAPACK_cpbequ* = LAPACK_GLOBAL(cpbequ, CPBEQU)
      LAPACK_zpbequ* = LAPACK_GLOBAL(zpbequ, ZPBEQU)
      LAPACK_dsyequb* = LAPACK_GLOBAL(dsyequb, DSYEQUB)
      LAPACK_ssyequb* = LAPACK_GLOBAL(ssyequb, SSYEQUB)
      LAPACK_zsyequb* = LAPACK_GLOBAL(zsyequb, ZSYEQUB)
      LAPACK_csyequb* = LAPACK_GLOBAL(csyequb, CSYEQUB)
      LAPACK_zheequb* = LAPACK_GLOBAL(zheequb, ZHEEQUB)
      LAPACK_cheequb* = LAPACK_GLOBAL(cheequb, CHEEQUB)
      LAPACK_sgesv* = LAPACK_GLOBAL(sgesv, SGESV)
      LAPACK_dgesv* = LAPACK_GLOBAL(dgesv, DGESV)
      LAPACK_cgesv* = LAPACK_GLOBAL(cgesv, CGESV)
      LAPACK_zgesv* = LAPACK_GLOBAL(zgesv, ZGESV)
      LAPACK_dsgesv* = LAPACK_GLOBAL(dsgesv, DSGESV)
      LAPACK_zcgesv* = LAPACK_GLOBAL(zcgesv, ZCGESV)
      LAPACK_sgesvx* = LAPACK_GLOBAL(sgesvx, SGESVX)
      LAPACK_dgesvx* = LAPACK_GLOBAL(dgesvx, DGESVX)
      LAPACK_cgesvx* = LAPACK_GLOBAL(cgesvx, CGESVX)
      LAPACK_zgesvx* = LAPACK_GLOBAL(zgesvx, ZGESVX)
      LAPACK_dgesvxx* = LAPACK_GLOBAL(dgesvxx, DGESVXX)
      LAPACK_sgesvxx* = LAPACK_GLOBAL(sgesvxx, SGESVXX)
      LAPACK_zgesvxx* = LAPACK_GLOBAL(zgesvxx, ZGESVXX)
      LAPACK_cgesvxx* = LAPACK_GLOBAL(cgesvxx, CGESVXX)
      LAPACK_sgbsv* = LAPACK_GLOBAL(sgbsv, SGBSV)
      LAPACK_dgbsv* = LAPACK_GLOBAL(dgbsv, DGBSV)
      LAPACK_cgbsv* = LAPACK_GLOBAL(cgbsv, CGBSV)
      LAPACK_zgbsv* = LAPACK_GLOBAL(zgbsv, ZGBSV)
      LAPACK_sgbsvx* = LAPACK_GLOBAL(sgbsvx, SGBSVX)
      LAPACK_dgbsvx* = LAPACK_GLOBAL(dgbsvx, DGBSVX)
      LAPACK_cgbsvx* = LAPACK_GLOBAL(cgbsvx, CGBSVX)
      LAPACK_zgbsvx* = LAPACK_GLOBAL(zgbsvx, ZGBSVX)
      LAPACK_dgbsvxx* = LAPACK_GLOBAL(dgbsvxx, DGBSVXX)
      LAPACK_sgbsvxx* = LAPACK_GLOBAL(sgbsvxx, SGBSVXX)
      LAPACK_zgbsvxx* = LAPACK_GLOBAL(zgbsvxx, ZGBSVXX)
      LAPACK_cgbsvxx* = LAPACK_GLOBAL(cgbsvxx, CGBSVXX)
      LAPACK_sgtsv* = LAPACK_GLOBAL(sgtsv, SGTSV)
      LAPACK_dgtsv* = LAPACK_GLOBAL(dgtsv, DGTSV)
      LAPACK_cgtsv* = LAPACK_GLOBAL(cgtsv, CGTSV)
      LAPACK_zgtsv* = LAPACK_GLOBAL(zgtsv, ZGTSV)
      LAPACK_sgtsvx* = LAPACK_GLOBAL(sgtsvx, SGTSVX)
      LAPACK_dgtsvx* = LAPACK_GLOBAL(dgtsvx, DGTSVX)
      LAPACK_cgtsvx* = LAPACK_GLOBAL(cgtsvx, CGTSVX)
      LAPACK_zgtsvx* = LAPACK_GLOBAL(zgtsvx, ZGTSVX)
      LAPACK_sposv* = LAPACK_GLOBAL(sposv, SPOSV)
      LAPACK_dposv* = LAPACK_GLOBAL(dposv, DPOSV)
      LAPACK_cposv* = LAPACK_GLOBAL(cposv, CPOSV)
      LAPACK_zposv* = LAPACK_GLOBAL(zposv, ZPOSV)
      LAPACK_dsposv* = LAPACK_GLOBAL(dsposv, DSPOSV)
      LAPACK_zcposv* = LAPACK_GLOBAL(zcposv, ZCPOSV)
      LAPACK_sposvx* = LAPACK_GLOBAL(sposvx, SPOSVX)
      LAPACK_dposvx* = LAPACK_GLOBAL(dposvx, DPOSVX)
      LAPACK_cposvx* = LAPACK_GLOBAL(cposvx, CPOSVX)
      LAPACK_zposvx* = LAPACK_GLOBAL(zposvx, ZPOSVX)
      LAPACK_dposvxx* = LAPACK_GLOBAL(dposvxx, DPOSVXX)
      LAPACK_sposvxx* = LAPACK_GLOBAL(sposvxx, SPOSVXX)
      LAPACK_zposvxx* = LAPACK_GLOBAL(zposvxx, ZPOSVXX)
      LAPACK_cposvxx* = LAPACK_GLOBAL(cposvxx, CPOSVXX)
      LAPACK_sppsv* = LAPACK_GLOBAL(sppsv, SPPSV)
      LAPACK_dppsv* = LAPACK_GLOBAL(dppsv, DPPSV)
      LAPACK_cppsv* = LAPACK_GLOBAL(cppsv, CPPSV)
      LAPACK_zppsv* = LAPACK_GLOBAL(zppsv, ZPPSV)
      LAPACK_sppsvx* = LAPACK_GLOBAL(sppsvx, SPPSVX)
      LAPACK_dppsvx* = LAPACK_GLOBAL(dppsvx, DPPSVX)
      LAPACK_cppsvx* = LAPACK_GLOBAL(cppsvx, CPPSVX)
      LAPACK_zppsvx* = LAPACK_GLOBAL(zppsvx, ZPPSVX)
      LAPACK_spbsv* = LAPACK_GLOBAL(spbsv, SPBSV)
      LAPACK_dpbsv* = LAPACK_GLOBAL(dpbsv, DPBSV)
      LAPACK_cpbsv* = LAPACK_GLOBAL(cpbsv, CPBSV)
      LAPACK_zpbsv* = LAPACK_GLOBAL(zpbsv, ZPBSV)
      LAPACK_spbsvx* = LAPACK_GLOBAL(spbsvx, SPBSVX)
      LAPACK_dpbsvx* = LAPACK_GLOBAL(dpbsvx, DPBSVX)
      LAPACK_cpbsvx* = LAPACK_GLOBAL(cpbsvx, CPBSVX)
      LAPACK_zpbsvx* = LAPACK_GLOBAL(zpbsvx, ZPBSVX)
      LAPACK_sptsv* = LAPACK_GLOBAL(sptsv, SPTSV)
      LAPACK_dptsv* = LAPACK_GLOBAL(dptsv, DPTSV)
      LAPACK_cptsv* = LAPACK_GLOBAL(cptsv, CPTSV)
      LAPACK_zptsv* = LAPACK_GLOBAL(zptsv, ZPTSV)
      LAPACK_sptsvx* = LAPACK_GLOBAL(sptsvx, SPTSVX)
      LAPACK_dptsvx* = LAPACK_GLOBAL(dptsvx, DPTSVX)
      LAPACK_cptsvx* = LAPACK_GLOBAL(cptsvx, CPTSVX)
      LAPACK_zptsvx* = LAPACK_GLOBAL(zptsvx, ZPTSVX)
      LAPACK_ssysv* = LAPACK_GLOBAL(ssysv, SSYSV)
      LAPACK_dsysv* = LAPACK_GLOBAL(dsysv, DSYSV)
      LAPACK_csysv* = LAPACK_GLOBAL(csysv, CSYSV)
      LAPACK_zsysv* = LAPACK_GLOBAL(zsysv, ZSYSV)
      LAPACK_ssysvx* = LAPACK_GLOBAL(ssysvx, SSYSVX)
      LAPACK_dsysvx* = LAPACK_GLOBAL(dsysvx, DSYSVX)
      LAPACK_csysvx* = LAPACK_GLOBAL(csysvx, CSYSVX)
      LAPACK_zsysvx* = LAPACK_GLOBAL(zsysvx, ZSYSVX)
      LAPACK_dsysvxx* = LAPACK_GLOBAL(dsysvxx, DSYSVXX)
      LAPACK_ssysvxx* = LAPACK_GLOBAL(ssysvxx, SSYSVXX)
      LAPACK_zsysvxx* = LAPACK_GLOBAL(zsysvxx, ZSYSVXX)
      LAPACK_csysvxx* = LAPACK_GLOBAL(csysvxx, CSYSVXX)
      LAPACK_chesv* = LAPACK_GLOBAL(chesv, CHESV)
      LAPACK_zhesv* = LAPACK_GLOBAL(zhesv, ZHESV)
      LAPACK_chesvx* = LAPACK_GLOBAL(chesvx, CHESVX)
      LAPACK_zhesvx* = LAPACK_GLOBAL(zhesvx, ZHESVX)
      LAPACK_zhesvxx* = LAPACK_GLOBAL(zhesvxx, ZHESVXX)
      LAPACK_chesvxx* = LAPACK_GLOBAL(chesvxx, CHESVXX)
      LAPACK_sspsv* = LAPACK_GLOBAL(sspsv, SSPSV)
      LAPACK_dspsv* = LAPACK_GLOBAL(dspsv, DSPSV)
      LAPACK_cspsv* = LAPACK_GLOBAL(cspsv, CSPSV)
      LAPACK_zspsv* = LAPACK_GLOBAL(zspsv, ZSPSV)
      LAPACK_sspsvx* = LAPACK_GLOBAL(sspsvx, SSPSVX)
      LAPACK_dspsvx* = LAPACK_GLOBAL(dspsvx, DSPSVX)
      LAPACK_cspsvx* = LAPACK_GLOBAL(cspsvx, CSPSVX)
      LAPACK_zspsvx* = LAPACK_GLOBAL(zspsvx, ZSPSVX)
      LAPACK_chpsv* = LAPACK_GLOBAL(chpsv, CHPSV)
      LAPACK_zhpsv* = LAPACK_GLOBAL(zhpsv, ZHPSV)
      LAPACK_chpsvx* = LAPACK_GLOBAL(chpsvx, CHPSVX)
      LAPACK_zhpsvx* = LAPACK_GLOBAL(zhpsvx, ZHPSVX)
      LAPACK_sgeqrf* = LAPACK_GLOBAL(sgeqrf, SGEQRF)
      LAPACK_dgeqrf* = LAPACK_GLOBAL(dgeqrf, DGEQRF)
      LAPACK_cgeqrf* = LAPACK_GLOBAL(cgeqrf, CGEQRF)
      LAPACK_zgeqrf* = LAPACK_GLOBAL(zgeqrf, ZGEQRF)
      LAPACK_sgeqpf* = LAPACK_GLOBAL(sgeqpf, SGEQPF)
      LAPACK_dgeqpf* = LAPACK_GLOBAL(dgeqpf, DGEQPF)
      LAPACK_cgeqpf* = LAPACK_GLOBAL(cgeqpf, CGEQPF)
      LAPACK_zgeqpf* = LAPACK_GLOBAL(zgeqpf, ZGEQPF)
      LAPACK_sgeqp3* = LAPACK_GLOBAL(sgeqp3, SGEQP3)
      LAPACK_dgeqp3* = LAPACK_GLOBAL(dgeqp3, DGEQP3)
      LAPACK_cgeqp3* = LAPACK_GLOBAL(cgeqp3, CGEQP3)
      LAPACK_zgeqp3* = LAPACK_GLOBAL(zgeqp3, ZGEQP3)
      LAPACK_sorgqr* = LAPACK_GLOBAL(sorgqr, SORGQR)
      LAPACK_dorgqr* = LAPACK_GLOBAL(dorgqr, DORGQR)
      LAPACK_sormqr* = LAPACK_GLOBAL(sormqr, SORMQR)
      LAPACK_dormqr* = LAPACK_GLOBAL(dormqr, DORMQR)
      LAPACK_cungqr* = LAPACK_GLOBAL(cungqr, CUNGQR)
      LAPACK_zungqr* = LAPACK_GLOBAL(zungqr, ZUNGQR)
      LAPACK_cunmqr* = LAPACK_GLOBAL(cunmqr, CUNMQR)
      LAPACK_zunmqr* = LAPACK_GLOBAL(zunmqr, ZUNMQR)
      LAPACK_sgelqf* = LAPACK_GLOBAL(sgelqf, SGELQF)
      LAPACK_dgelqf* = LAPACK_GLOBAL(dgelqf, DGELQF)
      LAPACK_cgelqf* = LAPACK_GLOBAL(cgelqf, CGELQF)
      LAPACK_zgelqf* = LAPACK_GLOBAL(zgelqf, ZGELQF)
      LAPACK_sorglq* = LAPACK_GLOBAL(sorglq, SORGLQ)
      LAPACK_dorglq* = LAPACK_GLOBAL(dorglq, DORGLQ)
      LAPACK_sormlq* = LAPACK_GLOBAL(sormlq, SORMLQ)
      LAPACK_dormlq* = LAPACK_GLOBAL(dormlq, DORMLQ)
      LAPACK_cunglq* = LAPACK_GLOBAL(cunglq, CUNGLQ)
      LAPACK_zunglq* = LAPACK_GLOBAL(zunglq, ZUNGLQ)
      LAPACK_cunmlq* = LAPACK_GLOBAL(cunmlq, CUNMLQ)
      LAPACK_zunmlq* = LAPACK_GLOBAL(zunmlq, ZUNMLQ)
      LAPACK_sgeqlf* = LAPACK_GLOBAL(sgeqlf, SGEQLF)
      LAPACK_dgeqlf* = LAPACK_GLOBAL(dgeqlf, DGEQLF)
      LAPACK_cgeqlf* = LAPACK_GLOBAL(cgeqlf, CGEQLF)
      LAPACK_zgeqlf* = LAPACK_GLOBAL(zgeqlf, ZGEQLF)
      LAPACK_sorgql* = LAPACK_GLOBAL(sorgql, SORGQL)
      LAPACK_dorgql* = LAPACK_GLOBAL(dorgql, DORGQL)
      LAPACK_cungql* = LAPACK_GLOBAL(cungql, CUNGQL)
      LAPACK_zungql* = LAPACK_GLOBAL(zungql, ZUNGQL)
      LAPACK_sormql* = LAPACK_GLOBAL(sormql, SORMQL)
      LAPACK_dormql* = LAPACK_GLOBAL(dormql, DORMQL)
      LAPACK_cunmql* = LAPACK_GLOBAL(cunmql, CUNMQL)
      LAPACK_zunmql* = LAPACK_GLOBAL(zunmql, ZUNMQL)
      LAPACK_sgerqf* = LAPACK_GLOBAL(sgerqf, SGERQF)
      LAPACK_dgerqf* = LAPACK_GLOBAL(dgerqf, DGERQF)
      LAPACK_cgerqf* = LAPACK_GLOBAL(cgerqf, CGERQF)
      LAPACK_zgerqf* = LAPACK_GLOBAL(zgerqf, ZGERQF)
      LAPACK_sorgrq* = LAPACK_GLOBAL(sorgrq, SORGRQ)
      LAPACK_dorgrq* = LAPACK_GLOBAL(dorgrq, DORGRQ)
      LAPACK_cungrq* = LAPACK_GLOBAL(cungrq, CUNGRQ)
      LAPACK_zungrq* = LAPACK_GLOBAL(zungrq, ZUNGRQ)
      LAPACK_sormrq* = LAPACK_GLOBAL(sormrq, SORMRQ)
      LAPACK_dormrq* = LAPACK_GLOBAL(dormrq, DORMRQ)
      LAPACK_cunmrq* = LAPACK_GLOBAL(cunmrq, CUNMRQ)
      LAPACK_zunmrq* = LAPACK_GLOBAL(zunmrq, ZUNMRQ)
      LAPACK_stzrzf* = LAPACK_GLOBAL(stzrzf, STZRZF)
      LAPACK_dtzrzf* = LAPACK_GLOBAL(dtzrzf, DTZRZF)
      LAPACK_ctzrzf* = LAPACK_GLOBAL(ctzrzf, CTZRZF)
      LAPACK_ztzrzf* = LAPACK_GLOBAL(ztzrzf, ZTZRZF)
      LAPACK_sormrz* = LAPACK_GLOBAL(sormrz, SORMRZ)
      LAPACK_dormrz* = LAPACK_GLOBAL(dormrz, DORMRZ)
      LAPACK_cunmrz* = LAPACK_GLOBAL(cunmrz, CUNMRZ)
      LAPACK_zunmrz* = LAPACK_GLOBAL(zunmrz, ZUNMRZ)
      LAPACK_sggqrf* = LAPACK_GLOBAL(sggqrf, SGGQRF)
      LAPACK_dggqrf* = LAPACK_GLOBAL(dggqrf, DGGQRF)
      LAPACK_cggqrf* = LAPACK_GLOBAL(cggqrf, CGGQRF)
      LAPACK_zggqrf* = LAPACK_GLOBAL(zggqrf, ZGGQRF)
      LAPACK_sggrqf* = LAPACK_GLOBAL(sggrqf, SGGRQF)
      LAPACK_dggrqf* = LAPACK_GLOBAL(dggrqf, DGGRQF)
      LAPACK_cggrqf* = LAPACK_GLOBAL(cggrqf, CGGRQF)
      LAPACK_zggrqf* = LAPACK_GLOBAL(zggrqf, ZGGRQF)
      LAPACK_sgebrd* = LAPACK_GLOBAL(sgebrd, SGEBRD)
      LAPACK_dgebrd* = LAPACK_GLOBAL(dgebrd, DGEBRD)
      LAPACK_cgebrd* = LAPACK_GLOBAL(cgebrd, CGEBRD)
      LAPACK_zgebrd* = LAPACK_GLOBAL(zgebrd, ZGEBRD)
      LAPACK_sgbbrd* = LAPACK_GLOBAL(sgbbrd, SGBBRD)
      LAPACK_dgbbrd* = LAPACK_GLOBAL(dgbbrd, DGBBRD)
      LAPACK_cgbbrd* = LAPACK_GLOBAL(cgbbrd, CGBBRD)
      LAPACK_zgbbrd* = LAPACK_GLOBAL(zgbbrd, ZGBBRD)
      LAPACK_sorgbr* = LAPACK_GLOBAL(sorgbr, SORGBR)
      LAPACK_dorgbr* = LAPACK_GLOBAL(dorgbr, DORGBR)
      LAPACK_sormbr* = LAPACK_GLOBAL(sormbr, SORMBR)
      LAPACK_dormbr* = LAPACK_GLOBAL(dormbr, DORMBR)
      LAPACK_cungbr* = LAPACK_GLOBAL(cungbr, CUNGBR)
      LAPACK_zungbr* = LAPACK_GLOBAL(zungbr, ZUNGBR)
      LAPACK_cunmbr* = LAPACK_GLOBAL(cunmbr, CUNMBR)
      LAPACK_zunmbr* = LAPACK_GLOBAL(zunmbr, ZUNMBR)
      LAPACK_sbdsqr* = LAPACK_GLOBAL(sbdsqr, SBDSQR)
      LAPACK_dbdsqr* = LAPACK_GLOBAL(dbdsqr, DBDSQR)
      LAPACK_cbdsqr* = LAPACK_GLOBAL(cbdsqr, CBDSQR)
      LAPACK_zbdsqr* = LAPACK_GLOBAL(zbdsqr, ZBDSQR)
      LAPACK_sbdsdc* = LAPACK_GLOBAL(sbdsdc, SBDSDC)
      LAPACK_dbdsdc* = LAPACK_GLOBAL(dbdsdc, DBDSDC)
      LAPACK_ssytrd* = LAPACK_GLOBAL(ssytrd, SSYTRD)
      LAPACK_dsytrd* = LAPACK_GLOBAL(dsytrd, DSYTRD)
      LAPACK_sorgtr* = LAPACK_GLOBAL(sorgtr, SORGTR)
      LAPACK_dorgtr* = LAPACK_GLOBAL(dorgtr, DORGTR)
      LAPACK_sormtr* = LAPACK_GLOBAL(sormtr, SORMTR)
      LAPACK_dormtr* = LAPACK_GLOBAL(dormtr, DORMTR)
      LAPACK_chetrd* = LAPACK_GLOBAL(chetrd, CHETRD)
      LAPACK_zhetrd* = LAPACK_GLOBAL(zhetrd, ZHETRD)
      LAPACK_cungtr* = LAPACK_GLOBAL(cungtr, CUNGTR)
      LAPACK_zungtr* = LAPACK_GLOBAL(zungtr, ZUNGTR)
      LAPACK_cunmtr* = LAPACK_GLOBAL(cunmtr, CUNMTR)
      LAPACK_zunmtr* = LAPACK_GLOBAL(zunmtr, ZUNMTR)
      LAPACK_ssptrd* = LAPACK_GLOBAL(ssptrd, SSPTRD)
      LAPACK_dsptrd* = LAPACK_GLOBAL(dsptrd, DSPTRD)
      LAPACK_sopgtr* = LAPACK_GLOBAL(sopgtr, SOPGTR)
      LAPACK_dopgtr* = LAPACK_GLOBAL(dopgtr, DOPGTR)
      LAPACK_sopmtr* = LAPACK_GLOBAL(sopmtr, SOPMTR)
      LAPACK_dopmtr* = LAPACK_GLOBAL(dopmtr, DOPMTR)
      LAPACK_chptrd* = LAPACK_GLOBAL(chptrd, CHPTRD)
      LAPACK_zhptrd* = LAPACK_GLOBAL(zhptrd, ZHPTRD)
      LAPACK_cupgtr* = LAPACK_GLOBAL(cupgtr, CUPGTR)
      LAPACK_zupgtr* = LAPACK_GLOBAL(zupgtr, ZUPGTR)
      LAPACK_cupmtr* = LAPACK_GLOBAL(cupmtr, CUPMTR)
      LAPACK_zupmtr* = LAPACK_GLOBAL(zupmtr, ZUPMTR)
      LAPACK_ssbtrd* = LAPACK_GLOBAL(ssbtrd, SSBTRD)
      LAPACK_dsbtrd* = LAPACK_GLOBAL(dsbtrd, DSBTRD)
      LAPACK_chbtrd* = LAPACK_GLOBAL(chbtrd, CHBTRD)
      LAPACK_zhbtrd* = LAPACK_GLOBAL(zhbtrd, ZHBTRD)
      LAPACK_ssterf* = LAPACK_GLOBAL(ssterf, SSTERF)
      LAPACK_dsterf* = LAPACK_GLOBAL(dsterf, DSTERF)
      LAPACK_ssteqr* = LAPACK_GLOBAL(ssteqr, SSTEQR)
      LAPACK_dsteqr* = LAPACK_GLOBAL(dsteqr, DSTEQR)
      LAPACK_csteqr* = LAPACK_GLOBAL(csteqr, CSTEQR)
      LAPACK_zsteqr* = LAPACK_GLOBAL(zsteqr, ZSTEQR)
      LAPACK_sstemr* = LAPACK_GLOBAL(sstemr, SSTEMR)
      LAPACK_dstemr* = LAPACK_GLOBAL(dstemr, DSTEMR)
      LAPACK_cstemr* = LAPACK_GLOBAL(cstemr, CSTEMR)
      LAPACK_zstemr* = LAPACK_GLOBAL(zstemr, ZSTEMR)
      LAPACK_sstedc* = LAPACK_GLOBAL(sstedc, SSTEDC)
      LAPACK_dstedc* = LAPACK_GLOBAL(dstedc, DSTEDC)
      LAPACK_cstedc* = LAPACK_GLOBAL(cstedc, CSTEDC)
      LAPACK_zstedc* = LAPACK_GLOBAL(zstedc, ZSTEDC)
      LAPACK_sstegr* = LAPACK_GLOBAL(sstegr, SSTEGR)
      LAPACK_dstegr* = LAPACK_GLOBAL(dstegr, DSTEGR)
      LAPACK_cstegr* = LAPACK_GLOBAL(cstegr, CSTEGR)
      LAPACK_zstegr* = LAPACK_GLOBAL(zstegr, ZSTEGR)
      LAPACK_spteqr* = LAPACK_GLOBAL(spteqr, SPTEQR)
      LAPACK_dpteqr* = LAPACK_GLOBAL(dpteqr, DPTEQR)
      LAPACK_cpteqr* = LAPACK_GLOBAL(cpteqr, CPTEQR)
      LAPACK_zpteqr* = LAPACK_GLOBAL(zpteqr, ZPTEQR)
      LAPACK_sstebz* = LAPACK_GLOBAL(sstebz, SSTEBZ)
      LAPACK_dstebz* = LAPACK_GLOBAL(dstebz, DSTEBZ)
      LAPACK_sstein* = LAPACK_GLOBAL(sstein, SSTEIN)
      LAPACK_dstein* = LAPACK_GLOBAL(dstein, DSTEIN)
      LAPACK_cstein* = LAPACK_GLOBAL(cstein, CSTEIN)
      LAPACK_zstein* = LAPACK_GLOBAL(zstein, ZSTEIN)
      LAPACK_sdisna* = LAPACK_GLOBAL(sdisna, SDISNA)
      LAPACK_ddisna* = LAPACK_GLOBAL(ddisna, DDISNA)
      LAPACK_ssygst* = LAPACK_GLOBAL(ssygst, SSYGST)
      LAPACK_dsygst* = LAPACK_GLOBAL(dsygst, DSYGST)
      LAPACK_chegst* = LAPACK_GLOBAL(chegst, CHEGST)
      LAPACK_zhegst* = LAPACK_GLOBAL(zhegst, ZHEGST)
      LAPACK_sspgst* = LAPACK_GLOBAL(sspgst, SSPGST)
      LAPACK_dspgst* = LAPACK_GLOBAL(dspgst, DSPGST)
      LAPACK_chpgst* = LAPACK_GLOBAL(chpgst, CHPGST)
      LAPACK_zhpgst* = LAPACK_GLOBAL(zhpgst, ZHPGST)
      LAPACK_ssbgst* = LAPACK_GLOBAL(ssbgst, SSBGST)
      LAPACK_dsbgst* = LAPACK_GLOBAL(dsbgst, DSBGST)
      LAPACK_chbgst* = LAPACK_GLOBAL(chbgst, CHBGST)
      LAPACK_zhbgst* = LAPACK_GLOBAL(zhbgst, ZHBGST)
      LAPACK_spbstf* = LAPACK_GLOBAL(spbstf, SPBSTF)
      LAPACK_dpbstf* = LAPACK_GLOBAL(dpbstf, DPBSTF)
      LAPACK_cpbstf* = LAPACK_GLOBAL(cpbstf, CPBSTF)
      LAPACK_zpbstf* = LAPACK_GLOBAL(zpbstf, ZPBSTF)
      LAPACK_sgehrd* = LAPACK_GLOBAL(sgehrd, SGEHRD)
      LAPACK_dgehrd* = LAPACK_GLOBAL(dgehrd, DGEHRD)
      LAPACK_cgehrd* = LAPACK_GLOBAL(cgehrd, CGEHRD)
      LAPACK_zgehrd* = LAPACK_GLOBAL(zgehrd, ZGEHRD)
      LAPACK_sorghr* = LAPACK_GLOBAL(sorghr, SORGHR)
      LAPACK_dorghr* = LAPACK_GLOBAL(dorghr, DORGHR)
      LAPACK_sormhr* = LAPACK_GLOBAL(sormhr, SORMHR)
      LAPACK_dormhr* = LAPACK_GLOBAL(dormhr, DORMHR)
      LAPACK_cunghr* = LAPACK_GLOBAL(cunghr, CUNGHR)
      LAPACK_zunghr* = LAPACK_GLOBAL(zunghr, ZUNGHR)
      LAPACK_cunmhr* = LAPACK_GLOBAL(cunmhr, CUNMHR)
      LAPACK_zunmhr* = LAPACK_GLOBAL(zunmhr, ZUNMHR)
      LAPACK_sgebal* = LAPACK_GLOBAL(sgebal, SGEBAL)
      LAPACK_dgebal* = LAPACK_GLOBAL(dgebal, DGEBAL)
      LAPACK_cgebal* = LAPACK_GLOBAL(cgebal, CGEBAL)
      LAPACK_zgebal* = LAPACK_GLOBAL(zgebal, ZGEBAL)
      LAPACK_sgebak* = LAPACK_GLOBAL(sgebak, SGEBAK)
      LAPACK_dgebak* = LAPACK_GLOBAL(dgebak, DGEBAK)
      LAPACK_cgebak* = LAPACK_GLOBAL(cgebak, CGEBAK)
      LAPACK_zgebak* = LAPACK_GLOBAL(zgebak, ZGEBAK)
      LAPACK_shseqr* = LAPACK_GLOBAL(shseqr, SHSEQR)
      LAPACK_dhseqr* = LAPACK_GLOBAL(dhseqr, DHSEQR)
      LAPACK_chseqr* = LAPACK_GLOBAL(chseqr, CHSEQR)
      LAPACK_zhseqr* = LAPACK_GLOBAL(zhseqr, ZHSEQR)
      LAPACK_shsein* = LAPACK_GLOBAL(shsein, SHSEIN)
      LAPACK_dhsein* = LAPACK_GLOBAL(dhsein, DHSEIN)
      LAPACK_chsein* = LAPACK_GLOBAL(chsein, CHSEIN)
      LAPACK_zhsein* = LAPACK_GLOBAL(zhsein, ZHSEIN)
      LAPACK_strevc* = LAPACK_GLOBAL(strevc, STREVC)
      LAPACK_dtrevc* = LAPACK_GLOBAL(dtrevc, DTREVC)
      LAPACK_ctrevc* = LAPACK_GLOBAL(ctrevc, CTREVC)
      LAPACK_ztrevc* = LAPACK_GLOBAL(ztrevc, ZTREVC)
      LAPACK_strsna* = LAPACK_GLOBAL(strsna, STRSNA)
      LAPACK_dtrsna* = LAPACK_GLOBAL(dtrsna, DTRSNA)
      LAPACK_ctrsna* = LAPACK_GLOBAL(ctrsna, CTRSNA)
      LAPACK_ztrsna* = LAPACK_GLOBAL(ztrsna, ZTRSNA)
      LAPACK_strexc* = LAPACK_GLOBAL(strexc, STREXC)
      LAPACK_dtrexc* = LAPACK_GLOBAL(dtrexc, DTREXC)
      LAPACK_ctrexc* = LAPACK_GLOBAL(ctrexc, CTREXC)
      LAPACK_ztrexc* = LAPACK_GLOBAL(ztrexc, ZTREXC)
      LAPACK_strsen* = LAPACK_GLOBAL(strsen, STRSEN)
      LAPACK_dtrsen* = LAPACK_GLOBAL(dtrsen, DTRSEN)
      LAPACK_ctrsen* = LAPACK_GLOBAL(ctrsen, CTRSEN)
      LAPACK_ztrsen* = LAPACK_GLOBAL(ztrsen, ZTRSEN)
      LAPACK_strsyl* = LAPACK_GLOBAL(strsyl, STRSYL)
      LAPACK_dtrsyl* = LAPACK_GLOBAL(dtrsyl, DTRSYL)
      LAPACK_ctrsyl* = LAPACK_GLOBAL(ctrsyl, CTRSYL)
      LAPACK_ztrsyl* = LAPACK_GLOBAL(ztrsyl, ZTRSYL)
      LAPACK_sgghrd* = LAPACK_GLOBAL(sgghrd, SGGHRD)
      LAPACK_dgghrd* = LAPACK_GLOBAL(dgghrd, DGGHRD)
      LAPACK_cgghrd* = LAPACK_GLOBAL(cgghrd, CGGHRD)
      LAPACK_zgghrd* = LAPACK_GLOBAL(zgghrd, ZGGHRD)
      LAPACK_sggbal* = LAPACK_GLOBAL(sggbal, SGGBAL)
      LAPACK_dggbal* = LAPACK_GLOBAL(dggbal, DGGBAL)
      LAPACK_cggbal* = LAPACK_GLOBAL(cggbal, CGGBAL)
      LAPACK_zggbal* = LAPACK_GLOBAL(zggbal, ZGGBAL)
      LAPACK_sggbak* = LAPACK_GLOBAL(sggbak, SGGBAK)
      LAPACK_dggbak* = LAPACK_GLOBAL(dggbak, DGGBAK)
      LAPACK_cggbak* = LAPACK_GLOBAL(cggbak, CGGBAK)
      LAPACK_zggbak* = LAPACK_GLOBAL(zggbak, ZGGBAK)
      LAPACK_shgeqz* = LAPACK_GLOBAL(shgeqz, SHGEQZ)
      LAPACK_dhgeqz* = LAPACK_GLOBAL(dhgeqz, DHGEQZ)
      LAPACK_chgeqz* = LAPACK_GLOBAL(chgeqz, CHGEQZ)
      LAPACK_zhgeqz* = LAPACK_GLOBAL(zhgeqz, ZHGEQZ)
      LAPACK_stgevc* = LAPACK_GLOBAL(stgevc, STGEVC)
      LAPACK_dtgevc* = LAPACK_GLOBAL(dtgevc, DTGEVC)
      LAPACK_ctgevc* = LAPACK_GLOBAL(ctgevc, CTGEVC)
      LAPACK_ztgevc* = LAPACK_GLOBAL(ztgevc, ZTGEVC)
      LAPACK_stgexc* = LAPACK_GLOBAL(stgexc, STGEXC)
      LAPACK_dtgexc* = LAPACK_GLOBAL(dtgexc, DTGEXC)
      LAPACK_ctgexc* = LAPACK_GLOBAL(ctgexc, CTGEXC)
      LAPACK_ztgexc* = LAPACK_GLOBAL(ztgexc, ZTGEXC)
      LAPACK_stgsen* = LAPACK_GLOBAL(stgsen, STGSEN)
      LAPACK_dtgsen* = LAPACK_GLOBAL(dtgsen, DTGSEN)
      LAPACK_ctgsen* = LAPACK_GLOBAL(ctgsen, CTGSEN)
      LAPACK_ztgsen* = LAPACK_GLOBAL(ztgsen, ZTGSEN)
      LAPACK_stgsyl* = LAPACK_GLOBAL(stgsyl, STGSYL)
      LAPACK_dtgsyl* = LAPACK_GLOBAL(dtgsyl, DTGSYL)
      LAPACK_ctgsyl* = LAPACK_GLOBAL(ctgsyl, CTGSYL)
      LAPACK_ztgsyl* = LAPACK_GLOBAL(ztgsyl, ZTGSYL)
      LAPACK_stgsna* = LAPACK_GLOBAL(stgsna, STGSNA)
      LAPACK_dtgsna* = LAPACK_GLOBAL(dtgsna, DTGSNA)
      LAPACK_ctgsna* = LAPACK_GLOBAL(ctgsna, CTGSNA)
      LAPACK_ztgsna* = LAPACK_GLOBAL(ztgsna, ZTGSNA)
      LAPACK_sggsvp* = LAPACK_GLOBAL(sggsvp, SGGSVP)
      LAPACK_dggsvp* = LAPACK_GLOBAL(dggsvp, DGGSVP)
      LAPACK_cggsvp* = LAPACK_GLOBAL(cggsvp, CGGSVP)
      LAPACK_zggsvp* = LAPACK_GLOBAL(zggsvp, ZGGSVP)
      LAPACK_stgsja* = LAPACK_GLOBAL(stgsja, STGSJA)
      LAPACK_dtgsja* = LAPACK_GLOBAL(dtgsja, DTGSJA)
      LAPACK_ctgsja* = LAPACK_GLOBAL(ctgsja, CTGSJA)
      LAPACK_ztgsja* = LAPACK_GLOBAL(ztgsja, ZTGSJA)
      LAPACK_sgels* = LAPACK_GLOBAL(sgels, SGELS)
      LAPACK_dgels* = LAPACK_GLOBAL(dgels, DGELS)
      LAPACK_cgels* = LAPACK_GLOBAL(cgels, CGELS)
      LAPACK_zgels* = LAPACK_GLOBAL(zgels, ZGELS)
      LAPACK_sgelsy* = LAPACK_GLOBAL(sgelsy, SGELSY)
      LAPACK_dgelsy* = LAPACK_GLOBAL(dgelsy, DGELSY)
      LAPACK_cgelsy* = LAPACK_GLOBAL(cgelsy, CGELSY)
      LAPACK_zgelsy* = LAPACK_GLOBAL(zgelsy, ZGELSY)
      LAPACK_sgelss* = LAPACK_GLOBAL(sgelss, SGELSS)
      LAPACK_dgelss* = LAPACK_GLOBAL(dgelss, DGELSS)
      LAPACK_cgelss* = LAPACK_GLOBAL(cgelss, CGELSS)
      LAPACK_zgelss* = LAPACK_GLOBAL(zgelss, ZGELSS)
      LAPACK_sgelsd* = LAPACK_GLOBAL(sgelsd, SGELSD)
      LAPACK_dgelsd* = LAPACK_GLOBAL(dgelsd, DGELSD)
      LAPACK_cgelsd* = LAPACK_GLOBAL(cgelsd, CGELSD)
      LAPACK_zgelsd* = LAPACK_GLOBAL(zgelsd, ZGELSD)
      LAPACK_sgglse* = LAPACK_GLOBAL(sgglse, SGGLSE)
      LAPACK_dgglse* = LAPACK_GLOBAL(dgglse, DGGLSE)
      LAPACK_cgglse* = LAPACK_GLOBAL(cgglse, CGGLSE)
      LAPACK_zgglse* = LAPACK_GLOBAL(zgglse, ZGGLSE)
      LAPACK_sggglm* = LAPACK_GLOBAL(sggglm, SGGGLM)
      LAPACK_dggglm* = LAPACK_GLOBAL(dggglm, DGGGLM)
      LAPACK_cggglm* = LAPACK_GLOBAL(cggglm, CGGGLM)
      LAPACK_zggglm* = LAPACK_GLOBAL(zggglm, ZGGGLM)
      LAPACK_ssyev* = LAPACK_GLOBAL(ssyev, SSYEV)
      LAPACK_dsyev* = LAPACK_GLOBAL(dsyev, DSYEV)
      LAPACK_cheev* = LAPACK_GLOBAL(cheev, CHEEV)
      LAPACK_zheev* = LAPACK_GLOBAL(zheev, ZHEEV)
      LAPACK_ssyevd* = LAPACK_GLOBAL(ssyevd, SSYEVD)
      LAPACK_dsyevd* = LAPACK_GLOBAL(dsyevd, DSYEVD)
      LAPACK_cheevd* = LAPACK_GLOBAL(cheevd, CHEEVD)
      LAPACK_zheevd* = LAPACK_GLOBAL(zheevd, ZHEEVD)
      LAPACK_ssyevx* = LAPACK_GLOBAL(ssyevx, SSYEVX)
      LAPACK_dsyevx* = LAPACK_GLOBAL(dsyevx, DSYEVX)
      LAPACK_cheevx* = LAPACK_GLOBAL(cheevx, CHEEVX)
      LAPACK_zheevx* = LAPACK_GLOBAL(zheevx, ZHEEVX)
      LAPACK_ssyevr* = LAPACK_GLOBAL(ssyevr, SSYEVR)
      LAPACK_dsyevr* = LAPACK_GLOBAL(dsyevr, DSYEVR)
      LAPACK_cheevr* = LAPACK_GLOBAL(cheevr, CHEEVR)
      LAPACK_zheevr* = LAPACK_GLOBAL(zheevr, ZHEEVR)
      LAPACK_sspev* = LAPACK_GLOBAL(sspev, SSPEV)
      LAPACK_dspev* = LAPACK_GLOBAL(dspev, DSPEV)
      LAPACK_chpev* = LAPACK_GLOBAL(chpev, CHPEV)
      LAPACK_zhpev* = LAPACK_GLOBAL(zhpev, ZHPEV)
      LAPACK_sspevd* = LAPACK_GLOBAL(sspevd, SSPEVD)
      LAPACK_dspevd* = LAPACK_GLOBAL(dspevd, DSPEVD)
      LAPACK_chpevd* = LAPACK_GLOBAL(chpevd, CHPEVD)
      LAPACK_zhpevd* = LAPACK_GLOBAL(zhpevd, ZHPEVD)
      LAPACK_sspevx* = LAPACK_GLOBAL(sspevx, SSPEVX)
      LAPACK_dspevx* = LAPACK_GLOBAL(dspevx, DSPEVX)
      LAPACK_chpevx* = LAPACK_GLOBAL(chpevx, CHPEVX)
      LAPACK_zhpevx* = LAPACK_GLOBAL(zhpevx, ZHPEVX)
      LAPACK_ssbev* = LAPACK_GLOBAL(ssbev, SSBEV)
      LAPACK_dsbev* = LAPACK_GLOBAL(dsbev, DSBEV)
      LAPACK_chbev* = LAPACK_GLOBAL(chbev, CHBEV)
      LAPACK_zhbev* = LAPACK_GLOBAL(zhbev, ZHBEV)
      LAPACK_ssbevd* = LAPACK_GLOBAL(ssbevd, SSBEVD)
      LAPACK_dsbevd* = LAPACK_GLOBAL(dsbevd, DSBEVD)
      LAPACK_chbevd* = LAPACK_GLOBAL(chbevd, CHBEVD)
      LAPACK_zhbevd* = LAPACK_GLOBAL(zhbevd, ZHBEVD)
      LAPACK_ssbevx* = LAPACK_GLOBAL(ssbevx, SSBEVX)
      LAPACK_dsbevx* = LAPACK_GLOBAL(dsbevx, DSBEVX)
      LAPACK_chbevx* = LAPACK_GLOBAL(chbevx, CHBEVX)
      LAPACK_zhbevx* = LAPACK_GLOBAL(zhbevx, ZHBEVX)
      LAPACK_sstev* = LAPACK_GLOBAL(sstev, SSTEV)
      LAPACK_dstev* = LAPACK_GLOBAL(dstev, DSTEV)
      LAPACK_sstevd* = LAPACK_GLOBAL(sstevd, SSTEVD)
      LAPACK_dstevd* = LAPACK_GLOBAL(dstevd, DSTEVD)
      LAPACK_sstevx* = LAPACK_GLOBAL(sstevx, SSTEVX)
      LAPACK_dstevx* = LAPACK_GLOBAL(dstevx, DSTEVX)
      LAPACK_sstevr* = LAPACK_GLOBAL(sstevr, SSTEVR)
      LAPACK_dstevr* = LAPACK_GLOBAL(dstevr, DSTEVR)
      LAPACK_sgees* = LAPACK_GLOBAL(sgees, SGEES)
      LAPACK_dgees* = LAPACK_GLOBAL(dgees, DGEES)
      LAPACK_cgees* = LAPACK_GLOBAL(cgees, CGEES)
      LAPACK_zgees* = LAPACK_GLOBAL(zgees, ZGEES)
      LAPACK_sgeesx* = LAPACK_GLOBAL(sgeesx, SGEESX)
      LAPACK_dgeesx* = LAPACK_GLOBAL(dgeesx, DGEESX)
      LAPACK_cgeesx* = LAPACK_GLOBAL(cgeesx, CGEESX)
      LAPACK_zgeesx* = LAPACK_GLOBAL(zgeesx, ZGEESX)
      LAPACK_sgeev* = LAPACK_GLOBAL(sgeev, SGEEV)
      LAPACK_dgeev* = LAPACK_GLOBAL(dgeev, DGEEV)
      LAPACK_cgeev* = LAPACK_GLOBAL(cgeev, CGEEV)
      LAPACK_zgeev* = LAPACK_GLOBAL(zgeev, ZGEEV)
      LAPACK_sgeevx* = LAPACK_GLOBAL(sgeevx, SGEEVX)
      LAPACK_dgeevx* = LAPACK_GLOBAL(dgeevx, DGEEVX)
      LAPACK_cgeevx* = LAPACK_GLOBAL(cgeevx, CGEEVX)
      LAPACK_zgeevx* = LAPACK_GLOBAL(zgeevx, ZGEEVX)
      LAPACK_sgesvd* = LAPACK_GLOBAL(sgesvd, SGESVD)
      LAPACK_dgesvd* = LAPACK_GLOBAL(dgesvd, DGESVD)
      LAPACK_cgesvd* = LAPACK_GLOBAL(cgesvd, CGESVD)
      LAPACK_zgesvd* = LAPACK_GLOBAL(zgesvd, ZGESVD)
      LAPACK_sgesdd* = LAPACK_GLOBAL(sgesdd, SGESDD)
      LAPACK_dgesdd* = LAPACK_GLOBAL(dgesdd, DGESDD)
      LAPACK_cgesdd* = LAPACK_GLOBAL(cgesdd, CGESDD)
      LAPACK_zgesdd* = LAPACK_GLOBAL(zgesdd, ZGESDD)
      LAPACK_dgejsv* = LAPACK_GLOBAL(dgejsv, DGEJSV)
      LAPACK_sgejsv* = LAPACK_GLOBAL(sgejsv, SGEJSV)
      LAPACK_dgesvj* = LAPACK_GLOBAL(dgesvj, DGESVJ)
      LAPACK_sgesvj* = LAPACK_GLOBAL(sgesvj, SGESVJ)
      LAPACK_sggsvd* = LAPACK_GLOBAL(sggsvd, SGGSVD)
      LAPACK_dggsvd* = LAPACK_GLOBAL(dggsvd, DGGSVD)
      LAPACK_cggsvd* = LAPACK_GLOBAL(cggsvd, CGGSVD)
      LAPACK_zggsvd* = LAPACK_GLOBAL(zggsvd, ZGGSVD)
      LAPACK_ssygv* = LAPACK_GLOBAL(ssygv, SSYGV)
      LAPACK_dsygv* = LAPACK_GLOBAL(dsygv, DSYGV)
      LAPACK_chegv* = LAPACK_GLOBAL(chegv, CHEGV)
      LAPACK_zhegv* = LAPACK_GLOBAL(zhegv, ZHEGV)
      LAPACK_ssygvd* = LAPACK_GLOBAL(ssygvd, SSYGVD)
      LAPACK_dsygvd* = LAPACK_GLOBAL(dsygvd, DSYGVD)
      LAPACK_chegvd* = LAPACK_GLOBAL(chegvd, CHEGVD)
      LAPACK_zhegvd* = LAPACK_GLOBAL(zhegvd, ZHEGVD)
      LAPACK_ssygvx* = LAPACK_GLOBAL(ssygvx, SSYGVX)
      LAPACK_dsygvx* = LAPACK_GLOBAL(dsygvx, DSYGVX)
      LAPACK_chegvx* = LAPACK_GLOBAL(chegvx, CHEGVX)
      LAPACK_zhegvx* = LAPACK_GLOBAL(zhegvx, ZHEGVX)
      LAPACK_sspgv* = LAPACK_GLOBAL(sspgv, SSPGV)
      LAPACK_dspgv* = LAPACK_GLOBAL(dspgv, DSPGV)
      LAPACK_chpgv* = LAPACK_GLOBAL(chpgv, CHPGV)
      LAPACK_zhpgv* = LAPACK_GLOBAL(zhpgv, ZHPGV)
      LAPACK_sspgvd* = LAPACK_GLOBAL(sspgvd, SSPGVD)
      LAPACK_dspgvd* = LAPACK_GLOBAL(dspgvd, DSPGVD)
      LAPACK_chpgvd* = LAPACK_GLOBAL(chpgvd, CHPGVD)
      LAPACK_zhpgvd* = LAPACK_GLOBAL(zhpgvd, ZHPGVD)
      LAPACK_sspgvx* = LAPACK_GLOBAL(sspgvx, SSPGVX)
      LAPACK_dspgvx* = LAPACK_GLOBAL(dspgvx, DSPGVX)
      LAPACK_chpgvx* = LAPACK_GLOBAL(chpgvx, CHPGVX)
      LAPACK_zhpgvx* = LAPACK_GLOBAL(zhpgvx, ZHPGVX)
      LAPACK_ssbgv* = LAPACK_GLOBAL(ssbgv, SSBGV)
      LAPACK_dsbgv* = LAPACK_GLOBAL(dsbgv, DSBGV)
      LAPACK_chbgv* = LAPACK_GLOBAL(chbgv, CHBGV)
      LAPACK_zhbgv* = LAPACK_GLOBAL(zhbgv, ZHBGV)
      LAPACK_ssbgvd* = LAPACK_GLOBAL(ssbgvd, SSBGVD)
      LAPACK_dsbgvd* = LAPACK_GLOBAL(dsbgvd, DSBGVD)
      LAPACK_chbgvd* = LAPACK_GLOBAL(chbgvd, CHBGVD)
      LAPACK_zhbgvd* = LAPACK_GLOBAL(zhbgvd, ZHBGVD)
      LAPACK_ssbgvx* = LAPACK_GLOBAL(ssbgvx, SSBGVX)
      LAPACK_dsbgvx* = LAPACK_GLOBAL(dsbgvx, DSBGVX)
      LAPACK_chbgvx* = LAPACK_GLOBAL(chbgvx, CHBGVX)
      LAPACK_zhbgvx* = LAPACK_GLOBAL(zhbgvx, ZHBGVX)
      LAPACK_sgges* = LAPACK_GLOBAL(sgges, SGGES)
      LAPACK_dgges* = LAPACK_GLOBAL(dgges, DGGES)
      LAPACK_cgges* = LAPACK_GLOBAL(cgges, CGGES)
      LAPACK_zgges* = LAPACK_GLOBAL(zgges, ZGGES)
      LAPACK_sggesx* = LAPACK_GLOBAL(sggesx, SGGESX)
      LAPACK_dggesx* = LAPACK_GLOBAL(dggesx, DGGESX)
      LAPACK_cggesx* = LAPACK_GLOBAL(cggesx, CGGESX)
      LAPACK_zggesx* = LAPACK_GLOBAL(zggesx, ZGGESX)
      LAPACK_sggev* = LAPACK_GLOBAL(sggev, SGGEV)
      LAPACK_dggev* = LAPACK_GLOBAL(dggev, DGGEV)
      LAPACK_cggev* = LAPACK_GLOBAL(cggev, CGGEV)
      LAPACK_zggev* = LAPACK_GLOBAL(zggev, ZGGEV)
      LAPACK_sggevx* = LAPACK_GLOBAL(sggevx, SGGEVX)
      LAPACK_dggevx* = LAPACK_GLOBAL(dggevx, DGGEVX)
      LAPACK_cggevx* = LAPACK_GLOBAL(cggevx, CGGEVX)
      LAPACK_zggevx* = LAPACK_GLOBAL(zggevx, ZGGEVX)
      LAPACK_dsfrk* = LAPACK_GLOBAL(dsfrk, DSFRK)
      LAPACK_ssfrk* = LAPACK_GLOBAL(ssfrk, SSFRK)
      LAPACK_zhfrk* = LAPACK_GLOBAL(zhfrk, ZHFRK)
      LAPACK_chfrk* = LAPACK_GLOBAL(chfrk, CHFRK)
      LAPACK_dtfsm* = LAPACK_GLOBAL(dtfsm, DTFSM)
      LAPACK_stfsm* = LAPACK_GLOBAL(stfsm, STFSM)
      LAPACK_ztfsm* = LAPACK_GLOBAL(ztfsm, ZTFSM)
      LAPACK_ctfsm* = LAPACK_GLOBAL(ctfsm, CTFSM)
      LAPACK_dtfttp* = LAPACK_GLOBAL(dtfttp, DTFTTP)
      LAPACK_stfttp* = LAPACK_GLOBAL(stfttp, STFTTP)
      LAPACK_ztfttp* = LAPACK_GLOBAL(ztfttp, ZTFTTP)
      LAPACK_ctfttp* = LAPACK_GLOBAL(ctfttp, CTFTTP)
      LAPACK_dtfttr* = LAPACK_GLOBAL(dtfttr, DTFTTR)
      LAPACK_stfttr* = LAPACK_GLOBAL(stfttr, STFTTR)
      LAPACK_ztfttr* = LAPACK_GLOBAL(ztfttr, ZTFTTR)
      LAPACK_ctfttr* = LAPACK_GLOBAL(ctfttr, CTFTTR)
      LAPACK_dtpttf* = LAPACK_GLOBAL(dtpttf, DTPTTF)
      LAPACK_stpttf* = LAPACK_GLOBAL(stpttf, STPTTF)
      LAPACK_ztpttf* = LAPACK_GLOBAL(ztpttf, ZTPTTF)
      LAPACK_ctpttf* = LAPACK_GLOBAL(ctpttf, CTPTTF)
      LAPACK_dtpttr* = LAPACK_GLOBAL(dtpttr, DTPTTR)
      LAPACK_stpttr* = LAPACK_GLOBAL(stpttr, STPTTR)
      LAPACK_ztpttr* = LAPACK_GLOBAL(ztpttr, ZTPTTR)
      LAPACK_ctpttr* = LAPACK_GLOBAL(ctpttr, CTPTTR)
      LAPACK_dtrttf* = LAPACK_GLOBAL(dtrttf, DTRTTF)
      LAPACK_strttf* = LAPACK_GLOBAL(strttf, STRTTF)
      LAPACK_ztrttf* = LAPACK_GLOBAL(ztrttf, ZTRTTF)
      LAPACK_ctrttf* = LAPACK_GLOBAL(ctrttf, CTRTTF)
      LAPACK_dtrttp* = LAPACK_GLOBAL(dtrttp, DTRTTP)
      LAPACK_strttp* = LAPACK_GLOBAL(strttp, STRTTP)
      LAPACK_ztrttp* = LAPACK_GLOBAL(ztrttp, ZTRTTP)
      LAPACK_ctrttp* = LAPACK_GLOBAL(ctrttp, CTRTTP)
      LAPACK_sgeqrfp* = LAPACK_GLOBAL(sgeqrfp, SGEQRFP)
      LAPACK_dgeqrfp* = LAPACK_GLOBAL(dgeqrfp, DGEQRFP)
      LAPACK_cgeqrfp* = LAPACK_GLOBAL(cgeqrfp, CGEQRFP)
      LAPACK_zgeqrfp* = LAPACK_GLOBAL(zgeqrfp, ZGEQRFP)
      LAPACK_clacgv* = LAPACK_GLOBAL(clacgv, CLACGV)
      LAPACK_zlacgv* = LAPACK_GLOBAL(zlacgv, ZLACGV)
      LAPACK_slarnv* = LAPACK_GLOBAL(slarnv, SLARNV)
      LAPACK_dlarnv* = LAPACK_GLOBAL(dlarnv, DLARNV)
      LAPACK_clarnv* = LAPACK_GLOBAL(clarnv, CLARNV)
      LAPACK_zlarnv* = LAPACK_GLOBAL(zlarnv, ZLARNV)
      LAPACK_sgeqr2* = LAPACK_GLOBAL(sgeqr2, SGEQR2)
      LAPACK_dgeqr2* = LAPACK_GLOBAL(dgeqr2, DGEQR2)
      LAPACK_cgeqr2* = LAPACK_GLOBAL(cgeqr2, CGEQR2)
      LAPACK_zgeqr2* = LAPACK_GLOBAL(zgeqr2, ZGEQR2)
      LAPACK_slacpy* = LAPACK_GLOBAL(slacpy, SLACPY)
      LAPACK_dlacpy* = LAPACK_GLOBAL(dlacpy, DLACPY)
      LAPACK_clacpy* = LAPACK_GLOBAL(clacpy, CLACPY)
      LAPACK_zlacpy* = LAPACK_GLOBAL(zlacpy, ZLACPY)
      LAPACK_sgetf2* = LAPACK_GLOBAL(sgetf2, SGETF2)
      LAPACK_dgetf2* = LAPACK_GLOBAL(dgetf2, DGETF2)
      LAPACK_cgetf2* = LAPACK_GLOBAL(cgetf2, CGETF2)
      LAPACK_zgetf2* = LAPACK_GLOBAL(zgetf2, ZGETF2)
      LAPACK_slaswp* = LAPACK_GLOBAL(slaswp, SLASWP)
      LAPACK_dlaswp* = LAPACK_GLOBAL(dlaswp, DLASWP)
      LAPACK_claswp* = LAPACK_GLOBAL(claswp, CLASWP)
      LAPACK_zlaswp* = LAPACK_GLOBAL(zlaswp, ZLASWP)
      LAPACK_slange* = LAPACK_GLOBAL(slange, SLANGE)
      LAPACK_dlange* = LAPACK_GLOBAL(dlange, DLANGE)
      LAPACK_clange* = LAPACK_GLOBAL(clange, CLANGE)
      LAPACK_zlange* = LAPACK_GLOBAL(zlange, ZLANGE)
      LAPACK_clanhe* = LAPACK_GLOBAL(clanhe, CLANHE)
      LAPACK_zlanhe* = LAPACK_GLOBAL(zlanhe, ZLANHE)
      LAPACK_slansy* = LAPACK_GLOBAL(slansy, SLANSY)
      LAPACK_dlansy* = LAPACK_GLOBAL(dlansy, DLANSY)
      LAPACK_clansy* = LAPACK_GLOBAL(clansy, CLANSY)
      LAPACK_zlansy* = LAPACK_GLOBAL(zlansy, ZLANSY)
      LAPACK_slantr* = LAPACK_GLOBAL(slantr, SLANTR)
      LAPACK_dlantr* = LAPACK_GLOBAL(dlantr, DLANTR)
      LAPACK_clantr* = LAPACK_GLOBAL(clantr, CLANTR)
      LAPACK_zlantr* = LAPACK_GLOBAL(zlantr, ZLANTR)
      LAPACK_slamch* = LAPACK_GLOBAL(slamch, SLAMCH)
      LAPACK_dlamch* = LAPACK_GLOBAL(dlamch, DLAMCH)
      LAPACK_sgelq2* = LAPACK_GLOBAL(sgelq2, SGELQ2)
      LAPACK_dgelq2* = LAPACK_GLOBAL(dgelq2, DGELQ2)
      LAPACK_cgelq2* = LAPACK_GLOBAL(cgelq2, CGELQ2)
      LAPACK_zgelq2* = LAPACK_GLOBAL(zgelq2, ZGELQ2)
      LAPACK_slarfb* = LAPACK_GLOBAL(slarfb, SLARFB)
      LAPACK_dlarfb* = LAPACK_GLOBAL(dlarfb, DLARFB)
      LAPACK_clarfb* = LAPACK_GLOBAL(clarfb, CLARFB)
      LAPACK_zlarfb* = LAPACK_GLOBAL(zlarfb, ZLARFB)
      LAPACK_slarfg* = LAPACK_GLOBAL(slarfg, SLARFG)
      LAPACK_dlarfg* = LAPACK_GLOBAL(dlarfg, DLARFG)
      LAPACK_clarfg* = LAPACK_GLOBAL(clarfg, CLARFG)
      LAPACK_zlarfg* = LAPACK_GLOBAL(zlarfg, ZLARFG)
      LAPACK_slarft* = LAPACK_GLOBAL(slarft, SLARFT)
      LAPACK_dlarft* = LAPACK_GLOBAL(dlarft, DLARFT)
      LAPACK_clarft* = LAPACK_GLOBAL(clarft, CLARFT)
      LAPACK_zlarft* = LAPACK_GLOBAL(zlarft, ZLARFT)
      LAPACK_slarfx* = LAPACK_GLOBAL(slarfx, SLARFX)
      LAPACK_dlarfx* = LAPACK_GLOBAL(dlarfx, DLARFX)
      LAPACK_clarfx* = LAPACK_GLOBAL(clarfx, CLARFX)
      LAPACK_zlarfx* = LAPACK_GLOBAL(zlarfx, ZLARFX)
      LAPACK_slatms* = LAPACK_GLOBAL(slatms, SLATMS)
      LAPACK_dlatms* = LAPACK_GLOBAL(dlatms, DLATMS)
      LAPACK_clatms* = LAPACK_GLOBAL(clatms, CLATMS)
      LAPACK_zlatms* = LAPACK_GLOBAL(zlatms, ZLATMS)
      LAPACK_slag2d* = LAPACK_GLOBAL(slag2d, SLAG2D)
      LAPACK_dlag2s* = LAPACK_GLOBAL(dlag2s, DLAG2S)
      LAPACK_clag2z* = LAPACK_GLOBAL(clag2z, CLAG2Z)
      LAPACK_zlag2c* = LAPACK_GLOBAL(zlag2c, ZLAG2C)
      LAPACK_slauum* = LAPACK_GLOBAL(slauum, SLAUUM)
      LAPACK_dlauum* = LAPACK_GLOBAL(dlauum, DLAUUM)
      LAPACK_clauum* = LAPACK_GLOBAL(clauum, CLAUUM)
      LAPACK_zlauum* = LAPACK_GLOBAL(zlauum, ZLAUUM)
      LAPACK_slagge* = LAPACK_GLOBAL(slagge, SLAGGE)
      LAPACK_dlagge* = LAPACK_GLOBAL(dlagge, DLAGGE)
      LAPACK_clagge* = LAPACK_GLOBAL(clagge, CLAGGE)
      LAPACK_zlagge* = LAPACK_GLOBAL(zlagge, ZLAGGE)
      LAPACK_slaset* = LAPACK_GLOBAL(slaset, SLASET)
      LAPACK_dlaset* = LAPACK_GLOBAL(dlaset, DLASET)
      LAPACK_claset* = LAPACK_GLOBAL(claset, CLASET)
      LAPACK_zlaset* = LAPACK_GLOBAL(zlaset, ZLASET)
      LAPACK_slasrt* = LAPACK_GLOBAL(slasrt, SLASRT)
      LAPACK_dlasrt* = LAPACK_GLOBAL(dlasrt, DLASRT)
      LAPACK_slagsy* = LAPACK_GLOBAL(slagsy, SLAGSY)
      LAPACK_dlagsy* = LAPACK_GLOBAL(dlagsy, DLAGSY)
      LAPACK_clagsy* = LAPACK_GLOBAL(clagsy, CLAGSY)
      LAPACK_zlagsy* = LAPACK_GLOBAL(zlagsy, ZLAGSY)
      LAPACK_claghe* = LAPACK_GLOBAL(claghe, CLAGHE)
      LAPACK_zlaghe* = LAPACK_GLOBAL(zlaghe, ZLAGHE)
      LAPACK_slapmr* = LAPACK_GLOBAL(slapmr, SLAPMR)
      LAPACK_dlapmr* = LAPACK_GLOBAL(dlapmr, DLAPMR)
      LAPACK_clapmr* = LAPACK_GLOBAL(clapmr, CLAPMR)
      LAPACK_zlapmr* = LAPACK_GLOBAL(zlapmr, ZLAPMR)
      LAPACK_slapy2* = LAPACK_GLOBAL(slapy2, SLAPY2)
      LAPACK_dlapy2* = LAPACK_GLOBAL(dlapy2, DLAPY2)
      LAPACK_slapy3* = LAPACK_GLOBAL(slapy3, SLAPY3)
      LAPACK_dlapy3* = LAPACK_GLOBAL(dlapy3, DLAPY3)
      LAPACK_slartgp* = LAPACK_GLOBAL(slartgp, SLARTGP)
      LAPACK_dlartgp* = LAPACK_GLOBAL(dlartgp, DLARTGP)
      LAPACK_slartgs* = LAPACK_GLOBAL(slartgs, SLARTGS)
      LAPACK_dlartgs* = LAPACK_GLOBAL(dlartgs, DLARTGS)
    # LAPACK 3.3.0
    const 
      LAPACK_cbbcsd* = LAPACK_GLOBAL(cbbcsd, CBBCSD)
      LAPACK_cheswapr* = LAPACK_GLOBAL(cheswapr, CHESWAPR)
      LAPACK_chetri2* = LAPACK_GLOBAL(chetri2, CHETRI2)
      LAPACK_chetri2x* = LAPACK_GLOBAL(chetri2x, CHETRI2X)
      LAPACK_chetrs2* = LAPACK_GLOBAL(chetrs2, CHETRS2)
      LAPACK_csyconv* = LAPACK_GLOBAL(csyconv, CSYCONV)
      LAPACK_csyswapr* = LAPACK_GLOBAL(csyswapr, CSYSWAPR)
      LAPACK_csytri2* = LAPACK_GLOBAL(csytri2, CSYTRI2)
      LAPACK_csytri2x* = LAPACK_GLOBAL(csytri2x, CSYTRI2X)
      LAPACK_csytrs2* = LAPACK_GLOBAL(csytrs2, CSYTRS2)
      LAPACK_cunbdb* = LAPACK_GLOBAL(cunbdb, CUNBDB)
      LAPACK_cuncsd* = LAPACK_GLOBAL(cuncsd, CUNCSD)
      LAPACK_dbbcsd* = LAPACK_GLOBAL(dbbcsd, DBBCSD)
      LAPACK_dorbdb* = LAPACK_GLOBAL(dorbdb, DORBDB)
      LAPACK_dorcsd* = LAPACK_GLOBAL(dorcsd, DORCSD)
      LAPACK_dsyconv* = LAPACK_GLOBAL(dsyconv, DSYCONV)
      LAPACK_dsyswapr* = LAPACK_GLOBAL(dsyswapr, DSYSWAPR)
      LAPACK_dsytri2* = LAPACK_GLOBAL(dsytri2, DSYTRI2)
      LAPACK_dsytri2x* = LAPACK_GLOBAL(dsytri2x, DSYTRI2X)
      LAPACK_dsytrs2* = LAPACK_GLOBAL(dsytrs2, DSYTRS2)
      LAPACK_sbbcsd* = LAPACK_GLOBAL(sbbcsd, SBBCSD)
      LAPACK_sorbdb* = LAPACK_GLOBAL(sorbdb, SORBDB)
      LAPACK_sorcsd* = LAPACK_GLOBAL(sorcsd, SORCSD)
      LAPACK_ssyconv* = LAPACK_GLOBAL(ssyconv, SSYCONV)
      LAPACK_ssyswapr* = LAPACK_GLOBAL(ssyswapr, SSYSWAPR)
      LAPACK_ssytri2* = LAPACK_GLOBAL(ssytri2, SSYTRI2)
      LAPACK_ssytri2x* = LAPACK_GLOBAL(ssytri2x, SSYTRI2X)
      LAPACK_ssytrs2* = LAPACK_GLOBAL(ssytrs2, SSYTRS2)
      LAPACK_zbbcsd* = LAPACK_GLOBAL(zbbcsd, ZBBCSD)
      LAPACK_zheswapr* = LAPACK_GLOBAL(zheswapr, ZHESWAPR)
      LAPACK_zhetri2* = LAPACK_GLOBAL(zhetri2, ZHETRI2)
      LAPACK_zhetri2x* = LAPACK_GLOBAL(zhetri2x, ZHETRI2X)
      LAPACK_zhetrs2* = LAPACK_GLOBAL(zhetrs2, ZHETRS2)
      LAPACK_zsyconv* = LAPACK_GLOBAL(zsyconv, ZSYCONV)
      LAPACK_zsyswapr* = LAPACK_GLOBAL(zsyswapr, ZSYSWAPR)
      LAPACK_zsytri2* = LAPACK_GLOBAL(zsytri2, ZSYTRI2)
      LAPACK_zsytri2x* = LAPACK_GLOBAL(zsytri2x, ZSYTRI2X)
      LAPACK_zsytrs2* = LAPACK_GLOBAL(zsytrs2, ZSYTRS2)
      LAPACK_zunbdb* = LAPACK_GLOBAL(zunbdb, ZUNBDB)
      LAPACK_zuncsd* = LAPACK_GLOBAL(zuncsd, ZUNCSD)
    # LAPACK 3.4.0
    const 
      LAPACK_sgemqrt* = LAPACK_GLOBAL(sgemqrt, SGEMQRT)
      LAPACK_dgemqrt* = LAPACK_GLOBAL(dgemqrt, DGEMQRT)
      LAPACK_cgemqrt* = LAPACK_GLOBAL(cgemqrt, CGEMQRT)
      LAPACK_zgemqrt* = LAPACK_GLOBAL(zgemqrt, ZGEMQRT)
      LAPACK_sgeqrt* = LAPACK_GLOBAL(sgeqrt, SGEQRT)
      LAPACK_dgeqrt* = LAPACK_GLOBAL(dgeqrt, DGEQRT)
      LAPACK_cgeqrt* = LAPACK_GLOBAL(cgeqrt, CGEQRT)
      LAPACK_zgeqrt* = LAPACK_GLOBAL(zgeqrt, ZGEQRT)
      LAPACK_sgeqrt2* = LAPACK_GLOBAL(sgeqrt2, SGEQRT2)
      LAPACK_dgeqrt2* = LAPACK_GLOBAL(dgeqrt2, DGEQRT2)
      LAPACK_cgeqrt2* = LAPACK_GLOBAL(cgeqrt2, CGEQRT2)
      LAPACK_zgeqrt2* = LAPACK_GLOBAL(zgeqrt2, ZGEQRT2)
      LAPACK_sgeqrt3* = LAPACK_GLOBAL(sgeqrt3, SGEQRT3)
      LAPACK_dgeqrt3* = LAPACK_GLOBAL(dgeqrt3, DGEQRT3)
      LAPACK_cgeqrt3* = LAPACK_GLOBAL(cgeqrt3, CGEQRT3)
      LAPACK_zgeqrt3* = LAPACK_GLOBAL(zgeqrt3, ZGEQRT3)
      LAPACK_stpmqrt* = LAPACK_GLOBAL(stpmqrt, STPMQRT)
      LAPACK_dtpmqrt* = LAPACK_GLOBAL(dtpmqrt, DTPMQRT)
      LAPACK_ctpmqrt* = LAPACK_GLOBAL(ctpmqrt, CTPMQRT)
      LAPACK_ztpmqrt* = LAPACK_GLOBAL(ztpmqrt, ZTPMQRT)
      LAPACK_dtpqrt* = LAPACK_GLOBAL(dtpqrt, DTPQRT)
      LAPACK_ctpqrt* = LAPACK_GLOBAL(ctpqrt, CTPQRT)
      LAPACK_ztpqrt* = LAPACK_GLOBAL(ztpqrt, ZTPQRT)
      LAPACK_stpqrt2* = LAPACK_GLOBAL(stpqrt2, STPQRT2)
      LAPACK_dtpqrt2* = LAPACK_GLOBAL(dtpqrt2, DTPQRT2)
      LAPACK_ctpqrt2* = LAPACK_GLOBAL(ctpqrt2, CTPQRT2)
      LAPACK_ztpqrt2* = LAPACK_GLOBAL(ztpqrt2, ZTPQRT2)
      LAPACK_stprfb* = LAPACK_GLOBAL(stprfb, STPRFB)
      LAPACK_dtprfb* = LAPACK_GLOBAL(dtprfb, DTPRFB)
      LAPACK_ctprfb* = LAPACK_GLOBAL(ctprfb, CTPRFB)
      LAPACK_ztprfb* = LAPACK_GLOBAL(ztprfb, ZTPRFB)
    # LAPACK 3.X.X
    const 
      LAPACK_csyr* = LAPACK_GLOBAL(csyr, CSYR)
      LAPACK_zsyr* = LAPACK_GLOBAL(zsyr, ZSYR)

    proc LAPACK_sgetrf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgetrf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cgetrf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgetrf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgbtrf*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr cfloat; ldab: ptr lapack_int;                       ipiv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgbtrf*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr cdouble; ldab: ptr lapack_int;                       ipiv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgbtrf*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgbtrf*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgttrf*(n: ptr lapack_int; dl: ptr cfloat; d: ptr cfloat;                         du: ptr cfloat; du2: ptr cfloat; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgttrf*(n: ptr lapack_int; dl: ptr cdouble; d: ptr cdouble;                         du: ptr cdouble; du2: ptr cdouble; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cgttrf*(n: ptr lapack_int; dl: ptr lapack_complex_float;                         d: ptr lapack_complex_float; du: ptr lapack_complex_float;                         du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgttrf*(n: ptr lapack_int; dl: ptr lapack_complex_double;                       d: ptr lapack_complex_double;                       du: ptr lapack_complex_double;                       du2: ptr lapack_complex_double; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_spotrf*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dpotrf*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cpotrf*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zpotrf*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dpstrf*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; piv: ptr lapack_int;                       rank: ptr lapack_int; tol: ptr cdouble; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_spstrf*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; piv: ptr lapack_int;                       rank: ptr lapack_int; tol: ptr cfloat; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zpstrf*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       piv: ptr lapack_int; rank: ptr lapack_int;                       tol: ptr cdouble; work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cpstrf*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       piv: ptr lapack_int; rank: ptr lapack_int;                       tol: ptr cfloat; work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dpftrf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_spftrf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zpftrf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_cpftrf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_spptrf*(uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dpptrf*(uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cpptrf*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zpptrf*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_spbtrf*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr cfloat; ldab: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dpbtrf*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr cdouble; ldab: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cpbtrf*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zpbtrf*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_spttrf*(n: ptr lapack_int; d: ptr cfloat; e: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dpttrf*(n: ptr lapack_int; d: ptr cdouble; e: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cpttrf*(n: ptr lapack_int; d: ptr cfloat;                         e: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zpttrf*(n: ptr lapack_int; d: ptr cdouble;                         e: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_ssytrf*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dsytrf*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_csytrf*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zsytrf*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chetrf*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhetrf*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ssptrf*(uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         ipiv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsptrf*(uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         ipiv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_csptrf*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zsptrf*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chptrf*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zhptrf*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgetrs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgetrs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgetrs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgetrs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgbtrs*(trans: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; nrhs: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; ipiv: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgbtrs*(trans: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; nrhs: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgbtrs*(trans: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; nrhs: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgbtrs*(trans: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; nrhs: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgttrs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       dl: ptr cfloat; d: ptr cfloat; du: ptr cfloat;                         du2: ptr cfloat; ipiv: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgttrs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       dl: ptr cdouble; d: ptr cdouble; du: ptr cdouble;                         du2: ptr cdouble; ipiv: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgttrs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       dl: ptr lapack_complex_float; d: ptr lapack_complex_float;                         du: ptr lapack_complex_float;                         du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgttrs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       dl: ptr lapack_complex_double;                       d: ptr lapack_complex_double;                       du: ptr lapack_complex_double;                       du2: ptr lapack_complex_double; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_spotrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dpotrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cpotrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zpotrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dpftrs*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cdouble; b: ptr cdouble;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_spftrs*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cfloat; b: ptr cfloat;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zpftrs*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cpftrs*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_spptrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr cfloat; b: ptr cfloat; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dpptrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr cdouble; b: ptr cdouble; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cpptrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_float; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zpptrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_spbtrs*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dpbtrs*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cpbtrs*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zpbtrs*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_spttrs*(n: ptr lapack_int; nrhs: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; b: ptr cfloat; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dpttrs*(n: ptr lapack_int; nrhs: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; b: ptr cdouble; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cpttrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       d: ptr cfloat; e: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zpttrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       d: ptr cdouble; e: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ssytrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsytrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_csytrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zsytrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chetrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhetrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ssptrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr cfloat; ipiv: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsptrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr cdouble; ipiv: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_csptrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zsptrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chptrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zhptrs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_strtrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtrtrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ctrtrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ztrtrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_stptrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int; ap: ptr cfloat;                         b: ptr cfloat; ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dtptrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int; ap: ptr cdouble;                         b: ptr cdouble; ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctptrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_float; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ztptrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_stbtrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtbtrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ctbtrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ztbtrs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgecon*(norm: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; anorm: ptr cfloat; rcond: ptr cfloat;                         work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgecon*(norm: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; anorm: ptr cdouble;                         rcond: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgecon*(norm: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       anorm: ptr cfloat; rcond: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgecon*(norm: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       anorm: ptr cdouble; rcond: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sgbcon*(norm: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr cfloat; ldab: ptr lapack_int;                       ipiv: ptr lapack_int; anorm: ptr cfloat;                         rcond: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgbcon*(norm: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr cdouble; ldab: ptr lapack_int;                       ipiv: ptr lapack_int; anorm: ptr cdouble;                         rcond: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgbcon*(norm: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; ipiv: ptr lapack_int;                       anorm: ptr cfloat; rcond: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgbcon*(norm: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; ipiv: ptr lapack_int;                       anorm: ptr cdouble; rcond: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sgtcon*(norm: cstring; n: ptr lapack_int; dl: ptr cfloat;                         d: ptr cfloat; du: ptr cfloat; du2: ptr cfloat;                         ipiv: ptr lapack_int; anorm: ptr cfloat;                         rcond: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgtcon*(norm: cstring; n: ptr lapack_int; dl: ptr cdouble;                         d: ptr cdouble; du: ptr cdouble; du2: ptr cdouble;                         ipiv: ptr lapack_int; anorm: ptr cdouble;                         rcond: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgtcon*(norm: cstring; n: ptr lapack_int;                       dl: ptr lapack_complex_float; d: ptr lapack_complex_float;                         du: ptr lapack_complex_float;                         du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                       anorm: ptr cfloat; rcond: ptr cfloat;                         work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zgtcon*(norm: cstring; n: ptr lapack_int;                       dl: ptr lapack_complex_double;                       d: ptr lapack_complex_double;                       du: ptr lapack_complex_double;                       du2: ptr lapack_complex_double; ipiv: ptr lapack_int;                       anorm: ptr cdouble; rcond: ptr cdouble;                         work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_spocon*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; anorm: ptr cfloat; rcond: ptr cfloat;                         work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dpocon*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; anorm: ptr cdouble;                         rcond: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cpocon*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       anorm: ptr cfloat; rcond: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zpocon*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       anorm: ptr cdouble; rcond: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sppcon*(uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         anorm: ptr cfloat; rcond: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dppcon*(uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         anorm: ptr cdouble; rcond: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cppcon*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; anorm: ptr cfloat;                         rcond: ptr cfloat; work: ptr lapack_complex_float;                         rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zppcon*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; anorm: ptr cdouble;                         rcond: ptr cdouble; work: ptr lapack_complex_double;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_spbcon*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr cfloat; ldab: ptr lapack_int; anorm: ptr cfloat;                         rcond: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dpbcon*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr cdouble; ldab: ptr lapack_int; anorm: ptr cdouble;                         rcond: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cpbcon*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       anorm: ptr cfloat; rcond: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zpbcon*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       anorm: ptr cdouble; rcond: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sptcon*(n: ptr lapack_int; d: ptr cfloat; e: ptr cfloat;                         anorm: ptr cfloat; rcond: ptr cfloat; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dptcon*(n: ptr lapack_int; d: ptr cdouble; e: ptr cdouble;                         anorm: ptr cdouble; rcond: ptr cdouble; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cptcon*(n: ptr lapack_int; d: ptr cfloat;                         e: ptr lapack_complex_float; anorm: ptr cfloat;                         rcond: ptr cfloat; work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zptcon*(n: ptr lapack_int; d: ptr cdouble;                         e: ptr lapack_complex_double; anorm: ptr cdouble;                         rcond: ptr cdouble; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_ssycon*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       anorm: ptr cfloat; rcond: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsycon*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       anorm: ptr cdouble; rcond: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_csycon*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; anorm: ptr cfloat;                         rcond: ptr cfloat; work: ptr lapack_complex_float;                         info: ptr lapack_int)
    proc LAPACK_zsycon*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; anorm: ptr cdouble;                         rcond: ptr cdouble; work: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_checon*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; anorm: ptr cfloat;                         rcond: ptr cfloat; work: ptr lapack_complex_float;                         info: ptr lapack_int)
    proc LAPACK_zhecon*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; anorm: ptr cdouble;                         rcond: ptr cdouble; work: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_sspcon*(uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         ipiv: ptr lapack_int; anorm: ptr cfloat;                         rcond: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dspcon*(uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         ipiv: ptr lapack_int; anorm: ptr cdouble;                         rcond: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cspcon*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                       anorm: ptr cfloat; rcond: ptr cfloat;                         work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zspcon*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                       anorm: ptr cdouble; rcond: ptr cdouble;                         work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_chpcon*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                       anorm: ptr cfloat; rcond: ptr cfloat;                         work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zhpcon*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                       anorm: ptr cdouble; rcond: ptr cdouble;                         work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_strcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       rcond: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dtrcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       rcond: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctrcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; rcond: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_ztrcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; rcond: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_stpcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; ap: ptr cfloat; rcond: ptr cfloat;                         work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtpcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; ap: ptr cdouble; rcond: ptr cdouble;                         work: ptr cdouble; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ctpcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; ap: ptr lapack_complex_float;                         rcond: ptr cfloat; work: ptr lapack_complex_float;                         rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ztpcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; ap: ptr lapack_complex_double;                       rcond: ptr cdouble; work: ptr lapack_complex_double;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_stbcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; rcond: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dtbcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; rcond: ptr cdouble;                         work: ptr cdouble; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ctbcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       rcond: ptr cfloat; work: ptr lapack_complex_float;                         rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ztbcon*(norm: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       rcond: ptr cdouble; work: ptr lapack_complex_double;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sgerfs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; af: ptr cfloat;                         ldaf: ptr lapack_int; ipiv: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; x: ptr cfloat; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgerfs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; af: ptr cdouble;                         ldaf: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                         ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr cdouble; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cgerfs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       af: ptr lapack_complex_float; ldaf: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; x: ptr lapack_complex_float;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgerfs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       af: ptr lapack_complex_double; ldaf: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; x: ptr lapack_complex_double;                       ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_dgerfsx*(trans: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; af: ptr cdouble;                          ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        r: ptr cdouble; c: ptr cdouble; b: ptr cdouble;                          ldb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                        rcond: ptr cdouble; berr: ptr cdouble;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cdouble;                          err_bnds_comp: ptr cdouble; nparams: ptr lapack_int;                        params: ptr cdouble; work: ptr cdouble;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgerfsx*(trans: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                        af: ptr cfloat; ldaf: ptr lapack_int;                        ipiv: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                          b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                          ldx: ptr lapack_int; rcond: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr cfloat;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgerfsx*(trans: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_double;                        lda: ptr lapack_int; af: ptr lapack_complex_double;                        ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        r: ptr cdouble; c: ptr cdouble;                          b: ptr lapack_complex_double; ldb: ptr lapack_int;                        x: ptr lapack_complex_double; ldx: ptr lapack_int;                        rcond: ptr cdouble; berr: ptr cdouble;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cdouble;                          err_bnds_comp: ptr cdouble; nparams: ptr lapack_int;                        params: ptr cdouble; work: ptr lapack_complex_double;                        rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cgerfsx*(trans: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_float;                          lda: ptr lapack_int; af: ptr lapack_complex_float;                          ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        r: ptr cfloat; c: ptr cfloat;                          b: ptr lapack_complex_float; ldb: ptr lapack_int;                        x: ptr lapack_complex_float; ldx: ptr lapack_int;                        rcond: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr lapack_complex_float;                          rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_sgbrfs*(trans: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; nrhs: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; afb: ptr cfloat;                         ldafb: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgbrfs*(trans: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; nrhs: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; afb: ptr cdouble;                         ldafb: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                         ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr cdouble; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cgbrfs*(trans: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; nrhs: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       afb: ptr lapack_complex_float; ldafb: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; x: ptr lapack_complex_float;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgbrfs*(trans: cstring; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; nrhs: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       afb: ptr lapack_complex_double; ldafb: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; x: ptr lapack_complex_double;                       ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_dgbrfsx*(trans: cstring; equed: cstring; n: ptr lapack_int;                        kl: ptr lapack_int; ku: ptr lapack_int;                        nrhs: ptr lapack_int; ab: ptr cdouble;                          ldab: ptr lapack_int; afb: ptr cdouble;                          ldafb: ptr lapack_int; ipiv: ptr lapack_int;                        r: ptr cdouble; c: ptr cdouble; b: ptr cdouble;                          ldb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                        rcond: ptr cdouble; berr: ptr cdouble;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cdouble;                          err_bnds_comp: ptr cdouble; nparams: ptr lapack_int;                        params: ptr cdouble; work: ptr cdouble;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgbrfsx*(trans: cstring; equed: cstring; n: ptr lapack_int;                        kl: ptr lapack_int; ku: ptr lapack_int;                        nrhs: ptr lapack_int; ab: ptr cfloat;                          ldab: ptr lapack_int; afb: ptr cfloat;                          ldafb: ptr lapack_int; ipiv: ptr lapack_int;                        r: ptr cfloat; c: ptr cfloat; b: ptr cfloat;                          ldb: ptr lapack_int; x: ptr cfloat; ldx: ptr lapack_int;                        rcond: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr cfloat;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgbrfsx*(trans: cstring; equed: cstring; n: ptr lapack_int;                        kl: ptr lapack_int; ku: ptr lapack_int;                        nrhs: ptr lapack_int; ab: ptr lapack_complex_double;                        ldab: ptr lapack_int; afb: ptr lapack_complex_double;                        ldafb: ptr lapack_int; ipiv: ptr lapack_int;                        r: ptr cdouble; c: ptr cdouble;                          b: ptr lapack_complex_double; ldb: ptr lapack_int;                        x: ptr lapack_complex_double; ldx: ptr lapack_int;                        rcond: ptr cdouble; berr: ptr cdouble;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cdouble;                          err_bnds_comp: ptr cdouble; nparams: ptr lapack_int;                        params: ptr cdouble; work: ptr lapack_complex_double;                        rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cgbrfsx*(trans: cstring; equed: cstring; n: ptr lapack_int;                        kl: ptr lapack_int; ku: ptr lapack_int;                        nrhs: ptr lapack_int; ab: ptr lapack_complex_float;                          ldab: ptr lapack_int; afb: ptr lapack_complex_float;                          ldafb: ptr lapack_int; ipiv: ptr lapack_int;                        r: ptr cfloat; c: ptr cfloat;                          b: ptr lapack_complex_float; ldb: ptr lapack_int;                        x: ptr lapack_complex_float; ldx: ptr lapack_int;                        rcond: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr lapack_complex_float;                          rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_sgtrfs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       dl: ptr cfloat; d: ptr cfloat; du: ptr cfloat;                         dlf: ptr cfloat; df: ptr cfloat; duf: ptr cfloat;                         du2: ptr cfloat; ipiv: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; x: ptr cfloat; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgtrfs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       dl: ptr cdouble; d: ptr cdouble; du: ptr cdouble;                         dlf: ptr cdouble; df: ptr cdouble; duf: ptr cdouble;                         du2: ptr cdouble; ipiv: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgtrfs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       dl: ptr lapack_complex_float; d: ptr lapack_complex_float;                         du: ptr lapack_complex_float;                         dlf: ptr lapack_complex_float;                         df: ptr lapack_complex_float;                         duf: ptr lapack_complex_float;                         du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgtrfs*(trans: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       dl: ptr lapack_complex_double;                       d: ptr lapack_complex_double;                       du: ptr lapack_complex_double;                       dlf: ptr lapack_complex_double;                       df: ptr lapack_complex_double;                       duf: ptr lapack_complex_double;                       du2: ptr lapack_complex_double; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sporfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; af: ptr cfloat;                         ldaf: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       x: ptr cfloat; ldx: ptr lapack_int; ferr: ptr cfloat;                         berr: ptr cfloat; work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dporfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; af: ptr cdouble;                         ldaf: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       x: ptr cdouble; ldx: ptr lapack_int; ferr: ptr cdouble;                         berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cporfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       af: ptr lapack_complex_float; ldaf: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zporfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       af: ptr lapack_complex_double; ldaf: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_dporfsx*(uplo: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; af: ptr cdouble;                          ldaf: ptr lapack_int; s: ptr cdouble; b: ptr cdouble;                          ldb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                        rcond: ptr cdouble; berr: ptr cdouble;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cdouble;                          err_bnds_comp: ptr cdouble; nparams: ptr lapack_int;                        params: ptr cdouble; work: ptr cdouble;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sporfsx*(uplo: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                        af: ptr cfloat; ldaf: ptr lapack_int; s: ptr cfloat;                          b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                          ldx: ptr lapack_int; rcond: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr cfloat;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zporfsx*(uplo: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_double;                        lda: ptr lapack_int; af: ptr lapack_complex_double;                        ldaf: ptr lapack_int; s: ptr cdouble;                          b: ptr lapack_complex_double; ldb: ptr lapack_int;                        x: ptr lapack_complex_double; ldx: ptr lapack_int;                        rcond: ptr cdouble; berr: ptr cdouble;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cdouble;                          err_bnds_comp: ptr cdouble; nparams: ptr lapack_int;                        params: ptr cdouble; work: ptr lapack_complex_double;                        rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cporfsx*(uplo: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_float;                          lda: ptr lapack_int; af: ptr lapack_complex_float;                          ldaf: ptr lapack_int; s: ptr cfloat;                          b: ptr lapack_complex_float; ldb: ptr lapack_int;                        x: ptr lapack_complex_float; ldx: ptr lapack_int;                        rcond: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr lapack_complex_float;                          rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_spprfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr cfloat; afp: ptr cfloat; b: ptr cfloat;                         ldb: ptr lapack_int; x: ptr cfloat; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dpprfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr cdouble; afp: ptr cdouble; b: ptr cdouble;                         ldb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cpprfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_float;                         afp: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zpprfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_double;                       afp: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_spbrfs*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; afb: ptr cfloat;                         ldafb: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       x: ptr cfloat; ldx: ptr lapack_int; ferr: ptr cfloat;                         berr: ptr cfloat; work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dpbrfs*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; afb: ptr cdouble;                         ldafb: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cpbrfs*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; afb: ptr lapack_complex_float;                         ldafb: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; x: ptr lapack_complex_float;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zpbrfs*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; afb: ptr lapack_complex_double;                       ldafb: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; x: ptr lapack_complex_double;                       ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sptrfs*(n: ptr lapack_int; nrhs: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; df: ptr cfloat; ef: ptr cfloat;                         b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dptrfs*(n: ptr lapack_int; nrhs: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; df: ptr cdouble; ef: ptr cdouble;                         b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                         ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cptrfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       d: ptr cfloat; e: ptr lapack_complex_float;                         df: ptr cfloat; ef: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zptrfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       d: ptr cdouble; e: ptr lapack_complex_double;                       df: ptr cdouble; ef: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_ssyrfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; af: ptr cfloat;                         ldaf: ptr lapack_int; ipiv: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; x: ptr cfloat; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsyrfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; af: ptr cdouble;                         ldaf: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                         ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr cdouble; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_csyrfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       af: ptr lapack_complex_float; ldaf: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; x: ptr lapack_complex_float;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zsyrfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       af: ptr lapack_complex_double; ldaf: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; x: ptr lapack_complex_double;                       ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_dsyrfsx*(uplo: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; af: ptr cdouble;                          ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        s: ptr cdouble; b: ptr cdouble; ldb: ptr lapack_int;                        x: ptr cdouble; ldx: ptr lapack_int; rcond: ptr cdouble;                          berr: ptr cdouble; n_err_bnds: ptr lapack_int;                        err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                          nparams: ptr lapack_int; params: ptr cdouble;                          work: ptr cdouble; iwork: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_ssyrfsx*(uplo: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                        af: ptr cfloat; ldaf: ptr lapack_int;                        ipiv: ptr lapack_int; s: ptr cfloat; b: ptr cfloat;                          ldb: ptr lapack_int; x: ptr cfloat; ldx: ptr lapack_int;                        rcond: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr cfloat;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zsyrfsx*(uplo: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_double;                        lda: ptr lapack_int; af: ptr lapack_complex_double;                        ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        s: ptr cdouble; b: ptr lapack_complex_double;                        ldb: ptr lapack_int; x: ptr lapack_complex_double;                        ldx: ptr lapack_int; rcond: ptr cdouble;                          berr: ptr cdouble; n_err_bnds: ptr lapack_int;                        err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                          nparams: ptr lapack_int; params: ptr cdouble;                          work: ptr lapack_complex_double; rwork: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_csyrfsx*(uplo: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_float;                          lda: ptr lapack_int; af: ptr lapack_complex_float;                          ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        s: ptr cfloat; b: ptr lapack_complex_float;                          ldb: ptr lapack_int; x: ptr lapack_complex_float;                          ldx: ptr lapack_int; rcond: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr lapack_complex_float;                          rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_cherfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       af: ptr lapack_complex_float; ldaf: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; x: ptr lapack_complex_float;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zherfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       af: ptr lapack_complex_double; ldaf: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; x: ptr lapack_complex_double;                       ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_zherfsx*(uplo: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_double;                        lda: ptr lapack_int; af: ptr lapack_complex_double;                        ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        s: ptr cdouble; b: ptr lapack_complex_double;                        ldb: ptr lapack_int; x: ptr lapack_complex_double;                        ldx: ptr lapack_int; rcond: ptr cdouble;                          berr: ptr cdouble; n_err_bnds: ptr lapack_int;                        err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                          nparams: ptr lapack_int; params: ptr cdouble;                          work: ptr lapack_complex_double; rwork: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_cherfsx*(uplo: cstring; equed: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_float;                          lda: ptr lapack_int; af: ptr lapack_complex_float;                          ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        s: ptr cfloat; b: ptr lapack_complex_float;                          ldb: ptr lapack_int; x: ptr lapack_complex_float;                          ldx: ptr lapack_int; rcond: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr lapack_complex_float;                          rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ssprfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr cfloat; afp: ptr cfloat; ipiv: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dsprfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr cdouble; afp: ptr cdouble; ipiv: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                         ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr cdouble; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_csprfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_float;                         afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zsprfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_double;                       afp: ptr lapack_complex_double; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_chprfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_float;                         afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zhprfs*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_double;                       afp: ptr lapack_complex_double; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_strrfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       x: ptr cfloat; ldx: ptr lapack_int; ferr: ptr cfloat;                         berr: ptr cfloat; work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtrrfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       x: ptr cdouble; ldx: ptr lapack_int; ferr: ptr cdouble;                         berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctrrfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_ztrrfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_stprfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int; ap: ptr cfloat;                         b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtprfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int; ap: ptr cdouble;                         b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                         ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr cdouble; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ctprfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_float; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; x: ptr lapack_complex_float;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_ztprfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; nrhs: ptr lapack_int;                       ap: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_stbrfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       x: ptr cfloat; ldx: ptr lapack_int; ferr: ptr cfloat;                         berr: ptr cfloat; work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtbrfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       x: ptr cdouble; ldx: ptr lapack_int; ferr: ptr cdouble;                         berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctbrfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; x: ptr lapack_complex_float;                         ldx: ptr lapack_int; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_ztbrfs*(uplo: cstring; trans: cstring; diag: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; x: ptr lapack_complex_double;                       ldx: ptr lapack_int; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sgetri*(n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       ipiv: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgetri*(n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       ipiv: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgetri*(n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgetri*(n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; ipiv: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_spotri*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dpotri*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cpotri*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zpotri*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dpftri*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_spftri*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zpftri*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_cpftri*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_spptri*(uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dpptri*(uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cpptri*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zpptri*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_ssytri*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dsytri*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_csytri*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; work: ptr lapack_complex_float;                         info: ptr lapack_int)
    proc LAPACK_zsytri*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; work: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_chetri*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; work: ptr lapack_complex_float;                         info: ptr lapack_int)
    proc LAPACK_zhetri*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; work: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_ssptri*(uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         ipiv: ptr lapack_int; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dsptri*(uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         ipiv: ptr lapack_int; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_csptri*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                       work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zsptri*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                       work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_chptri*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                       work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zhptri*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                       work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_strtri*(uplo: cstring; diag: cstring; n: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dtrtri*(uplo: cstring; diag: cstring; n: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctrtri*(uplo: cstring; diag: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ztrtri*(uplo: cstring; diag: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtftri*(transr: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; a: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_stftri*(transr: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; a: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ztftri*(transr: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_ctftri*(transr: cstring; uplo: cstring; diag: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_float;                         info: ptr lapack_int)
    proc LAPACK_stptri*(uplo: cstring; diag: cstring; n: ptr lapack_int;                       ap: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dtptri*(uplo: cstring; diag: cstring; n: ptr lapack_int;                       ap: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_ctptri*(uplo: cstring; diag: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_ztptri*(uplo: cstring; diag: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_sgeequ*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                         rowcnd: ptr cfloat; colcnd: ptr cfloat; amax: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dgeequ*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; r: ptr cdouble; c: ptr cdouble;                         rowcnd: ptr cdouble; colcnd: ptr cdouble;                         amax: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cgeequ*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                         colcnd: ptr cfloat; amax: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zgeequ*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       r: ptr cdouble; c: ptr cdouble; rowcnd: ptr cdouble;                         colcnd: ptr cdouble; amax: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_dgeequb*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; r: ptr cdouble; c: ptr cdouble;                          rowcnd: ptr cdouble; colcnd: ptr cdouble;                          amax: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sgeequb*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                          lda: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                          rowcnd: ptr cfloat; colcnd: ptr cfloat; amax: ptr cfloat;                          info: ptr lapack_int)
    proc LAPACK_zgeequb*(m: ptr lapack_int; n: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        r: ptr cdouble; c: ptr cdouble; rowcnd: ptr cdouble;                          colcnd: ptr cdouble; amax: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_cgeequb*(m: ptr lapack_int; n: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                          colcnd: ptr cfloat; amax: ptr cfloat;                          info: ptr lapack_int)
    proc LAPACK_sgbequ*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr cfloat; ldab: ptr lapack_int;                       r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                         colcnd: ptr cfloat; amax: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dgbequ*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr cdouble; ldab: ptr lapack_int;                       r: ptr cdouble; c: ptr cdouble; rowcnd: ptr cdouble;                         colcnd: ptr cdouble; amax: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cgbequ*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                         rowcnd: ptr cfloat; colcnd: ptr cfloat; amax: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgbequ*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; r: ptr cdouble; c: ptr cdouble;                         rowcnd: ptr cdouble; colcnd: ptr cdouble;                         amax: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_dgbequb*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                        ku: ptr lapack_int; ab: ptr cdouble;                          ldab: ptr lapack_int; r: ptr cdouble; c: ptr cdouble;                          rowcnd: ptr cdouble; colcnd: ptr cdouble;                          amax: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sgbequb*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                        ku: ptr lapack_int; ab: ptr cfloat; ldab: ptr lapack_int;                        r: ptr cfloat; c: ptr cfloat; rowcnd: ptr cfloat;                          colcnd: ptr cfloat; amax: ptr cfloat;                          info: ptr lapack_int)
    proc LAPACK_zgbequb*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                        ku: ptr lapack_int; ab: ptr lapack_complex_double;                        ldab: ptr lapack_int; r: ptr cdouble; c: ptr cdouble;                          rowcnd: ptr cdouble; colcnd: ptr cdouble;                          amax: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cgbequb*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                        ku: ptr lapack_int; ab: ptr lapack_complex_float;                          ldab: ptr lapack_int; r: ptr cfloat; c: ptr cfloat;                          rowcnd: ptr cfloat; colcnd: ptr cfloat; amax: ptr cfloat;                          info: ptr lapack_int)
    proc LAPACK_spoequ*(n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dpoequ*(n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cpoequ*(n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; s: ptr cfloat; scond: ptr cfloat;                         amax: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zpoequ*(n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; s: ptr cdouble; scond: ptr cdouble;                         amax: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_dpoequb*(n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                        s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_spoequb*(n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                        s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat;                          info: ptr lapack_int)
    proc LAPACK_zpoequb*(n: ptr lapack_int; a: ptr lapack_complex_double;                        lda: ptr lapack_int; s: ptr cdouble; scond: ptr cdouble;                          amax: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cpoequb*(n: ptr lapack_int; a: ptr lapack_complex_float;                          lda: ptr lapack_int; s: ptr cfloat; scond: ptr cfloat;                          amax: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_sppequ*(uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dppequ*(uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cppequ*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; s: ptr cfloat;                         scond: ptr cfloat; amax: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zppequ*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; s: ptr cdouble;                         scond: ptr cdouble; amax: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_spbequ*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr cfloat; ldab: ptr lapack_int; s: ptr cfloat;                         scond: ptr cfloat; amax: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dpbequ*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr cdouble; ldab: ptr lapack_int; s: ptr cdouble;                         scond: ptr cdouble; amax: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cpbequ*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zpbequ*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_dsyequb*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; s: ptr cdouble; scond: ptr cdouble;                          amax: ptr cdouble; work: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_ssyequb*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                          lda: ptr lapack_int; s: ptr cfloat; scond: ptr cfloat;                          amax: ptr cfloat; work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zsyequb*(uplo: cstring; n: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble;                          work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_csyequb*(uplo: cstring; n: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat;                          work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zheequb*(uplo: cstring; n: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        s: ptr cdouble; scond: ptr cdouble; amax: ptr cdouble;                          work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_cheequb*(uplo: cstring; n: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        s: ptr cfloat; scond: ptr cfloat; amax: ptr cfloat;                          work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_sgesv*(n: ptr lapack_int; nrhs: ptr lapack_int; a: ptr cfloat;                        lda: ptr lapack_int; ipiv: ptr lapack_int; b: ptr cfloat;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgesv*(n: ptr lapack_int; nrhs: ptr lapack_int; a: ptr cdouble;                        lda: ptr lapack_int; ipiv: ptr lapack_int; b: ptr cdouble;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgesv*(n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr lapack_complex_float; lda: ptr lapack_int;                      ipiv: ptr lapack_int; b: ptr lapack_complex_float;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgesv*(n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr lapack_complex_double; lda: ptr lapack_int;                      ipiv: ptr lapack_int; b: ptr lapack_complex_double;                      ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsgesv*(n: ptr lapack_int; nrhs: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; ipiv: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                       work: ptr cdouble; swork: ptr cfloat;                         iter: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zcgesv*(n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; x: ptr lapack_complex_double;                       ldx: ptr lapack_int; work: ptr lapack_complex_double;                       swork: ptr lapack_complex_float; rwork: ptr cdouble;                         iter: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgesvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       af: ptr cfloat; ldaf: ptr lapack_int;                       ipiv: ptr lapack_int; equed: cstring; r: ptr cfloat;                         c: ptr cfloat; b: ptr cfloat; ldb: ptr lapack_int;                       x: ptr cfloat; ldx: ptr lapack_int; rcond: ptr cfloat;                         ferr: ptr cfloat; berr: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgesvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       af: ptr cdouble; ldaf: ptr lapack_int;                       ipiv: ptr lapack_int; equed: cstring; r: ptr cdouble;                         c: ptr cdouble; b: ptr cdouble; ldb: ptr lapack_int;                       x: ptr cdouble; ldx: ptr lapack_int; rcond: ptr cdouble;                         ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgesvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; af: ptr lapack_complex_float;                         ldaf: ptr lapack_int; ipiv: ptr lapack_int;                       equed: cstring; r: ptr cfloat; c: ptr cfloat;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgesvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; af: ptr lapack_complex_double;                       ldaf: ptr lapack_int; ipiv: ptr lapack_int;                       equed: cstring; r: ptr cdouble; c: ptr cdouble;                         b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_dgesvxx*(fact: cstring; trans: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; af: ptr cdouble;                          ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; r: ptr cdouble; c: ptr cdouble;                          b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                          ldx: ptr lapack_int; rcond: ptr cdouble;                          rpvgrw: ptr cdouble; berr: ptr cdouble;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cdouble;                          err_bnds_comp: ptr cdouble; nparams: ptr lapack_int;                        params: ptr cdouble; work: ptr cdouble;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgesvxx*(fact: cstring; trans: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                        af: ptr cfloat; ldaf: ptr lapack_int;                        ipiv: ptr lapack_int; equed: cstring; r: ptr cfloat;                          c: ptr cfloat; b: ptr cfloat; ldb: ptr lapack_int;                        x: ptr cfloat; ldx: ptr lapack_int; rcond: ptr cfloat;                          rpvgrw: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr cfloat;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgesvxx*(fact: cstring; trans: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_double;                        lda: ptr lapack_int; af: ptr lapack_complex_double;                        ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; r: ptr cdouble; c: ptr cdouble;                          b: ptr lapack_complex_double; ldb: ptr lapack_int;                        x: ptr lapack_complex_double; ldx: ptr lapack_int;                        rcond: ptr cdouble; rpvgrw: ptr cdouble;                          berr: ptr cdouble; n_err_bnds: ptr lapack_int;                        err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                          nparams: ptr lapack_int; params: ptr cdouble;                          work: ptr lapack_complex_double; rwork: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_cgesvxx*(fact: cstring; trans: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_float;                          lda: ptr lapack_int; af: ptr lapack_complex_float;                          ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; r: ptr cfloat; c: ptr cfloat;                          b: ptr lapack_complex_float; ldb: ptr lapack_int;                        x: ptr lapack_complex_float; ldx: ptr lapack_int;                        rcond: ptr cfloat; rpvgrw: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr lapack_complex_float;                          rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_sgbsv*(n: ptr lapack_int; kl: ptr lapack_int; ku: ptr lapack_int;                      nrhs: ptr lapack_int; ab: ptr cfloat; ldab: ptr lapack_int;                      ipiv: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_dgbsv*(n: ptr lapack_int; kl: ptr lapack_int; ku: ptr lapack_int;                      nrhs: ptr lapack_int; ab: ptr cdouble;                        ldab: ptr lapack_int; ipiv: ptr lapack_int; b: ptr cdouble;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgbsv*(n: ptr lapack_int; kl: ptr lapack_int; ku: ptr lapack_int;                      nrhs: ptr lapack_int; ab: ptr lapack_complex_float;                        ldab: ptr lapack_int; ipiv: ptr lapack_int;                      b: ptr lapack_complex_float; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_zgbsv*(n: ptr lapack_int; kl: ptr lapack_int; ku: ptr lapack_int;                      nrhs: ptr lapack_int; ab: ptr lapack_complex_double;                      ldab: ptr lapack_int; ipiv: ptr lapack_int;                      b: ptr lapack_complex_double; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_sgbsvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       kl: ptr lapack_int; ku: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; afb: ptr cfloat;                         ldafb: ptr lapack_int; ipiv: ptr lapack_int;                       equed: cstring; r: ptr cfloat; c: ptr cfloat;                         b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                         ldx: ptr lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                         berr: ptr cfloat; work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgbsvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       kl: ptr lapack_int; ku: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; afb: ptr cdouble;                         ldafb: ptr lapack_int; ipiv: ptr lapack_int;                       equed: cstring; r: ptr cdouble; c: ptr cdouble;                         b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                         ldx: ptr lapack_int; rcond: ptr cdouble;                         ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgbsvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       kl: ptr lapack_int; ku: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; afb: ptr lapack_complex_float;                         ldafb: ptr lapack_int; ipiv: ptr lapack_int;                       equed: cstring; r: ptr cfloat; c: ptr cfloat;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgbsvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       kl: ptr lapack_int; ku: ptr lapack_int;                       nrhs: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; afb: ptr lapack_complex_double;                       ldafb: ptr lapack_int; ipiv: ptr lapack_int;                       equed: cstring; r: ptr cdouble; c: ptr cdouble;                         b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_dgbsvxx*(fact: cstring; trans: cstring; n: ptr lapack_int;                        kl: ptr lapack_int; ku: ptr lapack_int;                        nrhs: ptr lapack_int; ab: ptr cdouble;                          ldab: ptr lapack_int; afb: ptr cdouble;                          ldafb: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; r: ptr cdouble; c: ptr cdouble;                          b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                          ldx: ptr lapack_int; rcond: ptr cdouble;                          rpvgrw: ptr cdouble; berr: ptr cdouble;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cdouble;                          err_bnds_comp: ptr cdouble; nparams: ptr lapack_int;                        params: ptr cdouble; work: ptr cdouble;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgbsvxx*(fact: cstring; trans: cstring; n: ptr lapack_int;                        kl: ptr lapack_int; ku: ptr lapack_int;                        nrhs: ptr lapack_int; ab: ptr cfloat;                          ldab: ptr lapack_int; afb: ptr cfloat;                          ldafb: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; r: ptr cfloat; c: ptr cfloat;                          b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                          ldx: ptr lapack_int; rcond: ptr cfloat;                          rpvgrw: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr cfloat;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgbsvxx*(fact: cstring; trans: cstring; n: ptr lapack_int;                        kl: ptr lapack_int; ku: ptr lapack_int;                        nrhs: ptr lapack_int; ab: ptr lapack_complex_double;                        ldab: ptr lapack_int; afb: ptr lapack_complex_double;                        ldafb: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; r: ptr cdouble; c: ptr cdouble;                          b: ptr lapack_complex_double; ldb: ptr lapack_int;                        x: ptr lapack_complex_double; ldx: ptr lapack_int;                        rcond: ptr cdouble; rpvgrw: ptr cdouble;                          berr: ptr cdouble; n_err_bnds: ptr lapack_int;                        err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                          nparams: ptr lapack_int; params: ptr cdouble;                          work: ptr lapack_complex_double; rwork: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_cgbsvxx*(fact: cstring; trans: cstring; n: ptr lapack_int;                        kl: ptr lapack_int; ku: ptr lapack_int;                        nrhs: ptr lapack_int; ab: ptr lapack_complex_float;                          ldab: ptr lapack_int; afb: ptr lapack_complex_float;                          ldafb: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; r: ptr cfloat; c: ptr cfloat;                          b: ptr lapack_complex_float; ldb: ptr lapack_int;                        x: ptr lapack_complex_float; ldx: ptr lapack_int;                        rcond: ptr cfloat; rpvgrw: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr lapack_complex_float;                          rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_sgtsv*(n: ptr lapack_int; nrhs: ptr lapack_int; dl: ptr cfloat;                        d: ptr cfloat; du: ptr cfloat; b: ptr cfloat;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgtsv*(n: ptr lapack_int; nrhs: ptr lapack_int; dl: ptr cdouble;                        d: ptr cdouble; du: ptr cdouble; b: ptr cdouble;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgtsv*(n: ptr lapack_int; nrhs: ptr lapack_int;                      dl: ptr lapack_complex_float; d: ptr lapack_complex_float;                        du: ptr lapack_complex_float; b: ptr lapack_complex_float;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgtsv*(n: ptr lapack_int; nrhs: ptr lapack_int;                      dl: ptr lapack_complex_double;                      d: ptr lapack_complex_double;                      du: ptr lapack_complex_double;                      b: ptr lapack_complex_double; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_sgtsvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; dl: ptr cfloat; d: ptr cfloat;                         du: ptr cfloat; dlf: ptr cfloat; df: ptr cfloat;                         duf: ptr cfloat; du2: ptr cfloat; ipiv: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                         ldx: ptr lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                         berr: ptr cfloat; work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgtsvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; dl: ptr cdouble; d: ptr cdouble;                         du: ptr cdouble; dlf: ptr cdouble; df: ptr cdouble;                         duf: ptr cdouble; du2: ptr cdouble; ipiv: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                         ldx: ptr lapack_int; rcond: ptr cdouble;                         ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgtsvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; dl: ptr lapack_complex_float;                         d: ptr lapack_complex_float; du: ptr lapack_complex_float;                         dlf: ptr lapack_complex_float;                         df: ptr lapack_complex_float;                         duf: ptr lapack_complex_float;                         du2: ptr lapack_complex_float; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgtsvx*(fact: cstring; trans: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; dl: ptr lapack_complex_double;                       d: ptr lapack_complex_double;                       du: ptr lapack_complex_double;                       dlf: ptr lapack_complex_double;                       df: ptr lapack_complex_double;                       duf: ptr lapack_complex_double;                       du2: ptr lapack_complex_double; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sposv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr cfloat; lda: ptr lapack_int; b: ptr cfloat;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dposv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cposv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr lapack_complex_float; lda: ptr lapack_int;                      b: ptr lapack_complex_float; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_zposv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr lapack_complex_double; lda: ptr lapack_int;                      b: ptr lapack_complex_double; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_dsposv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                       work: ptr cdouble; swork: ptr cfloat;                         iter: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zcposv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       work: ptr lapack_complex_double;                       swork: ptr lapack_complex_float; rwork: ptr cdouble;                         iter: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sposvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       af: ptr cfloat; ldaf: ptr lapack_int; equed: cstring;                        s: ptr cfloat; b: ptr cfloat; ldb: ptr lapack_int;                       x: ptr cfloat; ldx: ptr lapack_int; rcond: ptr cfloat;                         ferr: ptr cfloat; berr: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dposvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       af: ptr cdouble; ldaf: ptr lapack_int; equed: cstring;                        s: ptr cdouble; b: ptr cdouble; ldb: ptr lapack_int;                       x: ptr cdouble; ldx: ptr lapack_int; rcond: ptr cdouble;                         ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cposvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; af: ptr lapack_complex_float;                         ldaf: ptr lapack_int; equed: cstring; s: ptr cfloat;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zposvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; af: ptr lapack_complex_double;                       ldaf: ptr lapack_int; equed: cstring; s: ptr cdouble;                         b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_dposvxx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; af: ptr cdouble;                          ldaf: ptr lapack_int; equed: cstring; s: ptr cdouble;                          b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                          ldx: ptr lapack_int; rcond: ptr cdouble;                          rpvgrw: ptr cdouble; berr: ptr cdouble;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cdouble;                          err_bnds_comp: ptr cdouble; nparams: ptr lapack_int;                        params: ptr cdouble; work: ptr cdouble;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sposvxx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                        af: ptr cfloat; ldaf: ptr lapack_int; equed: cstring;                         s: ptr cfloat; b: ptr cfloat; ldb: ptr lapack_int;                        x: ptr cfloat; ldx: ptr lapack_int; rcond: ptr cfloat;                          rpvgrw: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr cfloat;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zposvxx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_double;                        lda: ptr lapack_int; af: ptr lapack_complex_double;                        ldaf: ptr lapack_int; equed: cstring; s: ptr cdouble;                          b: ptr lapack_complex_double; ldb: ptr lapack_int;                        x: ptr lapack_complex_double; ldx: ptr lapack_int;                        rcond: ptr cdouble; rpvgrw: ptr cdouble;                          berr: ptr cdouble; n_err_bnds: ptr lapack_int;                        err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                          nparams: ptr lapack_int; params: ptr cdouble;                          work: ptr lapack_complex_double; rwork: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_cposvxx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_float;                          lda: ptr lapack_int; af: ptr lapack_complex_float;                          ldaf: ptr lapack_int; equed: cstring; s: ptr cfloat;                          b: ptr lapack_complex_float; ldb: ptr lapack_int;                        x: ptr lapack_complex_float; ldx: ptr lapack_int;                        rcond: ptr cfloat; rpvgrw: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr lapack_complex_float;                          rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_sppsv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      ap: ptr cfloat; b: ptr cfloat; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_dppsv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      ap: ptr cdouble; b: ptr cdouble; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_cppsv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      ap: ptr lapack_complex_float; b: ptr lapack_complex_float;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zppsv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      ap: ptr lapack_complex_double;                      b: ptr lapack_complex_double; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_sppsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; ap: ptr cfloat; afp: ptr cfloat;                         equed: cstring; s: ptr cfloat; b: ptr cfloat;                         ldb: ptr lapack_int; x: ptr cfloat; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dppsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; ap: ptr cdouble; afp: ptr cdouble;                         equed: cstring; s: ptr cdouble; b: ptr cdouble;                         ldb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr cdouble; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cppsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; ap: ptr lapack_complex_float;                         afp: ptr lapack_complex_float; equed: cstring;                        s: ptr cfloat; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; x: ptr lapack_complex_float;                         ldx: ptr lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                         berr: ptr cfloat; work: ptr lapack_complex_float;                         rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zppsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; ap: ptr lapack_complex_double;                       afp: ptr lapack_complex_double; equed: cstring;                        s: ptr cdouble; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; x: ptr lapack_complex_double;                       ldx: ptr lapack_int; rcond: ptr cdouble;                         ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_spbsv*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                      nrhs: ptr lapack_int; ab: ptr cfloat; ldab: ptr lapack_int;                      b: ptr cfloat; ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dpbsv*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                      nrhs: ptr lapack_int; ab: ptr cdouble;                        ldab: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_cpbsv*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                      nrhs: ptr lapack_int; ab: ptr lapack_complex_float;                        ldab: ptr lapack_int; b: ptr lapack_complex_float;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zpbsv*(uplo: cstring; n: ptr lapack_int; kd: ptr lapack_int;                      nrhs: ptr lapack_int; ab: ptr lapack_complex_double;                      ldab: ptr lapack_int; b: ptr lapack_complex_double;                      ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_spbsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; nrhs: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; afb: ptr cfloat;                         ldafb: ptr lapack_int; equed: cstring; s: ptr cfloat;                         b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                         ldx: ptr lapack_int; rcond: ptr cfloat; ferr: ptr cfloat;                         berr: ptr cfloat; work: ptr cfloat; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dpbsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; nrhs: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; afb: ptr cdouble;                         ldafb: ptr lapack_int; equed: cstring; s: ptr cdouble;                         b: ptr cdouble; ldb: ptr lapack_int; x: ptr cdouble;                         ldx: ptr lapack_int; rcond: ptr cdouble;                         ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cpbsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; nrhs: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       afb: ptr lapack_complex_float; ldafb: ptr lapack_int;                       equed: cstring; s: ptr cfloat;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zpbsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; nrhs: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       afb: ptr lapack_complex_double; ldafb: ptr lapack_int;                       equed: cstring; s: ptr cdouble;                         b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sptsv*(n: ptr lapack_int; nrhs: ptr lapack_int; d: ptr cfloat;                        e: ptr cfloat; b: ptr cfloat; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_dptsv*(n: ptr lapack_int; nrhs: ptr lapack_int; d: ptr cdouble;                        e: ptr cdouble; b: ptr cdouble; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_cptsv*(n: ptr lapack_int; nrhs: ptr lapack_int; d: ptr cfloat;                        e: ptr lapack_complex_float; b: ptr lapack_complex_float;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zptsv*(n: ptr lapack_int; nrhs: ptr lapack_int; d: ptr cdouble;                        e: ptr lapack_complex_double; b: ptr lapack_complex_double;                      ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sptsvx*(fact: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat; df: ptr cfloat;                         ef: ptr cfloat; b: ptr cfloat; ldb: ptr lapack_int;                       x: ptr cfloat; ldx: ptr lapack_int; rcond: ptr cfloat;                         ferr: ptr cfloat; berr: ptr cfloat; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dptsvx*(fact: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble; df: ptr cdouble;                         ef: ptr cdouble; b: ptr cdouble; ldb: ptr lapack_int;                       x: ptr cdouble; ldx: ptr lapack_int; rcond: ptr cdouble;                         ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cptsvx*(fact: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       d: ptr cfloat; e: ptr lapack_complex_float;                         df: ptr cfloat; ef: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zptsvx*(fact: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                       d: ptr cdouble; e: ptr lapack_complex_double;                       df: ptr cdouble; ef: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_ssysv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr cfloat; lda: ptr lapack_int; ipiv: ptr lapack_int;                      b: ptr cfloat; ldb: ptr lapack_int; work: ptr cfloat;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsysv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr cdouble; lda: ptr lapack_int; ipiv: ptr lapack_int;                      b: ptr cdouble; ldb: ptr lapack_int; work: ptr cdouble;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_csysv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr lapack_complex_float; lda: ptr lapack_int;                      ipiv: ptr lapack_int; b: ptr lapack_complex_float;                        ldb: ptr lapack_int; work: ptr lapack_complex_float;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zsysv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr lapack_complex_double; lda: ptr lapack_int;                      ipiv: ptr lapack_int; b: ptr lapack_complex_double;                      ldb: ptr lapack_int; work: ptr lapack_complex_double;                      lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ssysvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       af: ptr cfloat; ldaf: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       x: ptr cfloat; ldx: ptr lapack_int; rcond: ptr cfloat;                         ferr: ptr cfloat; berr: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dsysvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       af: ptr cdouble; ldaf: ptr lapack_int;                       ipiv: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       x: ptr cdouble; ldx: ptr lapack_int; rcond: ptr cdouble;                         ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_csysvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; af: ptr lapack_complex_float;                         ldaf: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zsysvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; af: ptr lapack_complex_double;                       ldaf: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_dsysvxx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; af: ptr cdouble;                          ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; s: ptr cdouble; b: ptr cdouble;                          ldb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                        rcond: ptr cdouble; rpvgrw: ptr cdouble;                          berr: ptr cdouble; n_err_bnds: ptr lapack_int;                        err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                          nparams: ptr lapack_int; params: ptr cdouble;                          work: ptr cdouble; iwork: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_ssysvxx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                        af: ptr cfloat; ldaf: ptr lapack_int;                        ipiv: ptr lapack_int; equed: cstring; s: ptr cfloat;                          b: ptr cfloat; ldb: ptr lapack_int; x: ptr cfloat;                          ldx: ptr lapack_int; rcond: ptr cfloat;                          rpvgrw: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr cfloat;                          iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zsysvxx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_double;                        lda: ptr lapack_int; af: ptr lapack_complex_double;                        ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; s: ptr cdouble;                          b: ptr lapack_complex_double; ldb: ptr lapack_int;                        x: ptr lapack_complex_double; ldx: ptr lapack_int;                        rcond: ptr cdouble; rpvgrw: ptr cdouble;                          berr: ptr cdouble; n_err_bnds: ptr lapack_int;                        err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                          nparams: ptr lapack_int; params: ptr cdouble;                          work: ptr lapack_complex_double; rwork: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_csysvxx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_float;                          lda: ptr lapack_int; af: ptr lapack_complex_float;                          ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; s: ptr cfloat;                          b: ptr lapack_complex_float; ldb: ptr lapack_int;                        x: ptr lapack_complex_float; ldx: ptr lapack_int;                        rcond: ptr cfloat; rpvgrw: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr lapack_complex_float;                          rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_chesv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr lapack_complex_float; lda: ptr lapack_int;                      ipiv: ptr lapack_int; b: ptr lapack_complex_float;                        ldb: ptr lapack_int; work: ptr lapack_complex_float;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhesv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      a: ptr lapack_complex_double; lda: ptr lapack_int;                      ipiv: ptr lapack_int; b: ptr lapack_complex_double;                      ldb: ptr lapack_int; work: ptr lapack_complex_double;                      lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chesvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; af: ptr lapack_complex_float;                         ldaf: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zhesvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; af: ptr lapack_complex_double;                       ldaf: ptr lapack_int; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_zhesvxx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_double;                        lda: ptr lapack_int; af: ptr lapack_complex_double;                        ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; s: ptr cdouble;                          b: ptr lapack_complex_double; ldb: ptr lapack_int;                        x: ptr lapack_complex_double; ldx: ptr lapack_int;                        rcond: ptr cdouble; rpvgrw: ptr cdouble;                          berr: ptr cdouble; n_err_bnds: ptr lapack_int;                        err_bnds_norm: ptr cdouble; err_bnds_comp: ptr cdouble;                          nparams: ptr lapack_int; params: ptr cdouble;                          work: ptr lapack_complex_double; rwork: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_chesvxx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                        nrhs: ptr lapack_int; a: ptr lapack_complex_float;                          lda: ptr lapack_int; af: ptr lapack_complex_float;                          ldaf: ptr lapack_int; ipiv: ptr lapack_int;                        equed: cstring; s: ptr cfloat;                          b: ptr lapack_complex_float; ldb: ptr lapack_int;                        x: ptr lapack_complex_float; ldx: ptr lapack_int;                        rcond: ptr cfloat; rpvgrw: ptr cfloat; berr: ptr cfloat;                          n_err_bnds: ptr lapack_int; err_bnds_norm: ptr cfloat;                          err_bnds_comp: ptr cfloat; nparams: ptr lapack_int;                        params: ptr cfloat; work: ptr lapack_complex_float;                          rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_sspsv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      ap: ptr cfloat; ipiv: ptr lapack_int; b: ptr cfloat;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dspsv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      ap: ptr cdouble; ipiv: ptr lapack_int; b: ptr cdouble;                        ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cspsv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                      b: ptr lapack_complex_float; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_zspsv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                      b: ptr lapack_complex_double; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_sspsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; ap: ptr cfloat; afp: ptr cfloat;                         ipiv: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       x: ptr cfloat; ldx: ptr lapack_int; rcond: ptr cfloat;                         ferr: ptr cfloat; berr: ptr cfloat; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dspsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; ap: ptr cdouble; afp: ptr cdouble;                         ipiv: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       x: ptr cdouble; ldx: ptr lapack_int; rcond: ptr cdouble;                         ferr: ptr cdouble; berr: ptr cdouble; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cspsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; ap: ptr lapack_complex_float;                         afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zspsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; ap: ptr lapack_complex_double;                       afp: ptr lapack_complex_double; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_chpsv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      ap: ptr lapack_complex_float; ipiv: ptr lapack_int;                      b: ptr lapack_complex_float; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_zhpsv*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                      ap: ptr lapack_complex_double; ipiv: ptr lapack_int;                      b: ptr lapack_complex_double; ldb: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_chpsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; ap: ptr lapack_complex_float;                         afp: ptr lapack_complex_float; ipiv: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       rcond: ptr cfloat; ferr: ptr cfloat; berr: ptr cfloat;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zhpsvx*(fact: cstring; uplo: cstring; n: ptr lapack_int;                       nrhs: ptr lapack_int; ap: ptr lapack_complex_double;                       afp: ptr lapack_complex_double; ipiv: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       rcond: ptr cdouble; ferr: ptr cdouble; berr: ptr cdouble;                         work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sgeqrf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgeqrf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgeqrf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgeqrf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgeqpf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; jpvt: ptr lapack_int;                       tau: ptr cfloat; work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dgeqpf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; jpvt: ptr lapack_int;                       tau: ptr cdouble; work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cgeqpf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       jpvt: ptr lapack_int; tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgeqpf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       jpvt: ptr lapack_int; tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sgeqp3*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; jpvt: ptr lapack_int;                       tau: ptr cfloat; work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgeqp3*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; jpvt: ptr lapack_int;                       tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgeqp3*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       jpvt: ptr lapack_int; tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zgeqp3*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       jpvt: ptr lapack_int; tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sorgqr*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; tau: ptr cfloat;                         work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dorgqr*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; tau: ptr cdouble;                         work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sormqr*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; c: ptr cfloat;                         ldc: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dormqr*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; c: ptr cdouble;                         ldc: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cungqr*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zungqr*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cunmqr*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zunmqr*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgelqf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgelqf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgelqf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgelqf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sorglq*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; tau: ptr cfloat;                         work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dorglq*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; tau: ptr cdouble;                         work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sormlq*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; c: ptr cfloat;                         ldc: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dormlq*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; c: ptr cdouble;                         ldc: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cunglq*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zunglq*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cunmlq*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zunmlq*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgeqlf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgeqlf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgeqlf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgeqlf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sorgql*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; tau: ptr cfloat;                         work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dorgql*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; tau: ptr cdouble;                         work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cungql*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zungql*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sormql*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; c: ptr cfloat;                         ldc: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dormql*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; c: ptr cdouble;                         ldc: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cunmql*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zunmql*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgerqf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgerqf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgerqf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgerqf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sorgrq*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; tau: ptr cfloat;                         work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dorgrq*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; tau: ptr cdouble;                         work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cungrq*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zungrq*(m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sormrq*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; c: ptr cfloat;                         ldc: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dormrq*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; c: ptr cdouble;                         ldc: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cunmrq*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zunmrq*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_stzrzf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dtzrzf*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctzrzf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ztzrzf*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sormrz*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; l: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; tau: ptr cfloat;                         c: ptr cfloat; ldc: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dormrz*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; l: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; tau: ptr cdouble;                         c: ptr cdouble; ldc: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cunmrz*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; l: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zunmrz*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; k: ptr lapack_int; l: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sggqrf*(n: ptr lapack_int; m: ptr lapack_int; p: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; taua: ptr cfloat;                         b: ptr cfloat; ldb: ptr lapack_int; taub: ptr cfloat;                         work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dggqrf*(n: ptr lapack_int; m: ptr lapack_int; p: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; taua: ptr cdouble;                         b: ptr cdouble; ldb: ptr lapack_int; taub: ptr cdouble;                         work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cggqrf*(n: ptr lapack_int; m: ptr lapack_int; p: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       taua: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       taub: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zggqrf*(n: ptr lapack_int; m: ptr lapack_int; p: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       taua: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       taub: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sggrqf*(m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; taua: ptr cfloat;                         b: ptr cfloat; ldb: ptr lapack_int; taub: ptr cfloat;                         work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dggrqf*(m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; taua: ptr cdouble;                         b: ptr cdouble; ldb: ptr lapack_int; taub: ptr cdouble;                         work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cggrqf*(m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       taua: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       taub: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zggrqf*(m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       taua: ptr lapack_complex_double;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       taub: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgebrd*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; d: ptr cfloat; e: ptr cfloat;                         tauq: ptr cfloat; taup: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgebrd*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; d: ptr cdouble; e: ptr cdouble;                         tauq: ptr cdouble; taup: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgebrd*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat;                         tauq: ptr lapack_complex_float;                         taup: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgebrd*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble;                         tauq: ptr lapack_complex_double;                       taup: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgbbrd*(vect: cstring; m: ptr lapack_int; n: ptr lapack_int;                       ncc: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr cfloat; ldab: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat; q: ptr cfloat;                         ldq: ptr lapack_int; pt: ptr cfloat; ldpt: ptr lapack_int;                       c: ptr cfloat; ldc: ptr lapack_int; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dgbbrd*(vect: cstring; m: ptr lapack_int; n: ptr lapack_int;                       ncc: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr cdouble; ldab: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble; q: ptr cdouble;                         ldq: ptr lapack_int; pt: ptr cdouble;                         ldpt: ptr lapack_int; c: ptr cdouble; ldc: ptr lapack_int;                       work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cgbbrd*(vect: cstring; m: ptr lapack_int; n: ptr lapack_int;                       ncc: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; d: ptr cfloat; e: ptr cfloat;                         q: ptr lapack_complex_float; ldq: ptr lapack_int;                       pt: ptr lapack_complex_float; ldpt: ptr lapack_int;                       c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgbbrd*(vect: cstring; m: ptr lapack_int; n: ptr lapack_int;                       ncc: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; d: ptr cdouble; e: ptr cdouble;                         q: ptr lapack_complex_double; ldq: ptr lapack_int;                       pt: ptr lapack_complex_double; ldpt: ptr lapack_int;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sorgbr*(vect: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       tau: ptr cfloat; work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dorgbr*(vect: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sormbr*(vect: cstring; side: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; tau: ptr cfloat;                         c: ptr cfloat; ldc: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dormbr*(vect: cstring; side: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; tau: ptr cdouble;                         c: ptr cdouble; ldc: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cungbr*(vect: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zungbr*(vect: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cunmbr*(vect: cstring; side: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zunmbr*(vect: cstring; side: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int; k: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sbdsqr*(uplo: cstring; n: ptr lapack_int; ncvt: ptr lapack_int;                       nru: ptr lapack_int; ncc: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; vt: ptr cfloat; ldvt: ptr lapack_int;                       u: ptr cfloat; ldu: ptr lapack_int; c: ptr cfloat;                         ldc: ptr lapack_int; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dbdsqr*(uplo: cstring; n: ptr lapack_int; ncvt: ptr lapack_int;                       nru: ptr lapack_int; ncc: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; vt: ptr cdouble; ldvt: ptr lapack_int;                       u: ptr cdouble; ldu: ptr lapack_int; c: ptr cdouble;                         ldc: ptr lapack_int; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cbdsqr*(uplo: cstring; n: ptr lapack_int; ncvt: ptr lapack_int;                       nru: ptr lapack_int; ncc: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; vt: ptr lapack_complex_float;                         ldvt: ptr lapack_int; u: ptr lapack_complex_float;                         ldu: ptr lapack_int; c: ptr lapack_complex_float;                         ldc: ptr lapack_int; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zbdsqr*(uplo: cstring; n: ptr lapack_int; ncvt: ptr lapack_int;                       nru: ptr lapack_int; ncc: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; vt: ptr lapack_complex_double;                       ldvt: ptr lapack_int; u: ptr lapack_complex_double;                       ldu: ptr lapack_int; c: ptr lapack_complex_double;                       ldc: ptr lapack_int; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sbdsdc*(uplo: cstring; compq: cstring; n: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat; u: ptr cfloat;                         ldu: ptr lapack_int; vt: ptr cfloat; ldvt: ptr lapack_int;                       q: ptr cfloat; iq: ptr lapack_int; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dbdsdc*(uplo: cstring; compq: cstring; n: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble; u: ptr cdouble;                         ldu: ptr lapack_int; vt: ptr cdouble;                         ldvt: ptr lapack_int; q: ptr cdouble; iq: ptr lapack_int;                       work: ptr cdouble; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ssytrd*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; d: ptr cfloat; e: ptr cfloat;                         tau: ptr cfloat; work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dsytrd*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; d: ptr cdouble; e: ptr cdouble;                         tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sorgtr*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dorgtr*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sormtr*(side: cstring; uplo: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; c: ptr cfloat;                         ldc: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dormtr*(side: cstring; uplo: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; c: ptr cdouble;                         ldc: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chetrd*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat;                         tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zhetrd*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble;                         tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cungtr*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zungtr*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cunmtr*(side: cstring; uplo: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zunmtr*(side: cstring; uplo: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ssptrd*(uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         d: ptr cfloat; e: ptr cfloat; tau: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dsptrd*(uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         d: ptr cdouble; e: ptr cdouble; tau: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sopgtr*(uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         tau: ptr cfloat; q: ptr cfloat; ldq: ptr lapack_int;                       work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dopgtr*(uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         tau: ptr cdouble; q: ptr cdouble; ldq: ptr lapack_int;                       work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sopmtr*(side: cstring; uplo: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int; ap: ptr cfloat;                         tau: ptr cfloat; c: ptr cfloat; ldc: ptr lapack_int;                       work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dopmtr*(side: cstring; uplo: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int; ap: ptr cdouble;                         tau: ptr cdouble; c: ptr cdouble; ldc: ptr lapack_int;                       work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_chptrd*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; d: ptr cfloat;                         e: ptr cfloat; tau: ptr lapack_complex_float;                         info: ptr lapack_int)
    proc LAPACK_zhptrd*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; d: ptr cdouble;                         e: ptr cdouble; tau: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_cupgtr*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float;                         tau: ptr lapack_complex_float;                         q: ptr lapack_complex_float; ldq: ptr lapack_int;                       work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zupgtr*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double;                       tau: ptr lapack_complex_double;                       q: ptr lapack_complex_double; ldq: ptr lapack_int;                       work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_cupmtr*(side: cstring; uplo: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int;                       ap: ptr lapack_complex_float;                         tau: ptr lapack_complex_float;                         c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zupmtr*(side: cstring; uplo: cstring; trans: cstring;                        m: ptr lapack_int; n: ptr lapack_int;                       ap: ptr lapack_complex_double;                       tau: ptr lapack_complex_double;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_ssbtrd*(vect: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; ab: ptr cfloat; ldab: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat; q: ptr cfloat;                         ldq: ptr lapack_int; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dsbtrd*(vect: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; ab: ptr cdouble; ldab: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble; q: ptr cdouble;                         ldq: ptr lapack_int; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_chbtrd*(vect: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; d: ptr cfloat; e: ptr cfloat;                         q: ptr lapack_complex_float; ldq: ptr lapack_int;                       work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zhbtrd*(vect: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; d: ptr cdouble; e: ptr cdouble;                         q: ptr lapack_complex_double; ldq: ptr lapack_int;                       work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_ssterf*(n: ptr lapack_int; d: ptr cfloat; e: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dsterf*(n: ptr lapack_int; d: ptr cdouble; e: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_ssteqr*(compz: cstring; n: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dsteqr*(compz: cstring; n: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; z: ptr cdouble; ldz: ptr lapack_int;                       work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_csteqr*(compz: cstring; n: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zsteqr*(compz: cstring; n: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; z: ptr lapack_complex_double;                       ldz: ptr lapack_int; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sstemr*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat; vl: ptr cfloat;                         vu: ptr cfloat; il: ptr lapack_int; iu: ptr lapack_int;                       m: ptr lapack_int; w: ptr cfloat; z: ptr cfloat;                         ldz: ptr lapack_int; nzc: ptr lapack_int;                       isuppz: ptr lapack_int; tryrac: ptr lapack_logical;                         work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dstemr*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble; vl: ptr cdouble;                         vu: ptr cdouble; il: ptr lapack_int; iu: ptr lapack_int;                       m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                         ldz: ptr lapack_int; nzc: ptr lapack_int;                       isuppz: ptr lapack_int; tryrac: ptr lapack_logical;                         work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cstemr*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat; vl: ptr cfloat;                         vu: ptr cfloat; il: ptr lapack_int; iu: ptr lapack_int;                       m: ptr lapack_int; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: ptr lapack_int;                       nzc: ptr lapack_int; isuppz: ptr lapack_int;                       tryrac: ptr lapack_logical; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zstemr*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble; vl: ptr cdouble;                         vu: ptr cdouble; il: ptr lapack_int; iu: ptr lapack_int;                       m: ptr lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       nzc: ptr lapack_int; isuppz: ptr lapack_int;                       tryrac: ptr lapack_logical; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sstedc*(compz: cstring; n: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dstedc*(compz: cstring; n: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; z: ptr cdouble; ldz: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cstedc*(compz: cstring; n: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; rwork: ptr cfloat;                         lrwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zstedc*(compz: cstring; n: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; z: ptr lapack_complex_double;                       ldz: ptr lapack_int; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; rwork: ptr cdouble;                         lrwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sstegr*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat; vl: ptr cfloat;                         vu: ptr cfloat; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cfloat; m: ptr lapack_int; w: ptr cfloat;                         z: ptr cfloat; ldz: ptr lapack_int;                       isuppz: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dstegr*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble; vl: ptr cdouble;                         vu: ptr cdouble; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cdouble; m: ptr lapack_int; w: ptr cdouble;                         z: ptr cdouble; ldz: ptr lapack_int;                       isuppz: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cstegr*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat; vl: ptr cfloat;                         vu: ptr cfloat; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cfloat; m: ptr lapack_int; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: ptr lapack_int;                       isuppz: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zstegr*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble; vl: ptr cdouble;                         vu: ptr cdouble; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cdouble; m: ptr lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       isuppz: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_spteqr*(compz: cstring; n: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dpteqr*(compz: cstring; n: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; z: ptr cdouble; ldz: ptr lapack_int;                       work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cpteqr*(compz: cstring; n: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zpteqr*(compz: cstring; n: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; z: ptr lapack_complex_double;                       ldz: ptr lapack_int; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sstebz*(range: cstring; order: cstring; n: ptr lapack_int;                       vl: ptr cfloat; vu: ptr cfloat; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cfloat; d: ptr cfloat;                         e: ptr cfloat; m: ptr lapack_int; nsplit: ptr lapack_int;                       w: ptr cfloat; iblock: ptr lapack_int;                       isplit: ptr lapack_int; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dstebz*(range: cstring; order: cstring; n: ptr lapack_int;                       vl: ptr cdouble; vu: ptr cdouble; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cdouble; d: ptr cdouble;                         e: ptr cdouble; m: ptr lapack_int; nsplit: ptr lapack_int;                       w: ptr cdouble; iblock: ptr lapack_int;                       isplit: ptr lapack_int; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sstein*(n: ptr lapack_int; d: ptr cfloat; e: ptr cfloat;                         m: ptr lapack_int; w: ptr cfloat; iblock: ptr lapack_int;                       isplit: ptr lapack_int; z: ptr cfloat;                         ldz: ptr lapack_int; work: ptr cfloat;                         iwork: ptr lapack_int; ifailv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dstein*(n: ptr lapack_int; d: ptr cdouble; e: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble; iblock: ptr lapack_int;                       isplit: ptr lapack_int; z: ptr cdouble;                         ldz: ptr lapack_int; work: ptr cdouble;                         iwork: ptr lapack_int; ifailv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cstein*(n: ptr lapack_int; d: ptr cfloat; e: ptr cfloat;                         m: ptr lapack_int; w: ptr cfloat; iblock: ptr lapack_int;                       isplit: ptr lapack_int; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; work: ptr cfloat;                         iwork: ptr lapack_int; ifailv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zstein*(n: ptr lapack_int; d: ptr cdouble; e: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble; iblock: ptr lapack_int;                       isplit: ptr lapack_int; z: ptr lapack_complex_double;                       ldz: ptr lapack_int; work: ptr cdouble;                         iwork: ptr lapack_int; ifailv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sdisna*(job: cstring; m: ptr lapack_int; n: ptr lapack_int;                       d: ptr cfloat; sep: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ddisna*(job: cstring; m: ptr lapack_int; n: ptr lapack_int;                       d: ptr cdouble; sep: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_ssygst*(itype: ptr lapack_int; uplo: cstring; n: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsygst*(itype: ptr lapack_int; uplo: cstring; n: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chegst*(itype: ptr lapack_int; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zhegst*(itype: ptr lapack_int; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sspgst*(itype: ptr lapack_int; uplo: cstring; n: ptr lapack_int;                       ap: ptr cfloat; bp: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dspgst*(itype: ptr lapack_int; uplo: cstring; n: ptr lapack_int;                       ap: ptr cdouble; bp: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_chpgst*(itype: ptr lapack_int; uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float;                         bp: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zhpgst*(itype: ptr lapack_int; uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double;                       bp: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_ssbgst*(vect: cstring; uplo: cstring; n: ptr lapack_int;                       ka: ptr lapack_int; kb: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; bb: ptr cfloat;                         ldbb: ptr lapack_int; x: ptr cfloat; ldx: ptr lapack_int;                       work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dsbgst*(vect: cstring; uplo: cstring; n: ptr lapack_int;                       ka: ptr lapack_int; kb: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; bb: ptr cdouble;                         ldbb: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                       work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_chbgst*(vect: cstring; uplo: cstring; n: ptr lapack_int;                       ka: ptr lapack_int; kb: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       bb: ptr lapack_complex_float; ldbb: ptr lapack_int;                       x: ptr lapack_complex_float; ldx: ptr lapack_int;                       work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zhbgst*(vect: cstring; uplo: cstring; n: ptr lapack_int;                       ka: ptr lapack_int; kb: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       bb: ptr lapack_complex_double; ldbb: ptr lapack_int;                       x: ptr lapack_complex_double; ldx: ptr lapack_int;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_spbstf*(uplo: cstring; n: ptr lapack_int; kb: ptr lapack_int;                       bb: ptr cfloat; ldbb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dpbstf*(uplo: cstring; n: ptr lapack_int; kb: ptr lapack_int;                       bb: ptr cdouble; ldbb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cpbstf*(uplo: cstring; n: ptr lapack_int; kb: ptr lapack_int;                       bb: ptr lapack_complex_float; ldbb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zpbstf*(uplo: cstring; n: ptr lapack_int; kb: ptr lapack_int;                       bb: ptr lapack_complex_double; ldbb: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgehrd*(n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       tau: ptr cfloat; work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgehrd*(n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgehrd*(n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgehrd*(n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sorghr*(n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       tau: ptr cfloat; work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dorghr*(n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       tau: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sormhr*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       tau: ptr cfloat; c: ptr cfloat; ldc: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dormhr*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       tau: ptr cdouble; c: ptr cdouble; ldc: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cunghr*(n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zunghr*(n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cunmhr*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; tau: ptr lapack_complex_float;                         c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zunmhr*(side: cstring; trans: cstring; m: ptr lapack_int;                       n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; tau: ptr lapack_complex_double;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgebal*(job: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; scale: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dgebal*(job: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; scale: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cgebal*(job: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       scale: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zgebal*(job: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       scale: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sgebak*(job: cstring; side: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       scale: ptr cfloat; m: ptr lapack_int; v: ptr cfloat;                         ldv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgebak*(job: cstring; side: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       scale: ptr cdouble; m: ptr lapack_int; v: ptr cdouble;                         ldv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgebak*(job: cstring; side: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       scale: ptr cfloat; m: ptr lapack_int;                       v: ptr lapack_complex_float; ldv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgebak*(job: cstring; side: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       scale: ptr cdouble; m: ptr lapack_int;                       v: ptr lapack_complex_double; ldv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_shseqr*(job: cstring; compz: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int; h: ptr cfloat;                         ldh: ptr lapack_int; wr: ptr cfloat; wi: ptr cfloat;                         z: ptr cfloat; ldz: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dhseqr*(job: cstring; compz: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int; h: ptr cdouble;                         ldh: ptr lapack_int; wr: ptr cdouble; wi: ptr cdouble;                         z: ptr cdouble; ldz: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chseqr*(job: cstring; compz: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       h: ptr lapack_complex_float; ldh: ptr lapack_int;                       w: ptr lapack_complex_float; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhseqr*(job: cstring; compz: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       h: ptr lapack_complex_double; ldh: ptr lapack_int;                       w: ptr lapack_complex_double;                       z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_shsein*(job: cstring; eigsrc: cstring; initv: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       h: ptr cfloat; ldh: ptr lapack_int; wr: ptr cfloat;                         wi: ptr cfloat; vl: ptr cfloat; ldvl: ptr lapack_int;                       vr: ptr cfloat; ldvr: ptr lapack_int; mm: ptr lapack_int;                       m: ptr lapack_int; work: ptr cfloat;                         ifaill: ptr lapack_int; ifailr: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dhsein*(job: cstring; eigsrc: cstring; initv: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       h: ptr cdouble; ldh: ptr lapack_int; wr: ptr cdouble;                         wi: ptr cdouble; vl: ptr cdouble; ldvl: ptr lapack_int;                       vr: ptr cdouble; ldvr: ptr lapack_int; mm: ptr lapack_int;                       m: ptr lapack_int; work: ptr cdouble;                         ifaill: ptr lapack_int; ifailr: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chsein*(job: cstring; eigsrc: cstring; initv: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       h: ptr lapack_complex_float; ldh: ptr lapack_int;                       w: ptr lapack_complex_float; vl: ptr lapack_complex_float;                         ldvl: ptr lapack_int; vr: ptr lapack_complex_float;                         ldvr: ptr lapack_int; mm: ptr lapack_int;                       m: ptr lapack_int; work: ptr lapack_complex_float;                         rwork: ptr cfloat; ifaill: ptr lapack_int;                       ifailr: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhsein*(job: cstring; eigsrc: cstring; initv: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       h: ptr lapack_complex_double; ldh: ptr lapack_int;                       w: ptr lapack_complex_double;                       vl: ptr lapack_complex_double; ldvl: ptr lapack_int;                       vr: ptr lapack_complex_double; ldvr: ptr lapack_int;                       mm: ptr lapack_int; m: ptr lapack_int;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         ifaill: ptr lapack_int; ifailr: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_strevc*(side: cstring; howmny: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       t: ptr cfloat; ldt: ptr lapack_int; vl: ptr cfloat;                         ldvl: ptr lapack_int; vr: ptr cfloat;                         ldvr: ptr lapack_int; mm: ptr lapack_int;                       m: ptr lapack_int; work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dtrevc*(side: cstring; howmny: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       t: ptr cdouble; ldt: ptr lapack_int; vl: ptr cdouble;                         ldvl: ptr lapack_int; vr: ptr cdouble;                         ldvr: ptr lapack_int; mm: ptr lapack_int;                       m: ptr lapack_int; work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_ctrevc*(side: cstring; howmny: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       t: ptr lapack_complex_float; ldt: ptr lapack_int;                       vl: ptr lapack_complex_float; ldvl: ptr lapack_int;                       vr: ptr lapack_complex_float; ldvr: ptr lapack_int;                       mm: ptr lapack_int; m: ptr lapack_int;                       work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_ztrevc*(side: cstring; howmny: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       t: ptr lapack_complex_double; ldt: ptr lapack_int;                       vl: ptr lapack_complex_double; ldvl: ptr lapack_int;                       vr: ptr lapack_complex_double; ldvr: ptr lapack_int;                       mm: ptr lapack_int; m: ptr lapack_int;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_strsna*(job: cstring; howmny: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; t: ptr cfloat; ldt: ptr lapack_int;                       vl: ptr cfloat; ldvl: ptr lapack_int; vr: ptr cfloat;                         ldvr: ptr lapack_int; s: ptr cfloat; sep: ptr cfloat;                         mm: ptr lapack_int; m: ptr lapack_int; work: ptr cfloat;                         ldwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtrsna*(job: cstring; howmny: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; t: ptr cdouble; ldt: ptr lapack_int;                       vl: ptr cdouble; ldvl: ptr lapack_int; vr: ptr cdouble;                         ldvr: ptr lapack_int; s: ptr cdouble; sep: ptr cdouble;                         mm: ptr lapack_int; m: ptr lapack_int; work: ptr cdouble;                         ldwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ctrsna*(job: cstring; howmny: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; t: ptr lapack_complex_float;                         ldt: ptr lapack_int; vl: ptr lapack_complex_float;                         ldvl: ptr lapack_int; vr: ptr lapack_complex_float;                         ldvr: ptr lapack_int; s: ptr cfloat; sep: ptr cfloat;                         mm: ptr lapack_int; m: ptr lapack_int;                       work: ptr lapack_complex_float; ldwork: ptr lapack_int;                       rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ztrsna*(job: cstring; howmny: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; t: ptr lapack_complex_double;                       ldt: ptr lapack_int; vl: ptr lapack_complex_double;                       ldvl: ptr lapack_int; vr: ptr lapack_complex_double;                       ldvr: ptr lapack_int; s: ptr cdouble; sep: ptr cdouble;                         mm: ptr lapack_int; m: ptr lapack_int;                       work: ptr lapack_complex_double; ldwork: ptr lapack_int;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_strexc*(compq: cstring; n: ptr lapack_int; t: ptr cfloat;                         ldt: ptr lapack_int; q: ptr cfloat; ldq: ptr lapack_int;                       ifst: ptr lapack_int; ilst: ptr lapack_int;                       work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dtrexc*(compq: cstring; n: ptr lapack_int; t: ptr cdouble;                         ldt: ptr lapack_int; q: ptr cdouble; ldq: ptr lapack_int;                       ifst: ptr lapack_int; ilst: ptr lapack_int;                       work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_ctrexc*(compq: cstring; n: ptr lapack_int;                       t: ptr lapack_complex_float; ldt: ptr lapack_int;                       q: ptr lapack_complex_float; ldq: ptr lapack_int;                       ifst: ptr lapack_int; ilst: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ztrexc*(compq: cstring; n: ptr lapack_int;                       t: ptr lapack_complex_double; ldt: ptr lapack_int;                       q: ptr lapack_complex_double; ldq: ptr lapack_int;                       ifst: ptr lapack_int; ilst: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_strsen*(job: cstring; compq: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; t: ptr cfloat; ldt: ptr lapack_int;                       q: ptr cfloat; ldq: ptr lapack_int; wr: ptr cfloat;                         wi: ptr cfloat; m: ptr lapack_int; s: ptr cfloat;                         sep: ptr cfloat; work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtrsen*(job: cstring; compq: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; t: ptr cdouble; ldt: ptr lapack_int;                       q: ptr cdouble; ldq: ptr lapack_int; wr: ptr cdouble;                         wi: ptr cdouble; m: ptr lapack_int; s: ptr cdouble;                         sep: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctrsen*(job: cstring; compq: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; t: ptr lapack_complex_float;                         ldt: ptr lapack_int; q: ptr lapack_complex_float;                         ldq: ptr lapack_int; w: ptr lapack_complex_float;                         m: ptr lapack_int; s: ptr cfloat; sep: ptr cfloat;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ztrsen*(job: cstring; compq: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; t: ptr lapack_complex_double;                       ldt: ptr lapack_int; q: ptr lapack_complex_double;                       ldq: ptr lapack_int; w: ptr lapack_complex_double;                       m: ptr lapack_int; s: ptr cdouble; sep: ptr cdouble;                         work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_strsyl*(trana: cstring; tranb: cstring; isgn: ptr lapack_int;                       m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       c: ptr cfloat; ldc: ptr lapack_int; scale: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dtrsyl*(trana: cstring; tranb: cstring; isgn: ptr lapack_int;                       m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       c: ptr cdouble; ldc: ptr lapack_int; scale: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_ctrsyl*(trana: cstring; tranb: cstring; isgn: ptr lapack_int;                       m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       c: ptr lapack_complex_float; ldc: ptr lapack_int;                       scale: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ztrsyl*(trana: cstring; tranb: cstring; isgn: ptr lapack_int;                       m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       scale: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sgghrd*(compq: cstring; compz: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       q: ptr cfloat; ldq: ptr lapack_int; z: ptr cfloat;                         ldz: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgghrd*(compq: cstring; compz: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       q: ptr cdouble; ldq: ptr lapack_int; z: ptr cdouble;                         ldz: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgghrd*(compq: cstring; compz: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       q: ptr lapack_complex_float; ldq: ptr lapack_int;                       z: ptr lapack_complex_float; ldz: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgghrd*(compq: cstring; compz: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       q: ptr lapack_complex_double; ldq: ptr lapack_int;                       z: ptr lapack_complex_double; ldz: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sggbal*(job: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cfloat; rscale: ptr cfloat; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dggbal*(job: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cdouble; rscale: ptr cdouble;                         work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cggbal*(job: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cfloat; rscale: ptr cfloat; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zggbal*(job: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cdouble; rscale: ptr cdouble;                         work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sggbak*(job: cstring; side: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cfloat; rscale: ptr cfloat; m: ptr lapack_int;                       v: ptr cfloat; ldv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dggbak*(job: cstring; side: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cdouble; rscale: ptr cdouble;                         m: ptr lapack_int; v: ptr cdouble; ldv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cggbak*(job: cstring; side: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cfloat; rscale: ptr cfloat; m: ptr lapack_int;                       v: ptr lapack_complex_float; ldv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zggbak*(job: cstring; side: cstring; n: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cdouble; rscale: ptr cdouble;                         m: ptr lapack_int; v: ptr lapack_complex_double;                       ldv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_shgeqz*(job: cstring; compq: cstring; compz: cstring;                        n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; h: ptr cfloat; ldh: ptr lapack_int;                       t: ptr cfloat; ldt: ptr lapack_int; alphar: ptr cfloat;                         alphai: ptr cfloat; beta: ptr cfloat; q: ptr cfloat;                         ldq: ptr lapack_int; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dhgeqz*(job: cstring; compq: cstring; compz: cstring;                        n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; h: ptr cdouble; ldh: ptr lapack_int;                       t: ptr cdouble; ldt: ptr lapack_int; alphar: ptr cdouble;                         alphai: ptr cdouble; beta: ptr cdouble; q: ptr cdouble;                         ldq: ptr lapack_int; z: ptr cdouble; ldz: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chgeqz*(job: cstring; compq: cstring; compz: cstring;                        n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; h: ptr lapack_complex_float;                         ldh: ptr lapack_int; t: ptr lapack_complex_float;                         ldt: ptr lapack_int; alpha: ptr lapack_complex_float;                         beta: ptr lapack_complex_float;                         q: ptr lapack_complex_float; ldq: ptr lapack_int;                       z: ptr lapack_complex_float; ldz: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zhgeqz*(job: cstring; compq: cstring; compz: cstring;                        n: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; h: ptr lapack_complex_double;                       ldh: ptr lapack_int; t: ptr lapack_complex_double;                       ldt: ptr lapack_int; alpha: ptr lapack_complex_double;                       beta: ptr lapack_complex_double;                       q: ptr lapack_complex_double; ldq: ptr lapack_int;                       z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_stgevc*(side: cstring; howmny: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       s: ptr cfloat; lds: ptr lapack_int; p: ptr cfloat;                         ldp: ptr lapack_int; vl: ptr cfloat; ldvl: ptr lapack_int;                       vr: ptr cfloat; ldvr: ptr lapack_int; mm: ptr lapack_int;                       m: ptr lapack_int; work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dtgevc*(side: cstring; howmny: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       s: ptr cdouble; lds: ptr lapack_int; p: ptr cdouble;                         ldp: ptr lapack_int; vl: ptr cdouble;                         ldvl: ptr lapack_int; vr: ptr cdouble;                         ldvr: ptr lapack_int; mm: ptr lapack_int;                       m: ptr lapack_int; work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_ctgevc*(side: cstring; howmny: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       s: ptr lapack_complex_float; lds: ptr lapack_int;                       p: ptr lapack_complex_float; ldp: ptr lapack_int;                       vl: ptr lapack_complex_float; ldvl: ptr lapack_int;                       vr: ptr lapack_complex_float; ldvr: ptr lapack_int;                       mm: ptr lapack_int; m: ptr lapack_int;                       work: ptr lapack_complex_float; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_ztgevc*(side: cstring; howmny: cstring;                        select: ptr lapack_logical; n: ptr lapack_int;                       s: ptr lapack_complex_double; lds: ptr lapack_int;                       p: ptr lapack_complex_double; ldp: ptr lapack_int;                       vl: ptr lapack_complex_double; ldvl: ptr lapack_int;                       vr: ptr lapack_complex_double; ldvr: ptr lapack_int;                       mm: ptr lapack_int; m: ptr lapack_int;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_stgexc*(wantq: ptr lapack_logical; wantz: ptr lapack_logical;                         n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; q: ptr cfloat;                         ldq: ptr lapack_int; z: ptr cfloat; ldz: ptr lapack_int;                       ifst: ptr lapack_int; ilst: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtgexc*(wantq: ptr lapack_logical; wantz: ptr lapack_logical;                         n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; q: ptr cdouble;                         ldq: ptr lapack_int; z: ptr cdouble; ldz: ptr lapack_int;                       ifst: ptr lapack_int; ilst: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ctgexc*(wantq: ptr lapack_logical; wantz: ptr lapack_logical;                         n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; q: ptr lapack_complex_float;                         ldq: ptr lapack_int; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; ifst: ptr lapack_int;                       ilst: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ztgexc*(wantq: ptr lapack_logical; wantz: ptr lapack_logical;                         n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; q: ptr lapack_complex_double;                       ldq: ptr lapack_int; z: ptr lapack_complex_double;                       ldz: ptr lapack_int; ifst: ptr lapack_int;                       ilst: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_stgsen*(ijob: ptr lapack_int; wantq: ptr lapack_logical;                         wantz: ptr lapack_logical; select: ptr lapack_logical;                         n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; alphar: ptr cfloat;                         alphai: ptr cfloat; beta: ptr cfloat; q: ptr cfloat;                         ldq: ptr lapack_int; z: ptr cfloat; ldz: ptr lapack_int;                       m: ptr lapack_int; pl: ptr cfloat; pr: ptr cfloat;                         dif: ptr cfloat; work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtgsen*(ijob: ptr lapack_int; wantq: ptr lapack_logical;                         wantz: ptr lapack_logical; select: ptr lapack_logical;                         n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; alphar: ptr cdouble;                         alphai: ptr cdouble; beta: ptr cdouble; q: ptr cdouble;                         ldq: ptr lapack_int; z: ptr cdouble; ldz: ptr lapack_int;                       m: ptr lapack_int; pl: ptr cdouble; pr: ptr cdouble;                         dif: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctgsen*(ijob: ptr lapack_int; wantq: ptr lapack_logical;                         wantz: ptr lapack_logical; select: ptr lapack_logical;                         n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; alpha: ptr lapack_complex_float;                         beta: ptr lapack_complex_float;                         q: ptr lapack_complex_float; ldq: ptr lapack_int;                       z: ptr lapack_complex_float; ldz: ptr lapack_int;                       m: ptr lapack_int; pl: ptr cfloat; pr: ptr cfloat;                         dif: ptr cfloat; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ztgsen*(ijob: ptr lapack_int; wantq: ptr lapack_logical;                         wantz: ptr lapack_logical; select: ptr lapack_logical;                         n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; alpha: ptr lapack_complex_double;                       beta: ptr lapack_complex_double;                       q: ptr lapack_complex_double; ldq: ptr lapack_int;                       z: ptr lapack_complex_double; ldz: ptr lapack_int;                       m: ptr lapack_int; pl: ptr cdouble; pr: ptr cdouble;                         dif: ptr cdouble; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_stgsyl*(trans: cstring; ijob: ptr lapack_int; m: ptr lapack_int;                       n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; c: ptr cfloat;                         ldc: ptr lapack_int; d: ptr cfloat; ldd: ptr lapack_int;                       e: ptr cfloat; lde: ptr lapack_int; f: ptr cfloat;                         ldf: ptr lapack_int; scale: ptr cfloat; dif: ptr cfloat;                         work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dtgsyl*(trans: cstring; ijob: ptr lapack_int; m: ptr lapack_int;                       n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; c: ptr cdouble;                         ldc: ptr lapack_int; d: ptr cdouble; ldd: ptr lapack_int;                       e: ptr cdouble; lde: ptr lapack_int; f: ptr cdouble;                         ldf: ptr lapack_int; scale: ptr cdouble; dif: ptr cdouble;                         work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctgsyl*(trans: cstring; ijob: ptr lapack_int; m: ptr lapack_int;                       n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; c: ptr lapack_complex_float;                         ldc: ptr lapack_int; d: ptr lapack_complex_float;                         ldd: ptr lapack_int; e: ptr lapack_complex_float;                         lde: ptr lapack_int; f: ptr lapack_complex_float;                         ldf: ptr lapack_int; scale: ptr cfloat; dif: ptr cfloat;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ztgsyl*(trans: cstring; ijob: ptr lapack_int; m: ptr lapack_int;                       n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; c: ptr lapack_complex_double;                       ldc: ptr lapack_int; d: ptr lapack_complex_double;                       ldd: ptr lapack_int; e: ptr lapack_complex_double;                       lde: ptr lapack_int; f: ptr lapack_complex_double;                       ldf: ptr lapack_int; scale: ptr cdouble; dif: ptr cdouble;                         work: ptr lapack_complex_double; lwork: ptr lapack_int;                       iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_stgsna*(job: cstring; howmny: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; vl: ptr cfloat;                         ldvl: ptr lapack_int; vr: ptr cfloat;                         ldvr: ptr lapack_int; s: ptr cfloat; dif: ptr cfloat;                         mm: ptr lapack_int; m: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtgsna*(job: cstring; howmny: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; vl: ptr cdouble;                         ldvl: ptr lapack_int; vr: ptr cdouble;                         ldvr: ptr lapack_int; s: ptr cdouble; dif: ptr cdouble;                         mm: ptr lapack_int; m: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ctgsna*(job: cstring; howmny: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; vl: ptr lapack_complex_float;                         ldvl: ptr lapack_int; vr: ptr lapack_complex_float;                         ldvr: ptr lapack_int; s: ptr cfloat; dif: ptr cfloat;                         mm: ptr lapack_int; m: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ztgsna*(job: cstring; howmny: cstring; select: ptr lapack_logical;                         n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; vl: ptr lapack_complex_double;                       ldvl: ptr lapack_int; vr: ptr lapack_complex_double;                       ldvr: ptr lapack_int; s: ptr cdouble; dif: ptr cdouble;                         mm: ptr lapack_int; m: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sggsvp*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; tola: ptr cfloat; tolb: ptr cfloat;                         k: ptr lapack_int; l: ptr lapack_int; u: ptr cfloat;                         ldu: ptr lapack_int; v: ptr cfloat; ldv: ptr lapack_int;                       q: ptr cfloat; ldq: ptr lapack_int; iwork: ptr lapack_int;                       tau: ptr cfloat; work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dggsvp*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; tola: ptr cdouble; tolb: ptr cdouble;                         k: ptr lapack_int; l: ptr lapack_int; u: ptr cdouble;                         ldu: ptr lapack_int; v: ptr cdouble; ldv: ptr lapack_int;                       q: ptr cdouble; ldq: ptr lapack_int;                       iwork: ptr lapack_int; tau: ptr cdouble;                         work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cggsvp*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       tola: ptr cfloat; tolb: ptr cfloat; k: ptr lapack_int;                       l: ptr lapack_int; u: ptr lapack_complex_float;                         ldu: ptr lapack_int; v: ptr lapack_complex_float;                         ldv: ptr lapack_int; q: ptr lapack_complex_float;                         ldq: ptr lapack_int; iwork: ptr lapack_int;                       rwork: ptr cfloat; tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zggsvp*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       tola: ptr cdouble; tolb: ptr cdouble; k: ptr lapack_int;                       l: ptr lapack_int; u: ptr lapack_complex_double;                       ldu: ptr lapack_int; v: ptr lapack_complex_double;                       ldv: ptr lapack_int; q: ptr lapack_complex_double;                       ldq: ptr lapack_int; iwork: ptr lapack_int;                       rwork: ptr cdouble; tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_stgsja*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       tola: ptr cfloat; tolb: ptr cfloat; alpha: ptr cfloat;                         beta: ptr cfloat; u: ptr cfloat; ldu: ptr lapack_int;                       v: ptr cfloat; ldv: ptr lapack_int; q: ptr cfloat;                         ldq: ptr lapack_int; work: ptr cfloat;                         ncycle: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dtgsja*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       tola: ptr cdouble; tolb: ptr cdouble; alpha: ptr cdouble;                         beta: ptr cdouble; u: ptr cdouble; ldu: ptr lapack_int;                       v: ptr cdouble; ldv: ptr lapack_int; q: ptr cdouble;                         ldq: ptr lapack_int; work: ptr cdouble;                         ncycle: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctgsja*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       tola: ptr cfloat; tolb: ptr cfloat; alpha: ptr cfloat;                         beta: ptr cfloat; u: ptr lapack_complex_float;                         ldu: ptr lapack_int; v: ptr lapack_complex_float;                         ldv: ptr lapack_int; q: ptr lapack_complex_float;                         ldq: ptr lapack_int; work: ptr lapack_complex_float;                         ncycle: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ztgsja*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; p: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       tola: ptr cdouble; tolb: ptr cdouble; alpha: ptr cdouble;                         beta: ptr cdouble; u: ptr lapack_complex_double;                       ldu: ptr lapack_int; v: ptr lapack_complex_double;                       ldv: ptr lapack_int; q: ptr lapack_complex_double;                       ldq: ptr lapack_int; work: ptr lapack_complex_double;                       ncycle: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgels*(trans: cstring; m: ptr lapack_int; n: ptr lapack_int;                      nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                      b: ptr cfloat; ldb: ptr lapack_int; work: ptr cfloat;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgels*(trans: cstring; m: ptr lapack_int; n: ptr lapack_int;                      nrhs: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                      b: ptr cdouble; ldb: ptr lapack_int; work: ptr cdouble;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgels*(trans: cstring; m: ptr lapack_int; n: ptr lapack_int;                      nrhs: ptr lapack_int; a: ptr lapack_complex_float;                        lda: ptr lapack_int; b: ptr lapack_complex_float;                        ldb: ptr lapack_int; work: ptr lapack_complex_float;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgels*(trans: cstring; m: ptr lapack_int; n: ptr lapack_int;                      nrhs: ptr lapack_int; a: ptr lapack_complex_double;                      lda: ptr lapack_int; b: ptr lapack_complex_double;                      ldb: ptr lapack_int; work: ptr lapack_complex_double;                      lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgelsy*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; jpvt: ptr lapack_int;                       rcond: ptr cfloat; rank: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgelsy*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; jpvt: ptr lapack_int;                       rcond: ptr cdouble; rank: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cgelsy*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; jpvt: ptr lapack_int;                       rcond: ptr cfloat; rank: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zgelsy*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; jpvt: ptr lapack_int;                       rcond: ptr cdouble; rank: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sgelss*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; s: ptr cfloat;                         rcond: ptr cfloat; rank: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgelss*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; s: ptr cdouble;                         rcond: ptr cdouble; rank: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cgelss*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; s: ptr cfloat; rcond: ptr cfloat;                         rank: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; rwork: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_zgelss*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; s: ptr cdouble; rcond: ptr cdouble;                         rank: ptr lapack_int; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; rwork: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_sgelsd*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; s: ptr cfloat;                         rcond: ptr cfloat; rank: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgelsd*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; s: ptr cdouble;                         rcond: ptr cdouble; rank: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgelsd*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; s: ptr cfloat; rcond: ptr cfloat;                         rank: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; rwork: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgelsd*(m: ptr lapack_int; n: ptr lapack_int;                       nrhs: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; s: ptr cdouble; rcond: ptr cdouble;                         rank: ptr lapack_int; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; rwork: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgglse*(m: ptr lapack_int; n: ptr lapack_int; p: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; c: ptr cfloat; d: ptr cfloat;                         x: ptr cfloat; work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgglse*(m: ptr lapack_int; n: ptr lapack_int; p: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; c: ptr cdouble; d: ptr cdouble;                         x: ptr cdouble; work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cgglse*(m: ptr lapack_int; n: ptr lapack_int; p: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       c: ptr lapack_complex_float; d: ptr lapack_complex_float;                         x: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zgglse*(m: ptr lapack_int; n: ptr lapack_int; p: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       c: ptr lapack_complex_double;                       d: ptr lapack_complex_double;                       x: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sggglm*(n: ptr lapack_int; m: ptr lapack_int; p: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; d: ptr cfloat; x: ptr cfloat;                         y: ptr cfloat; work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dggglm*(n: ptr lapack_int; m: ptr lapack_int; p: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; d: ptr cdouble; x: ptr cdouble;                         y: ptr cdouble; work: ptr cdouble; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cggglm*(n: ptr lapack_int; m: ptr lapack_int; p: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       d: ptr lapack_complex_float; x: ptr lapack_complex_float;                         y: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zggglm*(n: ptr lapack_int; m: ptr lapack_int; p: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       d: ptr lapack_complex_double;                       x: ptr lapack_complex_double;                       y: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ssyev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      a: ptr cfloat; lda: ptr lapack_int; w: ptr cfloat;                        work: ptr cfloat; lwork: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_dsyev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      a: ptr cdouble; lda: ptr lapack_int; w: ptr cdouble;                        work: ptr cdouble; lwork: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_cheev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      a: ptr lapack_complex_float; lda: ptr lapack_int;                      w: ptr cfloat; work: ptr lapack_complex_float;                        lwork: ptr lapack_int; rwork: ptr cfloat;                        info: ptr lapack_int)
    proc LAPACK_zheev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      a: ptr lapack_complex_double; lda: ptr lapack_int;                      w: ptr cdouble; work: ptr lapack_complex_double;                      lwork: ptr lapack_int; rwork: ptr cdouble;                        info: ptr lapack_int)
    proc LAPACK_ssyevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; w: ptr cfloat;                         work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dsyevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; w: ptr cdouble;                         work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cheevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       w: ptr cfloat; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; rwork: ptr cfloat;                         lrwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zheevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       w: ptr cdouble; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; rwork: ptr cdouble;                         lrwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ssyevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       vl: ptr cfloat; vu: ptr cfloat; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cfloat; m: ptr lapack_int;                       w: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dsyevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       vl: ptr cdouble; vu: ptr cdouble; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                         ldz: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       ifail: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cheevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; vl: ptr cfloat; vu: ptr cfloat;                         il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cfloat; m: ptr lapack_int; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; iwork: ptr lapack_int;                       ifail: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zheevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; vl: ptr cdouble; vu: ptr cdouble;                         il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cdouble; m: ptr lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; iwork: ptr lapack_int;                       ifail: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ssyevr*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       vl: ptr cfloat; vu: ptr cfloat; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cfloat; m: ptr lapack_int;                       w: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       isuppz: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsyevr*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       vl: ptr cdouble; vu: ptr cdouble; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                         ldz: ptr lapack_int; isuppz: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cheevr*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; vl: ptr cfloat; vu: ptr cfloat;                         il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cfloat; m: ptr lapack_int; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: ptr lapack_int;                       isuppz: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; rwork: ptr cfloat;                         lrwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zheevr*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; vl: ptr cdouble; vu: ptr cdouble;                         il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cdouble; m: ptr lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       isuppz: ptr lapack_int; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; rwork: ptr cdouble;                         lrwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sspev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      ap: ptr cfloat; w: ptr cfloat; z: ptr cfloat;                        ldz: ptr lapack_int; work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dspev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      ap: ptr cdouble; w: ptr cdouble; z: ptr cdouble;                        ldz: ptr lapack_int; work: ptr cdouble;                        info: ptr lapack_int)
    proc LAPACK_chpev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      ap: ptr lapack_complex_float; w: ptr cfloat;                        z: ptr lapack_complex_float; ldz: ptr lapack_int;                      work: ptr lapack_complex_float; rwork: ptr cfloat;                        info: ptr lapack_int)
    proc LAPACK_zhpev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      ap: ptr lapack_complex_double; w: ptr cdouble;                        z: ptr lapack_complex_double; ldz: ptr lapack_int;                      work: ptr lapack_complex_double; rwork: ptr cdouble;                        info: ptr lapack_int)
    proc LAPACK_sspevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       ap: ptr cfloat; w: ptr cfloat; z: ptr cfloat;                         ldz: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dspevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       ap: ptr cdouble; w: ptr cdouble; z: ptr cdouble;                         ldz: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chpevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; lrwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zhpevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; lrwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sspevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; ap: ptr cfloat; vl: ptr cfloat;                         vu: ptr cfloat; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cfloat; m: ptr lapack_int; w: ptr cfloat;                         z: ptr cfloat; ldz: ptr lapack_int; work: ptr cfloat;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dspevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; ap: ptr cdouble; vl: ptr cdouble;                         vu: ptr cdouble; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cdouble; m: ptr lapack_int; w: ptr cdouble;                         z: ptr cdouble; ldz: ptr lapack_int; work: ptr cdouble;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chpevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; ap: ptr lapack_complex_float;                         vl: ptr cfloat; vu: ptr cfloat; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cfloat; m: ptr lapack_int;                       w: ptr cfloat; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; work: ptr lapack_complex_float;                         rwork: ptr cfloat; iwork: ptr lapack_int;                       ifail: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhpevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; ap: ptr lapack_complex_double;                       vl: ptr cdouble; vu: ptr cdouble; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ssbev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      kd: ptr lapack_int; ab: ptr cfloat; ldab: ptr lapack_int;                      w: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                      work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dsbev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      kd: ptr lapack_int; ab: ptr cdouble; ldab: ptr lapack_int;                      w: ptr cdouble; z: ptr cdouble; ldz: ptr lapack_int;                      work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_chbev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      kd: ptr lapack_int; ab: ptr lapack_complex_float;                        ldab: ptr lapack_int; w: ptr cfloat;                        z: ptr lapack_complex_float; ldz: ptr lapack_int;                      work: ptr lapack_complex_float; rwork: ptr cfloat;                        info: ptr lapack_int)
    proc LAPACK_zhbev*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      kd: ptr lapack_int; ab: ptr lapack_complex_double;                      ldab: ptr lapack_int; w: ptr cdouble;                        z: ptr lapack_complex_double; ldz: ptr lapack_int;                      work: ptr lapack_complex_double; rwork: ptr cdouble;                        info: ptr lapack_int)
    proc LAPACK_ssbevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; ab: ptr cfloat; ldab: ptr lapack_int;                       w: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dsbevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; ab: ptr cdouble; ldab: ptr lapack_int;                       w: ptr cdouble; z: ptr cdouble; ldz: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chbevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; ab: ptr lapack_complex_float;                         ldab: ptr lapack_int; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; lrwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zhbevd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       kd: ptr lapack_int; ab: ptr lapack_complex_double;                       ldab: ptr lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; lrwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ssbevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; kd: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; q: ptr cfloat; ldq: ptr lapack_int;                       vl: ptr cfloat; vu: ptr cfloat; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cfloat; m: ptr lapack_int;                       w: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; iwork: ptr lapack_int;                       ifail: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsbevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; kd: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; q: ptr cdouble; ldq: ptr lapack_int;                       vl: ptr cdouble; vu: ptr cdouble; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                         ldz: ptr lapack_int; work: ptr cdouble;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chbevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       q: ptr lapack_complex_float; ldq: ptr lapack_int;                       vl: ptr cfloat; vu: ptr cfloat; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cfloat; m: ptr lapack_int;                       w: ptr cfloat; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; work: ptr lapack_complex_float;                         rwork: ptr cfloat; iwork: ptr lapack_int;                       ifail: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhbevx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; kd: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       q: ptr lapack_complex_double; ldq: ptr lapack_int;                       vl: ptr cdouble; vu: ptr cdouble; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sstev*(jobz: cstring; n: ptr lapack_int; d: ptr cfloat;                        e: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                      work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dstev*(jobz: cstring; n: ptr lapack_int; d: ptr cdouble;                        e: ptr cdouble; z: ptr cdouble; ldz: ptr lapack_int;                      work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sstevd*(jobz: cstring; n: ptr lapack_int; d: ptr cfloat;                         e: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dstevd*(jobz: cstring; n: ptr lapack_int; d: ptr cdouble;                         e: ptr cdouble; z: ptr cdouble; ldz: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sstevx*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat; vl: ptr cfloat;                         vu: ptr cfloat; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cfloat; m: ptr lapack_int; w: ptr cfloat;                         z: ptr cfloat; ldz: ptr lapack_int; work: ptr cfloat;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dstevx*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble; vl: ptr cdouble;                         vu: ptr cdouble; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cdouble; m: ptr lapack_int; w: ptr cdouble;                         z: ptr cdouble; ldz: ptr lapack_int; work: ptr cdouble;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sstevr*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cfloat; e: ptr cfloat; vl: ptr cfloat;                         vu: ptr cfloat; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cfloat; m: ptr lapack_int; w: ptr cfloat;                         z: ptr cfloat; ldz: ptr lapack_int;                       isuppz: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dstevr*(jobz: cstring; range: cstring; n: ptr lapack_int;                       d: ptr cdouble; e: ptr cdouble; vl: ptr cdouble;                         vu: ptr cdouble; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cdouble; m: ptr lapack_int; w: ptr cdouble;                         z: ptr cdouble; ldz: ptr lapack_int;                       isuppz: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgees*(jobvs: cstring; sort: cstring; select: LAPACK_S_SELECT2;                      n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                      sdim: ptr lapack_int; wr: ptr cfloat; wi: ptr cfloat;                        vs: ptr cfloat; ldvs: ptr lapack_int; work: ptr cfloat;                        lwork: ptr lapack_int; bwork: ptr lapack_logical;                        info: ptr lapack_int)
    proc LAPACK_dgees*(jobvs: cstring; sort: cstring; select: LAPACK_D_SELECT2;                      n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                      sdim: ptr lapack_int; wr: ptr cdouble; wi: ptr cdouble;                        vs: ptr cdouble; ldvs: ptr lapack_int; work: ptr cdouble;                        lwork: ptr lapack_int; bwork: ptr lapack_logical;                        info: ptr lapack_int)
    proc LAPACK_cgees*(jobvs: cstring; sort: cstring; select: LAPACK_C_SELECT1;                      n: ptr lapack_int; a: ptr lapack_complex_float;                        lda: ptr lapack_int; sdim: ptr lapack_int;                      w: ptr lapack_complex_float; vs: ptr lapack_complex_float;                        ldvs: ptr lapack_int; work: ptr lapack_complex_float;                        lwork: ptr lapack_int; rwork: ptr cfloat;                        bwork: ptr lapack_logical; info: ptr lapack_int)
    proc LAPACK_zgees*(jobvs: cstring; sort: cstring; select: LAPACK_Z_SELECT1;                      n: ptr lapack_int; a: ptr lapack_complex_double;                      lda: ptr lapack_int; sdim: ptr lapack_int;                      w: ptr lapack_complex_double;                      vs: ptr lapack_complex_double; ldvs: ptr lapack_int;                      work: ptr lapack_complex_double; lwork: ptr lapack_int;                      rwork: ptr cdouble; bwork: ptr lapack_logical;                        info: ptr lapack_int)
    proc LAPACK_sgeesx*(jobvs: cstring; sort: cstring; select: LAPACK_S_SELECT2;                      sense: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; sdim: ptr lapack_int; wr: ptr cfloat;                         wi: ptr cfloat; vs: ptr cfloat; ldvs: ptr lapack_int;                       rconde: ptr cfloat; rcondv: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; bwork: ptr lapack_logical;                         info: ptr lapack_int)
    proc LAPACK_dgeesx*(jobvs: cstring; sort: cstring; select: LAPACK_D_SELECT2;                      sense: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; sdim: ptr lapack_int;                       wr: ptr cdouble; wi: ptr cdouble; vs: ptr cdouble;                         ldvs: ptr lapack_int; rconde: ptr cdouble;                         rcondv: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; bwork: ptr lapack_logical;                         info: ptr lapack_int)
    proc LAPACK_cgeesx*(jobvs: cstring; sort: cstring; select: LAPACK_C_SELECT1;                      sense: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       sdim: ptr lapack_int; w: ptr lapack_complex_float;                         vs: ptr lapack_complex_float; ldvs: ptr lapack_int;                       rconde: ptr cfloat; rcondv: ptr cfloat;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; bwork: ptr lapack_logical;                         info: ptr lapack_int)
    proc LAPACK_zgeesx*(jobvs: cstring; sort: cstring; select: LAPACK_Z_SELECT1;                      sense: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       sdim: ptr lapack_int; w: ptr lapack_complex_double;                       vs: ptr lapack_complex_double; ldvs: ptr lapack_int;                       rconde: ptr cdouble; rcondv: ptr cdouble;                         work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; bwork: ptr lapack_logical;                         info: ptr lapack_int)
    proc LAPACK_sgeev*(jobvl: cstring; jobvr: cstring; n: ptr lapack_int;                      a: ptr cfloat; lda: ptr lapack_int; wr: ptr cfloat;                        wi: ptr cfloat; vl: ptr cfloat; ldvl: ptr lapack_int;                      vr: ptr cfloat; ldvr: ptr lapack_int; work: ptr cfloat;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgeev*(jobvl: cstring; jobvr: cstring; n: ptr lapack_int;                      a: ptr cdouble; lda: ptr lapack_int; wr: ptr cdouble;                        wi: ptr cdouble; vl: ptr cdouble; ldvl: ptr lapack_int;                      vr: ptr cdouble; ldvr: ptr lapack_int; work: ptr cdouble;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgeev*(jobvl: cstring; jobvr: cstring; n: ptr lapack_int;                      a: ptr lapack_complex_float; lda: ptr lapack_int;                      w: ptr lapack_complex_float; vl: ptr lapack_complex_float;                        ldvl: ptr lapack_int; vr: ptr lapack_complex_float;                        ldvr: ptr lapack_int; work: ptr lapack_complex_float;                        lwork: ptr lapack_int; rwork: ptr cfloat;                        info: ptr lapack_int)
    proc LAPACK_zgeev*(jobvl: cstring; jobvr: cstring; n: ptr lapack_int;                      a: ptr lapack_complex_double; lda: ptr lapack_int;                      w: ptr lapack_complex_double;                      vl: ptr lapack_complex_double; ldvl: ptr lapack_int;                      vr: ptr lapack_complex_double; ldvr: ptr lapack_int;                      work: ptr lapack_complex_double; lwork: ptr lapack_int;                      rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sgeevx*(balanc: cstring; jobvl: cstring; jobvr: cstring;                        sense: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; wr: ptr cfloat; wi: ptr cfloat;                         vl: ptr cfloat; ldvl: ptr lapack_int; vr: ptr cfloat;                         ldvr: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; scale: ptr cfloat; abnrm: ptr cfloat;                         rconde: ptr cfloat; rcondv: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgeevx*(balanc: cstring; jobvl: cstring; jobvr: cstring;                        sense: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; wr: ptr cdouble; wi: ptr cdouble;                         vl: ptr cdouble; ldvl: ptr lapack_int; vr: ptr cdouble;                         ldvr: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; scale: ptr cdouble;                         abnrm: ptr cdouble; rconde: ptr cdouble;                         rcondv: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cgeevx*(balanc: cstring; jobvl: cstring; jobvr: cstring;                        sense: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       w: ptr lapack_complex_float; vl: ptr lapack_complex_float;                         ldvl: ptr lapack_int; vr: ptr lapack_complex_float;                         ldvr: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; scale: ptr cfloat; abnrm: ptr cfloat;                         rconde: ptr cfloat; rcondv: ptr cfloat;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zgeevx*(balanc: cstring; jobvl: cstring; jobvr: cstring;                        sense: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       w: ptr lapack_complex_double;                       vl: ptr lapack_complex_double; ldvl: ptr lapack_int;                       vr: ptr lapack_complex_double; ldvr: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       scale: ptr cdouble; abnrm: ptr cdouble;                         rconde: ptr cdouble; rcondv: ptr cdouble;                         work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sgesvd*(jobu: cstring; jobvt: cstring; m: ptr lapack_int;                       n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       s: ptr cfloat; u: ptr cfloat; ldu: ptr lapack_int;                       vt: ptr cfloat; ldvt: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgesvd*(jobu: cstring; jobvt: cstring; m: ptr lapack_int;                       n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       s: ptr cdouble; u: ptr cdouble; ldu: ptr lapack_int;                       vt: ptr cdouble; ldvt: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgesvd*(jobu: cstring; jobvt: cstring; m: ptr lapack_int;                       n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; s: ptr cfloat;                         u: ptr lapack_complex_float; ldu: ptr lapack_int;                       vt: ptr lapack_complex_float; ldvt: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zgesvd*(jobu: cstring; jobvt: cstring; m: ptr lapack_int;                       n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; s: ptr cdouble;                         u: ptr lapack_complex_double; ldu: ptr lapack_int;                       vt: ptr lapack_complex_double; ldvt: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sgesdd*(jobz: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; s: ptr cfloat;                         u: ptr cfloat; ldu: ptr lapack_int; vt: ptr cfloat;                         ldvt: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgesdd*(jobz: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; s: ptr cdouble;                         u: ptr cdouble; ldu: ptr lapack_int; vt: ptr cdouble;                         ldvt: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cgesdd*(jobz: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       s: ptr cfloat; u: ptr lapack_complex_float;                         ldu: ptr lapack_int; vt: ptr lapack_complex_float;                         ldvt: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; rwork: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgesdd*(jobz: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       s: ptr cdouble; u: ptr lapack_complex_double;                       ldu: ptr lapack_int; vt: ptr lapack_complex_double;                       ldvt: ptr lapack_int; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; rwork: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgejsv*(joba: cstring; jobu: cstring; jobv: cstring;                        jobr: cstring; jobt: cstring; jobp: cstring;                        m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; sva: ptr cdouble; u: ptr cdouble;                         ldu: ptr lapack_int; v: ptr cdouble; ldv: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgejsv*(joba: cstring; jobu: cstring; jobv: cstring;                        jobr: cstring; jobt: cstring; jobp: cstring;                        m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; sva: ptr cfloat; u: ptr cfloat;                         ldu: ptr lapack_int; v: ptr cfloat; ldv: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgesvj*(joba: cstring; jobu: cstring; jobv: cstring;                        m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; sva: ptr cdouble; mv: ptr lapack_int;                       v: ptr cdouble; ldv: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sgesvj*(joba: cstring; jobu: cstring; jobv: cstring;                        m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; sva: ptr cfloat; mv: ptr lapack_int;                       v: ptr cfloat; ldv: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sggsvd*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; n: ptr lapack_int; p: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       alpha: ptr cfloat; beta: ptr cfloat; u: ptr cfloat;                         ldu: ptr lapack_int; v: ptr cfloat; ldv: ptr lapack_int;                       q: ptr cfloat; ldq: ptr lapack_int; work: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dggsvd*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; n: ptr lapack_int; p: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       alpha: ptr cdouble; beta: ptr cdouble; u: ptr cdouble;                         ldu: ptr lapack_int; v: ptr cdouble; ldv: ptr lapack_int;                       q: ptr cdouble; ldq: ptr lapack_int; work: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cggsvd*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; n: ptr lapack_int; p: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       alpha: ptr cfloat; beta: ptr cfloat;                         u: ptr lapack_complex_float; ldu: ptr lapack_int;                       v: ptr lapack_complex_float; ldv: ptr lapack_int;                       q: ptr lapack_complex_float; ldq: ptr lapack_int;                       work: ptr lapack_complex_float; rwork: ptr cfloat;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zggsvd*(jobu: cstring; jobv: cstring; jobq: cstring;                        m: ptr lapack_int; n: ptr lapack_int; p: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       alpha: ptr cdouble; beta: ptr cdouble;                         u: ptr lapack_complex_double; ldu: ptr lapack_int;                       v: ptr lapack_complex_double; ldv: ptr lapack_int;                       q: ptr lapack_complex_double; ldq: ptr lapack_int;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         iwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ssygv*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                       n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                      b: ptr cfloat; ldb: ptr lapack_int; w: ptr cfloat;                        work: ptr cfloat; lwork: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_dsygv*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                       n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                      b: ptr cdouble; ldb: ptr lapack_int; w: ptr cdouble;                        work: ptr cdouble; lwork: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_chegv*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                       n: ptr lapack_int; a: ptr lapack_complex_float;                        lda: ptr lapack_int; b: ptr lapack_complex_float;                        ldb: ptr lapack_int; w: ptr cfloat;                        work: ptr lapack_complex_float; lwork: ptr lapack_int;                      rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zhegv*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                       n: ptr lapack_int; a: ptr lapack_complex_double;                      lda: ptr lapack_int; b: ptr lapack_complex_double;                      ldb: ptr lapack_int; w: ptr cdouble;                        work: ptr lapack_complex_double; lwork: ptr lapack_int;                      rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_ssygvd*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; w: ptr cfloat;                         work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dsygvd*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; w: ptr cdouble;                         work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chegvd*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; w: ptr cfloat;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; lrwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zhegvd*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; w: ptr cdouble;                         work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; lrwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ssygvx*(itype: ptr lapack_int; jobz: cstring; range: cstring;                        uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       vl: ptr cfloat; vu: ptr cfloat; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cfloat; m: ptr lapack_int;                       w: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dsygvx*(itype: ptr lapack_int; jobz: cstring; range: cstring;                        uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       vl: ptr cdouble; vu: ptr cdouble; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                         ldz: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       ifail: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chegvx*(itype: ptr lapack_int; jobz: cstring; range: cstring;                        uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       vl: ptr cfloat; vu: ptr cfloat; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cfloat; m: ptr lapack_int;                       w: ptr cfloat; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; rwork: ptr cfloat;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zhegvx*(itype: ptr lapack_int; jobz: cstring; range: cstring;                        uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       vl: ptr cdouble; vu: ptr cdouble; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; iwork: ptr lapack_int;                       ifail: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sspgv*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                       n: ptr lapack_int; ap: ptr cfloat; bp: ptr cfloat;                        w: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                      work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dspgv*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                       n: ptr lapack_int; ap: ptr cdouble; bp: ptr cdouble;                        w: ptr cdouble; z: ptr cdouble; ldz: ptr lapack_int;                      work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_chpgv*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                       n: ptr lapack_int; ap: ptr lapack_complex_float;                        bp: ptr lapack_complex_float; w: ptr cfloat;                        z: ptr lapack_complex_float; ldz: ptr lapack_int;                      work: ptr lapack_complex_float; rwork: ptr cfloat;                        info: ptr lapack_int)
    proc LAPACK_zhpgv*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                       n: ptr lapack_int; ap: ptr lapack_complex_double;                      bp: ptr lapack_complex_double; w: ptr cdouble;                        z: ptr lapack_complex_double; ldz: ptr lapack_int;                      work: ptr lapack_complex_double; rwork: ptr cdouble;                        info: ptr lapack_int)
    proc LAPACK_sspgvd*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                        n: ptr lapack_int; ap: ptr cfloat; bp: ptr cfloat;                         w: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dspgvd*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                        n: ptr lapack_int; ap: ptr cdouble; bp: ptr cdouble;                         w: ptr cdouble; z: ptr cdouble; ldz: ptr lapack_int;                       work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chpgvd*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                        n: ptr lapack_int; ap: ptr lapack_complex_float;                         bp: ptr lapack_complex_float; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: ptr lapack_int;                       work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; lrwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zhpgvd*(itype: ptr lapack_int; jobz: cstring; uplo: cstring;                        n: ptr lapack_int; ap: ptr lapack_complex_double;                       bp: ptr lapack_complex_double; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; lrwork: ptr lapack_int;                       iwork: ptr lapack_int; liwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sspgvx*(itype: ptr lapack_int; jobz: cstring; range: cstring;                        uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         bp: ptr cfloat; vl: ptr cfloat; vu: ptr cfloat;                         il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cfloat; m: ptr lapack_int; w: ptr cfloat;                         z: ptr cfloat; ldz: ptr lapack_int; work: ptr cfloat;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dspgvx*(itype: ptr lapack_int; jobz: cstring; range: cstring;                        uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         bp: ptr cdouble; vl: ptr cdouble; vu: ptr cdouble;                         il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cdouble; m: ptr lapack_int; w: ptr cdouble;                         z: ptr cdouble; ldz: ptr lapack_int; work: ptr cdouble;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chpgvx*(itype: ptr lapack_int; jobz: cstring; range: cstring;                        uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float;                         bp: ptr lapack_complex_float; vl: ptr cfloat;                         vu: ptr cfloat; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cfloat; m: ptr lapack_int; w: ptr cfloat;                         z: ptr lapack_complex_float; ldz: ptr lapack_int;                       work: ptr lapack_complex_float; rwork: ptr cfloat;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zhpgvx*(itype: ptr lapack_int; jobz: cstring; range: cstring;                        uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double;                       bp: ptr lapack_complex_double; vl: ptr cdouble;                         vu: ptr cdouble; il: ptr lapack_int; iu: ptr lapack_int;                       abstol: ptr cdouble; m: ptr lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ssbgv*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      ka: ptr lapack_int; kb: ptr lapack_int; ab: ptr cfloat;                        ldab: ptr lapack_int; bb: ptr cfloat; ldbb: ptr lapack_int;                      w: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                      work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dsbgv*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      ka: ptr lapack_int; kb: ptr lapack_int; ab: ptr cdouble;                        ldab: ptr lapack_int; bb: ptr cdouble;                        ldbb: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                        ldz: ptr lapack_int; work: ptr cdouble;                        info: ptr lapack_int)
    proc LAPACK_chbgv*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      ka: ptr lapack_int; kb: ptr lapack_int;                      ab: ptr lapack_complex_float; ldab: ptr lapack_int;                      bb: ptr lapack_complex_float; ldbb: ptr lapack_int;                      w: ptr cfloat; z: ptr lapack_complex_float;                        ldz: ptr lapack_int; work: ptr lapack_complex_float;                        rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zhbgv*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                      ka: ptr lapack_int; kb: ptr lapack_int;                      ab: ptr lapack_complex_double; ldab: ptr lapack_int;                      bb: ptr lapack_complex_double; ldbb: ptr lapack_int;                      w: ptr cdouble; z: ptr lapack_complex_double;                      ldz: ptr lapack_int; work: ptr lapack_complex_double;                      rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_ssbgvd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       ka: ptr lapack_int; kb: ptr lapack_int; ab: ptr cfloat;                         ldab: ptr lapack_int; bb: ptr cfloat;                         ldbb: ptr lapack_int; w: ptr cfloat; z: ptr cfloat;                         ldz: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsbgvd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       ka: ptr lapack_int; kb: ptr lapack_int; ab: ptr cdouble;                         ldab: ptr lapack_int; bb: ptr cdouble;                         ldbb: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                         ldz: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chbgvd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       ka: ptr lapack_int; kb: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       bb: ptr lapack_complex_float; ldbb: ptr lapack_int;                       w: ptr cfloat; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; rwork: ptr cfloat;                         lrwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhbgvd*(jobz: cstring; uplo: cstring; n: ptr lapack_int;                       ka: ptr lapack_int; kb: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       bb: ptr lapack_complex_double; ldbb: ptr lapack_int;                       w: ptr cdouble; z: ptr lapack_complex_double;                       ldz: ptr lapack_int; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; rwork: ptr cdouble;                         lrwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ssbgvx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; ka: ptr lapack_int; kb: ptr lapack_int;                       ab: ptr cfloat; ldab: ptr lapack_int; bb: ptr cfloat;                         ldbb: ptr lapack_int; q: ptr cfloat; ldq: ptr lapack_int;                       vl: ptr cfloat; vu: ptr cfloat; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cfloat; m: ptr lapack_int;                       w: ptr cfloat; z: ptr cfloat; ldz: ptr lapack_int;                       work: ptr cfloat; iwork: ptr lapack_int;                       ifail: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dsbgvx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; ka: ptr lapack_int; kb: ptr lapack_int;                       ab: ptr cdouble; ldab: ptr lapack_int; bb: ptr cdouble;                         ldbb: ptr lapack_int; q: ptr cdouble; ldq: ptr lapack_int;                       vl: ptr cdouble; vu: ptr cdouble; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble; z: ptr cdouble;                         ldz: ptr lapack_int; work: ptr cdouble;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_chbgvx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; ka: ptr lapack_int; kb: ptr lapack_int;                       ab: ptr lapack_complex_float; ldab: ptr lapack_int;                       bb: ptr lapack_complex_float; ldbb: ptr lapack_int;                       q: ptr lapack_complex_float; ldq: ptr lapack_int;                       vl: ptr cfloat; vu: ptr cfloat; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cfloat; m: ptr lapack_int;                       w: ptr cfloat; z: ptr lapack_complex_float;                         ldz: ptr lapack_int; work: ptr lapack_complex_float;                         rwork: ptr cfloat; iwork: ptr lapack_int;                       ifail: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhbgvx*(jobz: cstring; range: cstring; uplo: cstring;                        n: ptr lapack_int; ka: ptr lapack_int; kb: ptr lapack_int;                       ab: ptr lapack_complex_double; ldab: ptr lapack_int;                       bb: ptr lapack_complex_double; ldbb: ptr lapack_int;                       q: ptr lapack_complex_double; ldq: ptr lapack_int;                       vl: ptr cdouble; vu: ptr cdouble; il: ptr lapack_int;                       iu: ptr lapack_int; abstol: ptr cdouble;                         m: ptr lapack_int; w: ptr cdouble;                         z: ptr lapack_complex_double; ldz: ptr lapack_int;                       work: ptr lapack_complex_double; rwork: ptr cdouble;                         iwork: ptr lapack_int; ifail: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sgges*(jobvsl: cstring; jobvsr: cstring; sort: cstring;                       selctg: LAPACK_S_SELECT3; n: ptr lapack_int; a: ptr cfloat;                        lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                      sdim: ptr lapack_int; alphar: ptr cfloat;                        alphai: ptr cfloat; beta: ptr cfloat; vsl: ptr cfloat;                        ldvsl: ptr lapack_int; vsr: ptr cfloat;                        ldvsr: ptr lapack_int; work: ptr cfloat;                        lwork: ptr lapack_int; bwork: ptr lapack_logical;                        info: ptr lapack_int)
    proc LAPACK_dgges*(jobvsl: cstring; jobvsr: cstring; sort: cstring;                       selctg: LAPACK_D_SELECT3; n: ptr lapack_int;                      a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                        ldb: ptr lapack_int; sdim: ptr lapack_int;                      alphar: ptr cdouble; alphai: ptr cdouble;                        beta: ptr cdouble; vsl: ptr cdouble; ldvsl: ptr lapack_int;                      vsr: ptr cdouble; ldvsr: ptr lapack_int; work: ptr cdouble;                        lwork: ptr lapack_int; bwork: ptr lapack_logical;                        info: ptr lapack_int)
    proc LAPACK_cgges*(jobvsl: cstring; jobvsr: cstring; sort: cstring;                       selctg: LAPACK_C_SELECT2; n: ptr lapack_int;                      a: ptr lapack_complex_float; lda: ptr lapack_int;                      b: ptr lapack_complex_float; ldb: ptr lapack_int;                      sdim: ptr lapack_int; alpha: ptr lapack_complex_float;                        beta: ptr lapack_complex_float;                        vsl: ptr lapack_complex_float; ldvsl: ptr lapack_int;                      vsr: ptr lapack_complex_float; ldvsr: ptr lapack_int;                      work: ptr lapack_complex_float; lwork: ptr lapack_int;                      rwork: ptr cfloat; bwork: ptr lapack_logical;                        info: ptr lapack_int)
    proc LAPACK_zgges*(jobvsl: cstring; jobvsr: cstring; sort: cstring;                       selctg: LAPACK_Z_SELECT2; n: ptr lapack_int;                      a: ptr lapack_complex_double; lda: ptr lapack_int;                      b: ptr lapack_complex_double; ldb: ptr lapack_int;                      sdim: ptr lapack_int; alpha: ptr lapack_complex_double;                      beta: ptr lapack_complex_double;                      vsl: ptr lapack_complex_double; ldvsl: ptr lapack_int;                      vsr: ptr lapack_complex_double; ldvsr: ptr lapack_int;                      work: ptr lapack_complex_double; lwork: ptr lapack_int;                      rwork: ptr cdouble; bwork: ptr lapack_logical;                        info: ptr lapack_int)
    proc LAPACK_sggesx*(jobvsl: cstring; jobvsr: cstring; sort: cstring;                        selctg: LAPACK_S_SELECT3; sense: cstring;                        n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       b: ptr cfloat; ldb: ptr lapack_int; sdim: ptr lapack_int;                       alphar: ptr cfloat; alphai: ptr cfloat; beta: ptr cfloat;                         vsl: ptr cfloat; ldvsl: ptr lapack_int; vsr: ptr cfloat;                         ldvsr: ptr lapack_int; rconde: ptr cfloat;                         rcondv: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; bwork: ptr lapack_logical;                         info: ptr lapack_int)
    proc LAPACK_dggesx*(jobvsl: cstring; jobvsr: cstring; sort: cstring;                        selctg: LAPACK_D_SELECT3; sense: cstring;                        n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; sdim: ptr lapack_int;                       alphar: ptr cdouble; alphai: ptr cdouble;                         beta: ptr cdouble; vsl: ptr cdouble;                         ldvsl: ptr lapack_int; vsr: ptr cdouble;                         ldvsr: ptr lapack_int; rconde: ptr cdouble;                         rcondv: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       liwork: ptr lapack_int; bwork: ptr lapack_logical;                         info: ptr lapack_int)
    proc LAPACK_cggesx*(jobvsl: cstring; jobvsr: cstring; sort: cstring;                        selctg: LAPACK_C_SELECT2; sense: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; b: ptr lapack_complex_float;                         ldb: ptr lapack_int; sdim: ptr lapack_int;                       alpha: ptr lapack_complex_float;                         beta: ptr lapack_complex_float;                         vsl: ptr lapack_complex_float; ldvsl: ptr lapack_int;                       vsr: ptr lapack_complex_float; ldvsr: ptr lapack_int;                       rconde: ptr cfloat; rcondv: ptr cfloat;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; iwork: ptr lapack_int;                       liwork: ptr lapack_int; bwork: ptr lapack_logical;                         info: ptr lapack_int)
    proc LAPACK_zggesx*(jobvsl: cstring; jobvsr: cstring; sort: cstring;                        selctg: LAPACK_Z_SELECT2; sense: cstring;                        n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; sdim: ptr lapack_int;                       alpha: ptr lapack_complex_double;                       beta: ptr lapack_complex_double;                       vsl: ptr lapack_complex_double; ldvsl: ptr lapack_int;                       vsr: ptr lapack_complex_double; ldvsr: ptr lapack_int;                       rconde: ptr cdouble; rcondv: ptr cdouble;                         work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; iwork: ptr lapack_int;                       liwork: ptr lapack_int; bwork: ptr lapack_logical;                         info: ptr lapack_int)
    proc LAPACK_sggev*(jobvl: cstring; jobvr: cstring; n: ptr lapack_int;                      a: ptr cfloat; lda: ptr lapack_int; b: ptr cfloat;                        ldb: ptr lapack_int; alphar: ptr cfloat;                        alphai: ptr cfloat; beta: ptr cfloat; vl: ptr cfloat;                        ldvl: ptr lapack_int; vr: ptr cfloat; ldvr: ptr lapack_int;                      work: ptr cfloat; lwork: ptr lapack_int;                      info: ptr lapack_int)
    proc LAPACK_dggev*(jobvl: cstring; jobvr: cstring; n: ptr lapack_int;                      a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                        ldb: ptr lapack_int; alphar: ptr cdouble;                        alphai: ptr cdouble; beta: ptr cdouble; vl: ptr cdouble;                        ldvl: ptr lapack_int; vr: ptr cdouble;                        ldvr: ptr lapack_int; work: ptr cdouble;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cggev*(jobvl: cstring; jobvr: cstring; n: ptr lapack_int;                      a: ptr lapack_complex_float; lda: ptr lapack_int;                      b: ptr lapack_complex_float; ldb: ptr lapack_int;                      alpha: ptr lapack_complex_float;                        beta: ptr lapack_complex_float;                        vl: ptr lapack_complex_float; ldvl: ptr lapack_int;                      vr: ptr lapack_complex_float; ldvr: ptr lapack_int;                      work: ptr lapack_complex_float; lwork: ptr lapack_int;                      rwork: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_zggev*(jobvl: cstring; jobvr: cstring; n: ptr lapack_int;                      a: ptr lapack_complex_double; lda: ptr lapack_int;                      b: ptr lapack_complex_double; ldb: ptr lapack_int;                      alpha: ptr lapack_complex_double;                      beta: ptr lapack_complex_double;                      vl: ptr lapack_complex_double; ldvl: ptr lapack_int;                      vr: ptr lapack_complex_double; ldvr: ptr lapack_int;                      work: ptr lapack_complex_double; lwork: ptr lapack_int;                      rwork: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_sggevx*(balanc: cstring; jobvl: cstring; jobvr: cstring;                        sense: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                       alphar: ptr cfloat; alphai: ptr cfloat; beta: ptr cfloat;                         vl: ptr cfloat; ldvl: ptr lapack_int; vr: ptr cfloat;                         ldvr: ptr lapack_int; ilo: ptr lapack_int;                       ihi: ptr lapack_int; lscale: ptr cfloat;                         rscale: ptr cfloat; abnrm: ptr cfloat; bbnrm: ptr cfloat;                         rconde: ptr cfloat; rcondv: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       bwork: ptr lapack_logical; info: ptr lapack_int)
    proc LAPACK_dggevx*(balanc: cstring; jobvl: cstring; jobvr: cstring;                        sense: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                       alphar: ptr cdouble; alphai: ptr cdouble;                         beta: ptr cdouble; vl: ptr cdouble; ldvl: ptr lapack_int;                       vr: ptr cdouble; ldvr: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cdouble; rscale: ptr cdouble;                         abnrm: ptr cdouble; bbnrm: ptr cdouble;                         rconde: ptr cdouble; rcondv: ptr cdouble;                         work: ptr cdouble; lwork: ptr lapack_int;                       iwork: ptr lapack_int; bwork: ptr lapack_logical;                         info: ptr lapack_int)
    proc LAPACK_cggevx*(balanc: cstring; jobvl: cstring; jobvr: cstring;                        sense: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       alpha: ptr lapack_complex_float;                         beta: ptr lapack_complex_float;                         vl: ptr lapack_complex_float; ldvl: ptr lapack_int;                       vr: ptr lapack_complex_float; ldvr: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cfloat; rscale: ptr cfloat; abnrm: ptr cfloat;                         bbnrm: ptr cfloat; rconde: ptr cfloat; rcondv: ptr cfloat;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       rwork: ptr cfloat; iwork: ptr lapack_int;                       bwork: ptr lapack_logical; info: ptr lapack_int)
    proc LAPACK_zggevx*(balanc: cstring; jobvl: cstring; jobvr: cstring;                        sense: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       alpha: ptr lapack_complex_double;                       beta: ptr lapack_complex_double;                       vl: ptr lapack_complex_double; ldvl: ptr lapack_int;                       vr: ptr lapack_complex_double; ldvr: ptr lapack_int;                       ilo: ptr lapack_int; ihi: ptr lapack_int;                       lscale: ptr cdouble; rscale: ptr cdouble;                         abnrm: ptr cdouble; bbnrm: ptr cdouble;                         rconde: ptr cdouble; rcondv: ptr cdouble;                         work: ptr lapack_complex_double; lwork: ptr lapack_int;                       rwork: ptr cdouble; iwork: ptr lapack_int;                       bwork: ptr lapack_logical; info: ptr lapack_int)
    proc LAPACK_dsfrk*(transr: cstring; uplo: cstring; trans: cstring;                       n: ptr lapack_int; k: ptr lapack_int; alpha: ptr cdouble;                        a: ptr cdouble; lda: ptr lapack_int; beta: ptr cdouble;                        c: ptr cdouble)
    proc LAPACK_ssfrk*(transr: cstring; uplo: cstring; trans: cstring;                       n: ptr lapack_int; k: ptr lapack_int; alpha: ptr cfloat;                        a: ptr cfloat; lda: ptr lapack_int; beta: ptr cfloat;                        c: ptr cfloat)
    proc LAPACK_zhfrk*(transr: cstring; uplo: cstring; trans: cstring;                       n: ptr lapack_int; k: ptr lapack_int; alpha: ptr cdouble;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                      beta: ptr cdouble; c: ptr lapack_complex_double)
    proc LAPACK_chfrk*(transr: cstring; uplo: cstring; trans: cstring;                       n: ptr lapack_int; k: ptr lapack_int; alpha: ptr cfloat;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                      beta: ptr cfloat; c: ptr lapack_complex_float)
    proc LAPACK_dtfsm*(transr: cstring; side: cstring; uplo: cstring;                       trans: cstring; diag: cstring; m: ptr lapack_int;                      n: ptr lapack_int; alpha: ptr cdouble; a: ptr cdouble;                        b: ptr cdouble; ldb: ptr lapack_int)
    proc LAPACK_stfsm*(transr: cstring; side: cstring; uplo: cstring;                       trans: cstring; diag: cstring; m: ptr lapack_int;                      n: ptr lapack_int; alpha: ptr cfloat; a: ptr cfloat;                        b: ptr cfloat; ldb: ptr lapack_int)
    proc LAPACK_ztfsm*(transr: cstring; side: cstring; uplo: cstring;                       trans: cstring; diag: cstring; m: ptr lapack_int;                      n: ptr lapack_int; alpha: ptr lapack_complex_double;                      a: ptr lapack_complex_double; b: ptr lapack_complex_double;                      ldb: ptr lapack_int)
    proc LAPACK_ctfsm*(transr: cstring; side: cstring; uplo: cstring;                       trans: cstring; diag: cstring; m: ptr lapack_int;                      n: ptr lapack_int; alpha: ptr lapack_complex_float;                        a: ptr lapack_complex_float; b: ptr lapack_complex_float;                        ldb: ptr lapack_int)
    proc LAPACK_dtfttp*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       arf: ptr cdouble; ap: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_stfttp*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       arf: ptr cfloat; ap: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ztfttp*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       arf: ptr lapack_complex_double;                       ap: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_ctfttp*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       arf: ptr lapack_complex_float;                         ap: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_dtfttr*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       arf: ptr cdouble; a: ptr cdouble; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_stfttr*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       arf: ptr cfloat; a: ptr cfloat; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ztfttr*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       arf: ptr lapack_complex_double;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ctfttr*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       arf: ptr lapack_complex_float;                         a: ptr lapack_complex_float; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dtpttf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       ap: ptr cdouble; arf: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_stpttf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       ap: ptr cfloat; arf: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ztpttf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double;                       arf: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_ctpttf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float;                         arf: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_dtpttr*(uplo: cstring; n: ptr lapack_int; ap: ptr cdouble;                         a: ptr cdouble; lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_stpttr*(uplo: cstring; n: ptr lapack_int; ap: ptr cfloat;                         a: ptr cfloat; lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ztpttr*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_double;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ctpttr*(uplo: cstring; n: ptr lapack_int;                       ap: ptr lapack_complex_float; a: ptr lapack_complex_float;                         lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dtrttf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; arf: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_strttf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; arf: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_ztrttf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       arf: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_ctrttf*(transr: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       arf: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_dtrttp*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; ap: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_strttp*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; ap: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ztrttp*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ap: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_ctrttp*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ap: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_sgeqrfp*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                          lda: ptr lapack_int; tau: ptr cfloat; work: ptr cfloat;                          lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dgeqrfp*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; tau: ptr cdouble; work: ptr cdouble;                          lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_cgeqrfp*(m: ptr lapack_int; n: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        tau: ptr lapack_complex_float;                          work: ptr lapack_complex_float; lwork: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_zgeqrfp*(m: ptr lapack_int; n: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        tau: ptr lapack_complex_double;                        work: ptr lapack_complex_double; lwork: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_clacgv*(n: ptr lapack_int; x: ptr lapack_complex_float;                         incx: ptr lapack_int)
    proc LAPACK_zlacgv*(n: ptr lapack_int; x: ptr lapack_complex_double;                       incx: ptr lapack_int)
    proc LAPACK_slarnv*(idist: ptr lapack_int; iseed: ptr lapack_int;                       n: ptr lapack_int; x: ptr cfloat)
    proc LAPACK_dlarnv*(idist: ptr lapack_int; iseed: ptr lapack_int;                       n: ptr lapack_int; x: ptr cdouble)
    proc LAPACK_clarnv*(idist: ptr lapack_int; iseed: ptr lapack_int;                       n: ptr lapack_int; x: ptr lapack_complex_float)
    proc LAPACK_zlarnv*(idist: ptr lapack_int; iseed: ptr lapack_int;                       n: ptr lapack_int; x: ptr lapack_complex_double)
    proc LAPACK_sgeqr2*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dgeqr2*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cgeqr2*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zgeqr2*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_slacpy*(uplo: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int)
    proc LAPACK_dlacpy*(uplo: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int)
    proc LAPACK_clacpy*(uplo: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int)
    proc LAPACK_zlacpy*(uplo: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int)
    proc LAPACK_sgetf2*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dgetf2*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; ipiv: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cgetf2*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       ipiv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zgetf2*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       ipiv: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_slaswp*(n: ptr lapack_int; a: ptr cfloat; lda: ptr lapack_int;                       k1: ptr lapack_int; k2: ptr lapack_int;                       ipiv: ptr lapack_int; incx: ptr lapack_int)
    proc LAPACK_dlaswp*(n: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       k1: ptr lapack_int; k2: ptr lapack_int;                       ipiv: ptr lapack_int; incx: ptr lapack_int)
    proc LAPACK_claswp*(n: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; k1: ptr lapack_int;                       k2: ptr lapack_int; ipiv: ptr lapack_int;                       incx: ptr lapack_int)
    proc LAPACK_zlaswp*(n: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; k1: ptr lapack_int;                       k2: ptr lapack_int; ipiv: ptr lapack_int;                       incx: ptr lapack_int)
    proc LAPACK_slange*(norm: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; work: ptr cfloat): cfloat
    proc LAPACK_dlange*(norm: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; work: ptr cdouble): cdouble
    proc LAPACK_clange*(norm: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       work: ptr cfloat): cfloat
    proc LAPACK_zlange*(norm: cstring; m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       work: ptr cdouble): cdouble
    proc LAPACK_clanhe*(norm: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       work: ptr cfloat): cfloat
    proc LAPACK_zlanhe*(norm: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       work: ptr cdouble): cdouble
    proc LAPACK_slansy*(norm: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; work: ptr cfloat): cfloat
    proc LAPACK_dlansy*(norm: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; work: ptr cdouble): cdouble
    proc LAPACK_clansy*(norm: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       work: ptr cfloat): cfloat
    proc LAPACK_zlansy*(norm: cstring; uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       work: ptr cdouble): cdouble
    proc LAPACK_slantr*(norm: cstring; uplo: cstring; diag: cstring;                        m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; work: ptr cfloat): cfloat
    proc LAPACK_dlantr*(norm: cstring; uplo: cstring; diag: cstring;                        m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; work: ptr cdouble): cdouble
    proc LAPACK_clantr*(norm: cstring; uplo: cstring; diag: cstring;                        m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       work: ptr cfloat): cfloat
    proc LAPACK_zlantr*(norm: cstring; uplo: cstring; diag: cstring;                        m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       work: ptr cdouble): cdouble
    proc LAPACK_slamch*(cmach: cstring): cfloat
    proc LAPACK_dlamch*(cmach: cstring): cdouble
    proc LAPACK_sgelq2*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; tau: ptr cfloat; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dgelq2*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; tau: ptr cdouble; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cgelq2*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       tau: ptr lapack_complex_float;                         work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zgelq2*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       tau: ptr lapack_complex_double;                       work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_slarfb*(side: cstring; trans: cstring; direct: cstring;                        storev: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; v: ptr cfloat; ldv: ptr lapack_int;                       t: ptr cfloat; ldt: ptr lapack_int; c: ptr cfloat;                         ldc: ptr lapack_int; work: ptr cfloat;                         ldwork: ptr lapack_int)
    proc LAPACK_dlarfb*(side: cstring; trans: cstring; direct: cstring;                        storev: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; v: ptr cdouble; ldv: ptr lapack_int;                       t: ptr cdouble; ldt: ptr lapack_int; c: ptr cdouble;                         ldc: ptr lapack_int; work: ptr cdouble;                         ldwork: ptr lapack_int)
    proc LAPACK_clarfb*(side: cstring; trans: cstring; direct: cstring;                        storev: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; v: ptr lapack_complex_float;                         ldv: ptr lapack_int; t: ptr lapack_complex_float;                         ldt: ptr lapack_int; c: ptr lapack_complex_float;                         ldc: ptr lapack_int; work: ptr lapack_complex_float;                         ldwork: ptr lapack_int)
    proc LAPACK_zlarfb*(side: cstring; trans: cstring; direct: cstring;                        storev: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; v: ptr lapack_complex_double;                       ldv: ptr lapack_int; t: ptr lapack_complex_double;                       ldt: ptr lapack_int; c: ptr lapack_complex_double;                       ldc: ptr lapack_int; work: ptr lapack_complex_double;                       ldwork: ptr lapack_int)
    proc LAPACK_slarfg*(n: ptr lapack_int; alpha: ptr cfloat; x: ptr cfloat;                         incx: ptr lapack_int; tau: ptr cfloat)
    proc LAPACK_dlarfg*(n: ptr lapack_int; alpha: ptr cdouble; x: ptr cdouble;                         incx: ptr lapack_int; tau: ptr cdouble)
    proc LAPACK_clarfg*(n: ptr lapack_int; alpha: ptr lapack_complex_float;                         x: ptr lapack_complex_float; incx: ptr lapack_int;                       tau: ptr lapack_complex_float)
    proc LAPACK_zlarfg*(n: ptr lapack_int; alpha: ptr lapack_complex_double;                       x: ptr lapack_complex_double; incx: ptr lapack_int;                       tau: ptr lapack_complex_double)
    proc LAPACK_slarft*(direct: cstring; storev: cstring; n: ptr lapack_int;                       k: ptr lapack_int; v: ptr cfloat; ldv: ptr lapack_int;                       tau: ptr cfloat; t: ptr cfloat; ldt: ptr lapack_int)
    proc LAPACK_dlarft*(direct: cstring; storev: cstring; n: ptr lapack_int;                       k: ptr lapack_int; v: ptr cdouble; ldv: ptr lapack_int;                       tau: ptr cdouble; t: ptr cdouble; ldt: ptr lapack_int)
    proc LAPACK_clarft*(direct: cstring; storev: cstring; n: ptr lapack_int;                       k: ptr lapack_int; v: ptr lapack_complex_float;                         ldv: ptr lapack_int; tau: ptr lapack_complex_float;                         t: ptr lapack_complex_float; ldt: ptr lapack_int)
    proc LAPACK_zlarft*(direct: cstring; storev: cstring; n: ptr lapack_int;                       k: ptr lapack_int; v: ptr lapack_complex_double;                       ldv: ptr lapack_int; tau: ptr lapack_complex_double;                       t: ptr lapack_complex_double; ldt: ptr lapack_int)
    proc LAPACK_slarfx*(side: cstring; m: ptr lapack_int; n: ptr lapack_int;                       v: ptr cfloat; tau: ptr cfloat; c: ptr cfloat;                         ldc: ptr lapack_int; work: ptr cfloat)
    proc LAPACK_dlarfx*(side: cstring; m: ptr lapack_int; n: ptr lapack_int;                       v: ptr cdouble; tau: ptr cdouble; c: ptr cdouble;                         ldc: ptr lapack_int; work: ptr cdouble)
    proc LAPACK_clarfx*(side: cstring; m: ptr lapack_int; n: ptr lapack_int;                       v: ptr lapack_complex_float;                         tau: ptr lapack_complex_float;                         c: ptr lapack_complex_float; ldc: ptr lapack_int;                       work: ptr lapack_complex_float)
    proc LAPACK_zlarfx*(side: cstring; m: ptr lapack_int; n: ptr lapack_int;                       v: ptr lapack_complex_double;                       tau: ptr lapack_complex_double;                       c: ptr lapack_complex_double; ldc: ptr lapack_int;                       work: ptr lapack_complex_double)
    proc LAPACK_slatms*(m: ptr lapack_int; n: ptr lapack_int; dist: cstring;                        iseed: ptr lapack_int; sym: cstring; d: ptr cfloat;                         mode: ptr lapack_int; cond: ptr cfloat; dmax: ptr cfloat;                         kl: ptr lapack_int; ku: ptr lapack_int; pack: cstring;                        a: ptr cfloat; lda: ptr lapack_int; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dlatms*(m: ptr lapack_int; n: ptr lapack_int; dist: cstring;                        iseed: ptr lapack_int; sym: cstring; d: ptr cdouble;                         mode: ptr lapack_int; cond: ptr cdouble;                         dmax: ptr cdouble; kl: ptr lapack_int; ku: ptr lapack_int;                       pack: cstring; a: ptr cdouble; lda: ptr lapack_int;                       work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_clatms*(m: ptr lapack_int; n: ptr lapack_int; dist: cstring;                        iseed: ptr lapack_int; sym: cstring; d: ptr cfloat;                         mode: ptr lapack_int; cond: ptr cfloat; dmax: ptr cfloat;                         kl: ptr lapack_int; ku: ptr lapack_int; pack: cstring;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                       work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zlatms*(m: ptr lapack_int; n: ptr lapack_int; dist: cstring;                        iseed: ptr lapack_int; sym: cstring; d: ptr cdouble;                         mode: ptr lapack_int; cond: ptr cdouble;                         dmax: ptr cdouble; kl: ptr lapack_int; ku: ptr lapack_int;                       pack: cstring; a: ptr lapack_complex_double;                       lda: ptr lapack_int; work: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_slag2d*(m: ptr lapack_int; n: ptr lapack_int; sa: ptr cfloat;                         ldsa: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dlag2s*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; sa: ptr cfloat; ldsa: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_clag2z*(m: ptr lapack_int; n: ptr lapack_int;                       sa: ptr lapack_complex_float; ldsa: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zlag2c*(m: ptr lapack_int; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       sa: ptr lapack_complex_float; ldsa: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_slauum*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                         lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dlauum*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                         lda: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_clauum*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zlauum*(uplo: cstring; n: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_slagge*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; d: ptr cfloat; a: ptr cfloat;                         lda: ptr lapack_int; iseed: ptr lapack_int;                       work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dlagge*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; d: ptr cdouble; a: ptr cdouble;                         lda: ptr lapack_int; iseed: ptr lapack_int;                       work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_clagge*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; d: ptr cfloat;                         a: ptr lapack_complex_float; lda: ptr lapack_int;                       iseed: ptr lapack_int; work: ptr lapack_complex_float;                         info: ptr lapack_int)
    proc LAPACK_zlagge*(m: ptr lapack_int; n: ptr lapack_int; kl: ptr lapack_int;                       ku: ptr lapack_int; d: ptr cdouble;                         a: ptr lapack_complex_double; lda: ptr lapack_int;                       iseed: ptr lapack_int; work: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_slaset*(uplo: cstring; m: ptr lapack_int; n: ptr lapack_int;                       alpha: ptr cfloat; beta: ptr cfloat; a: ptr cfloat;                         lda: ptr lapack_int)
    proc LAPACK_dlaset*(uplo: cstring; m: ptr lapack_int; n: ptr lapack_int;                       alpha: ptr cdouble; beta: ptr cdouble; a: ptr cdouble;                         lda: ptr lapack_int)
    proc LAPACK_claset*(uplo: cstring; m: ptr lapack_int; n: ptr lapack_int;                       alpha: ptr lapack_complex_float;                         beta: ptr lapack_complex_float;                         a: ptr lapack_complex_float; lda: ptr lapack_int)
    proc LAPACK_zlaset*(uplo: cstring; m: ptr lapack_int; n: ptr lapack_int;                       alpha: ptr lapack_complex_double;                       beta: ptr lapack_complex_double;                       a: ptr lapack_complex_double; lda: ptr lapack_int)
    proc LAPACK_slasrt*(id: cstring; n: ptr lapack_int; d: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dlasrt*(id: cstring; n: ptr lapack_int; d: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_claghe*(n: ptr lapack_int; k: ptr lapack_int; d: ptr cfloat;                         a: ptr lapack_complex_float; lda: ptr lapack_int;                       iseed: ptr lapack_int; work: ptr lapack_complex_float;                         info: ptr lapack_int)
    proc LAPACK_zlaghe*(n: ptr lapack_int; k: ptr lapack_int; d: ptr cdouble;                         a: ptr lapack_complex_double; lda: ptr lapack_int;                       iseed: ptr lapack_int; work: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_slagsy*(n: ptr lapack_int; k: ptr lapack_int; d: ptr cfloat;                         a: ptr cfloat; lda: ptr lapack_int; iseed: ptr lapack_int;                       work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dlagsy*(n: ptr lapack_int; k: ptr lapack_int; d: ptr cdouble;                         a: ptr cdouble; lda: ptr lapack_int;                       iseed: ptr lapack_int; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_clagsy*(n: ptr lapack_int; k: ptr lapack_int; d: ptr cfloat;                         a: ptr lapack_complex_float; lda: ptr lapack_int;                       iseed: ptr lapack_int; work: ptr lapack_complex_float;                         info: ptr lapack_int)
    proc LAPACK_zlagsy*(n: ptr lapack_int; k: ptr lapack_int; d: ptr cdouble;                         a: ptr lapack_complex_double; lda: ptr lapack_int;                       iseed: ptr lapack_int; work: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_slapmr*(forwrd: ptr lapack_logical; m: ptr lapack_int;                       n: ptr lapack_int; x: ptr cfloat; ldx: ptr lapack_int;                       k: ptr lapack_int)
    proc LAPACK_dlapmr*(forwrd: ptr lapack_logical; m: ptr lapack_int;                       n: ptr lapack_int; x: ptr cdouble; ldx: ptr lapack_int;                       k: ptr lapack_int)
    proc LAPACK_clapmr*(forwrd: ptr lapack_logical; m: ptr lapack_int;                       n: ptr lapack_int; x: ptr lapack_complex_float;                         ldx: ptr lapack_int; k: ptr lapack_int)
    proc LAPACK_zlapmr*(forwrd: ptr lapack_logical; m: ptr lapack_int;                       n: ptr lapack_int; x: ptr lapack_complex_double;                       ldx: ptr lapack_int; k: ptr lapack_int)
    proc LAPACK_slapy2*(x: ptr cfloat; y: ptr cfloat): cfloat
    proc LAPACK_dlapy2*(x: ptr cdouble; y: ptr cdouble): cdouble
    proc LAPACK_slapy3*(x: ptr cfloat; y: ptr cfloat; z: ptr cfloat): cfloat
    proc LAPACK_dlapy3*(x: ptr cdouble; y: ptr cdouble; z: ptr cdouble): cdouble
    proc LAPACK_slartgp*(f: ptr cfloat; g: ptr cfloat; cs: ptr cfloat;                          sn: ptr cfloat; r: ptr cfloat)
    proc LAPACK_dlartgp*(f: ptr cdouble; g: ptr cdouble; cs: ptr cdouble;                          sn: ptr cdouble; r: ptr cdouble)
    proc LAPACK_slartgs*(x: ptr cfloat; y: ptr cfloat; sigma: ptr cfloat;                          cs: ptr cfloat; sn: ptr cfloat)
    proc LAPACK_dlartgs*(x: ptr cdouble; y: ptr cdouble; sigma: ptr cdouble;                          cs: ptr cdouble; sn: ptr cdouble)
    # LAPACK 3.3.0
    proc LAPACK_cbbcsd*(jobu1: cstring; jobu2: cstring; jobv1t: cstring;                        jobv2t: cstring; trans: cstring; m: ptr lapack_int;                       p: ptr lapack_int; q: ptr lapack_int; theta: ptr cfloat;                         phi: ptr cfloat; u1: ptr lapack_complex_float;                         ldu1: ptr lapack_int; u2: ptr lapack_complex_float;                         ldu2: ptr lapack_int; v1t: ptr lapack_complex_float;                         ldv1t: ptr lapack_int; v2t: ptr lapack_complex_float;                         ldv2t: ptr lapack_int; b11d: ptr cfloat; b11e: ptr cfloat;                         b12d: ptr cfloat; b12e: ptr cfloat; b21d: ptr cfloat;                         b21e: ptr cfloat; b22d: ptr cfloat; b22e: ptr cfloat;                         rwork: ptr cfloat; lrwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cheswapr*(uplo: cstring; n: ptr lapack_int;                         a: ptr lapack_complex_float; i1: ptr lapack_int;                         i2: ptr lapack_int)
    proc LAPACK_chetri2*(uplo: cstring; n: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        ipiv: ptr lapack_int; work: ptr lapack_complex_float;                          lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chetri2x*(uplo: cstring; n: ptr lapack_int;                         a: ptr lapack_complex_float; lda: ptr lapack_int;                         ipiv: ptr lapack_int; work: ptr lapack_complex_float;                           nb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_chetrs2*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_float;                          ldb: ptr lapack_int; work: ptr lapack_complex_float;                          info: ptr lapack_int)
    proc LAPACK_csyconv*(uplo: cstring; way: cstring; n: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        ipiv: ptr lapack_int; work: ptr lapack_complex_float;                          info: ptr lapack_int)
    proc LAPACK_csyswapr*(uplo: cstring; n: ptr lapack_int;                         a: ptr lapack_complex_float; i1: ptr lapack_int;                         i2: ptr lapack_int)
    proc LAPACK_csytri2*(uplo: cstring; n: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        ipiv: ptr lapack_int; work: ptr lapack_complex_float;                          lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_csytri2x*(uplo: cstring; n: ptr lapack_int;                         a: ptr lapack_complex_float; lda: ptr lapack_int;                         ipiv: ptr lapack_int; work: ptr lapack_complex_float;                           nb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_csytrs2*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_float;                          ldb: ptr lapack_int; work: ptr lapack_complex_float;                          info: ptr lapack_int)
    proc LAPACK_cunbdb*(trans: cstring; signs: cstring; m: ptr lapack_int;                       p: ptr lapack_int; q: ptr lapack_int;                       x11: ptr lapack_complex_float; ldx11: ptr lapack_int;                       x12: ptr lapack_complex_float; ldx12: ptr lapack_int;                       x21: ptr lapack_complex_float; ldx21: ptr lapack_int;                       x22: ptr lapack_complex_float; ldx22: ptr lapack_int;                       theta: ptr cfloat; phi: ptr cfloat;                         taup1: ptr lapack_complex_float;                         taup2: ptr lapack_complex_float;                         tauq1: ptr lapack_complex_float;                         tauq2: ptr lapack_complex_float;                         work: ptr lapack_complex_float; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_cuncsd*(jobu1: cstring; jobu2: cstring; jobv1t: cstring;                        jobv2t: cstring; trans: cstring; signs: cstring;                        m: ptr lapack_int; p: ptr lapack_int; q: ptr lapack_int;                       x11: ptr lapack_complex_float; ldx11: ptr lapack_int;                       x12: ptr lapack_complex_float; ldx12: ptr lapack_int;                       x21: ptr lapack_complex_float; ldx21: ptr lapack_int;                       x22: ptr lapack_complex_float; ldx22: ptr lapack_int;                       theta: ptr cfloat; u1: ptr lapack_complex_float;                         ldu1: ptr lapack_int; u2: ptr lapack_complex_float;                         ldu2: ptr lapack_int; v1t: ptr lapack_complex_float;                         ldv1t: ptr lapack_int; v2t: ptr lapack_complex_float;                         ldv2t: ptr lapack_int; work: ptr lapack_complex_float;                         lwork: ptr lapack_int; rwork: ptr cfloat;                         lrwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dbbcsd*(jobu1: cstring; jobu2: cstring; jobv1t: cstring;                        jobv2t: cstring; trans: cstring; m: ptr lapack_int;                       p: ptr lapack_int; q: ptr lapack_int; theta: ptr cdouble;                         phi: ptr cdouble; u1: ptr cdouble; ldu1: ptr lapack_int;                       u2: ptr cdouble; ldu2: ptr lapack_int; v1t: ptr cdouble;                         ldv1t: ptr lapack_int; v2t: ptr cdouble;                         ldv2t: ptr lapack_int; b11d: ptr cdouble;                         b11e: ptr cdouble; b12d: ptr cdouble; b12e: ptr cdouble;                         b21d: ptr cdouble; b21e: ptr cdouble; b22d: ptr cdouble;                         b22e: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dorbdb*(trans: cstring; signs: cstring; m: ptr lapack_int;                       p: ptr lapack_int; q: ptr lapack_int; x11: ptr cdouble;                         ldx11: ptr lapack_int; x12: ptr cdouble;                         ldx12: ptr lapack_int; x21: ptr cdouble;                         ldx21: ptr lapack_int; x22: ptr cdouble;                         ldx22: ptr lapack_int; theta: ptr cdouble;                         phi: ptr cdouble; taup1: ptr cdouble; taup2: ptr cdouble;                         tauq1: ptr cdouble; tauq2: ptr cdouble; work: ptr cdouble;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dorcsd*(jobu1: cstring; jobu2: cstring; jobv1t: cstring;                        jobv2t: cstring; trans: cstring; signs: cstring;                        m: ptr lapack_int; p: ptr lapack_int; q: ptr lapack_int;                       x11: ptr cdouble; ldx11: ptr lapack_int; x12: ptr cdouble;                         ldx12: ptr lapack_int; x21: ptr cdouble;                         ldx21: ptr lapack_int; x22: ptr cdouble;                         ldx22: ptr lapack_int; theta: ptr cdouble;                         u1: ptr cdouble; ldu1: ptr lapack_int; u2: ptr cdouble;                         ldu2: ptr lapack_int; v1t: ptr cdouble;                         ldv1t: ptr lapack_int; v2t: ptr cdouble;                         ldv2t: ptr lapack_int; work: ptr cdouble;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_dsyconv*(uplo: cstring; way: cstring; n: ptr lapack_int;                        a: ptr cdouble; lda: ptr lapack_int;                        ipiv: ptr lapack_int; work: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_dsyswapr*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                           i1: ptr lapack_int; i2: ptr lapack_int)
    proc LAPACK_dsytri2*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; ipiv: ptr lapack_int;                        work: ptr lapack_complex_double; lwork: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_dsytri2x*(uplo: cstring; n: ptr lapack_int; a: ptr cdouble;                           lda: ptr lapack_int; ipiv: ptr lapack_int;                         work: ptr cdouble; nb: ptr lapack_int;                         info: ptr lapack_int)
    proc LAPACK_dsytrs2*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                        a: ptr cdouble; lda: ptr lapack_int;                        ipiv: ptr lapack_int; b: ptr cdouble;                          ldb: ptr lapack_int; work: ptr cdouble;                          info: ptr lapack_int)
    proc LAPACK_sbbcsd*(jobu1: cstring; jobu2: cstring; jobv1t: cstring;                        jobv2t: cstring; trans: cstring; m: ptr lapack_int;                       p: ptr lapack_int; q: ptr lapack_int; theta: ptr cfloat;                         phi: ptr cfloat; u1: ptr cfloat; ldu1: ptr lapack_int;                       u2: ptr cfloat; ldu2: ptr lapack_int; v1t: ptr cfloat;                         ldv1t: ptr lapack_int; v2t: ptr cfloat;                         ldv2t: ptr lapack_int; b11d: ptr cfloat; b11e: ptr cfloat;                         b12d: ptr cfloat; b12e: ptr cfloat; b21d: ptr cfloat;                         b21e: ptr cfloat; b22d: ptr cfloat; b22e: ptr cfloat;                         work: ptr cfloat; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_sorbdb*(trans: cstring; signs: cstring; m: ptr lapack_int;                       p: ptr lapack_int; q: ptr lapack_int; x11: ptr cfloat;                         ldx11: ptr lapack_int; x12: ptr cfloat;                         ldx12: ptr lapack_int; x21: ptr cfloat;                         ldx21: ptr lapack_int; x22: ptr cfloat;                         ldx22: ptr lapack_int; theta: ptr cfloat; phi: ptr cfloat;                         taup1: ptr cfloat; taup2: ptr cfloat; tauq1: ptr cfloat;                         tauq2: ptr cfloat; work: ptr cfloat;                         lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_sorcsd*(jobu1: cstring; jobu2: cstring; jobv1t: cstring;                        jobv2t: cstring; trans: cstring; signs: cstring;                        m: ptr lapack_int; p: ptr lapack_int; q: ptr lapack_int;                       x11: ptr cfloat; ldx11: ptr lapack_int; x12: ptr cfloat;                         ldx12: ptr lapack_int; x21: ptr cfloat;                         ldx21: ptr lapack_int; x22: ptr cfloat;                         ldx22: ptr lapack_int; theta: ptr cfloat; u1: ptr cfloat;                         ldu1: ptr lapack_int; u2: ptr cfloat;                         ldu2: ptr lapack_int; v1t: ptr cfloat;                         ldv1t: ptr lapack_int; v2t: ptr cfloat;                         ldv2t: ptr lapack_int; work: ptr cfloat;                         lwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_ssyconv*(uplo: cstring; way: cstring; n: ptr lapack_int;                        a: ptr cfloat; lda: ptr lapack_int; ipiv: ptr lapack_int;                        work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_ssyswapr*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                           i1: ptr lapack_int; i2: ptr lapack_int)
    proc LAPACK_ssytri2*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                          lda: ptr lapack_int; ipiv: ptr lapack_int;                        work: ptr lapack_complex_float; lwork: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_ssytri2x*(uplo: cstring; n: ptr lapack_int; a: ptr cfloat;                           lda: ptr lapack_int; ipiv: ptr lapack_int;                         work: ptr cfloat; nb: ptr lapack_int;                         info: ptr lapack_int)
    proc LAPACK_ssytrs2*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                        a: ptr cfloat; lda: ptr lapack_int; ipiv: ptr lapack_int;                        b: ptr cfloat; ldb: ptr lapack_int; work: ptr cfloat;                          info: ptr lapack_int)
    proc LAPACK_zbbcsd*(jobu1: cstring; jobu2: cstring; jobv1t: cstring;                        jobv2t: cstring; trans: cstring; m: ptr lapack_int;                       p: ptr lapack_int; q: ptr lapack_int; theta: ptr cdouble;                         phi: ptr cdouble; u1: ptr lapack_complex_double;                       ldu1: ptr lapack_int; u2: ptr lapack_complex_double;                       ldu2: ptr lapack_int; v1t: ptr lapack_complex_double;                       ldv1t: ptr lapack_int; v2t: ptr lapack_complex_double;                       ldv2t: ptr lapack_int; b11d: ptr cdouble;                         b11e: ptr cdouble; b12d: ptr cdouble; b12e: ptr cdouble;                         b21d: ptr cdouble; b21e: ptr cdouble; b22d: ptr cdouble;                         b22e: ptr cdouble; rwork: ptr cdouble;                         lrwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zheswapr*(uplo: cstring; n: ptr lapack_int;                         a: ptr lapack_complex_double; i1: ptr lapack_int;                         i2: ptr lapack_int)
    proc LAPACK_zhetri2*(uplo: cstring; n: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        ipiv: ptr lapack_int; work: ptr lapack_complex_double;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhetri2x*(uplo: cstring; n: ptr lapack_int;                         a: ptr lapack_complex_double; lda: ptr lapack_int;                         ipiv: ptr lapack_int; work: ptr lapack_complex_double;                         nb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zhetrs2*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_double;                        ldb: ptr lapack_int; work: ptr lapack_complex_double;                        info: ptr lapack_int)
    proc LAPACK_zsyconv*(uplo: cstring; way: cstring; n: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        ipiv: ptr lapack_int; work: ptr lapack_complex_double;                        info: ptr lapack_int)
    proc LAPACK_zsyswapr*(uplo: cstring; n: ptr lapack_int;                         a: ptr lapack_complex_double; i1: ptr lapack_int;                         i2: ptr lapack_int)
    proc LAPACK_zsytri2*(uplo: cstring; n: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        ipiv: ptr lapack_int; work: ptr lapack_complex_double;                        lwork: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zsytri2x*(uplo: cstring; n: ptr lapack_int;                         a: ptr lapack_complex_double; lda: ptr lapack_int;                         ipiv: ptr lapack_int; work: ptr lapack_complex_double;                         nb: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_zsytrs2*(uplo: cstring; n: ptr lapack_int; nrhs: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        ipiv: ptr lapack_int; b: ptr lapack_complex_double;                        ldb: ptr lapack_int; work: ptr lapack_complex_double;                        info: ptr lapack_int)
    proc LAPACK_zunbdb*(trans: cstring; signs: cstring; m: ptr lapack_int;                       p: ptr lapack_int; q: ptr lapack_int;                       x11: ptr lapack_complex_double; ldx11: ptr lapack_int;                       x12: ptr lapack_complex_double; ldx12: ptr lapack_int;                       x21: ptr lapack_complex_double; ldx21: ptr lapack_int;                       x22: ptr lapack_complex_double; ldx22: ptr lapack_int;                       theta: ptr cdouble; phi: ptr cdouble;                         taup1: ptr lapack_complex_double;                       taup2: ptr lapack_complex_double;                       tauq1: ptr lapack_complex_double;                       tauq2: ptr lapack_complex_double;                       work: ptr lapack_complex_double; lwork: ptr lapack_int;                       info: ptr lapack_int)
    proc LAPACK_zuncsd*(jobu1: cstring; jobu2: cstring; jobv1t: cstring;                        jobv2t: cstring; trans: cstring; signs: cstring;                        m: ptr lapack_int; p: ptr lapack_int; q: ptr lapack_int;                       x11: ptr lapack_complex_double; ldx11: ptr lapack_int;                       x12: ptr lapack_complex_double; ldx12: ptr lapack_int;                       x21: ptr lapack_complex_double; ldx21: ptr lapack_int;                       x22: ptr lapack_complex_double; ldx22: ptr lapack_int;                       theta: ptr cdouble; u1: ptr lapack_complex_double;                       ldu1: ptr lapack_int; u2: ptr lapack_complex_double;                       ldu2: ptr lapack_int; v1t: ptr lapack_complex_double;                       ldv1t: ptr lapack_int; v2t: ptr lapack_complex_double;                       ldv2t: ptr lapack_int; work: ptr lapack_complex_double;                       lwork: ptr lapack_int; rwork: ptr cdouble;                         lrwork: ptr lapack_int; iwork: ptr lapack_int;                       info: ptr lapack_int)
    # LAPACK 3.4.0
    proc LAPACK_sgemqrt*(side: cstring; trans: cstring; m: ptr lapack_int;                        n: ptr lapack_int; k: ptr lapack_int; nb: ptr lapack_int;                        v: ptr cfloat; ldv: ptr lapack_int; t: ptr cfloat;                          ldt: ptr lapack_int; c: ptr cfloat; ldc: ptr lapack_int;                        work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dgemqrt*(side: cstring; trans: cstring; m: ptr lapack_int;                        n: ptr lapack_int; k: ptr lapack_int; nb: ptr lapack_int;                        v: ptr cdouble; ldv: ptr lapack_int; t: ptr cdouble;                          ldt: ptr lapack_int; c: ptr cdouble; ldc: ptr lapack_int;                        work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_cgemqrt*(side: cstring; trans: cstring; m: ptr lapack_int;                        n: ptr lapack_int; k: ptr lapack_int; nb: ptr lapack_int;                        v: ptr lapack_complex_float; ldv: ptr lapack_int;                        t: ptr lapack_complex_float; ldt: ptr lapack_int;                        c: ptr lapack_complex_float; ldc: ptr lapack_int;                        work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zgemqrt*(side: cstring; trans: cstring; m: ptr lapack_int;                        n: ptr lapack_int; k: ptr lapack_int; nb: ptr lapack_int;                        v: ptr lapack_complex_double; ldv: ptr lapack_int;                        t: ptr lapack_complex_double; ldt: ptr lapack_int;                        c: ptr lapack_complex_double; ldc: ptr lapack_int;                        work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_sgeqrt*(m: ptr lapack_int; n: ptr lapack_int; nb: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; t: ptr cfloat;                         ldt: ptr lapack_int; work: ptr cfloat;                         info: ptr lapack_int)
    proc LAPACK_dgeqrt*(m: ptr lapack_int; n: ptr lapack_int; nb: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; t: ptr cdouble;                         ldt: ptr lapack_int; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_cgeqrt*(m: ptr lapack_int; n: ptr lapack_int; nb: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       t: ptr lapack_complex_float; ldt: ptr lapack_int;                       work: ptr lapack_complex_float; info: ptr lapack_int)
    proc LAPACK_zgeqrt*(m: ptr lapack_int; n: ptr lapack_int; nb: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       t: ptr lapack_complex_double; ldt: ptr lapack_int;                       work: ptr lapack_complex_double; info: ptr lapack_int)
    proc LAPACK_sgeqrt2*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                          lda: ptr lapack_int; t: ptr cfloat; ldt: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_dgeqrt2*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; t: ptr cdouble; ldt: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_cgeqrt2*(m: ptr lapack_int; n: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        t: ptr lapack_complex_float; ldt: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_zgeqrt2*(m: ptr lapack_int; n: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        t: ptr lapack_complex_double; ldt: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_sgeqrt3*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                          lda: ptr lapack_int; t: ptr cfloat; ldt: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_dgeqrt3*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; t: ptr cdouble; ldt: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_cgeqrt3*(m: ptr lapack_int; n: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        t: ptr lapack_complex_float; ldt: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_zgeqrt3*(m: ptr lapack_int; n: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        t: ptr lapack_complex_double; ldt: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_stpmqrt*(side: cstring; trans: cstring; m: ptr lapack_int;                        n: ptr lapack_int; k: ptr lapack_int; l: ptr lapack_int;                        nb: ptr lapack_int; v: ptr cfloat; ldv: ptr lapack_int;                        t: ptr cfloat; ldt: ptr lapack_int; a: ptr cfloat;                          lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                        work: ptr cfloat; info: ptr lapack_int)
    proc LAPACK_dtpmqrt*(side: cstring; trans: cstring; m: ptr lapack_int;                        n: ptr lapack_int; k: ptr lapack_int; l: ptr lapack_int;                        nb: ptr lapack_int; v: ptr cdouble; ldv: ptr lapack_int;                        t: ptr cdouble; ldt: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                        work: ptr cdouble; info: ptr lapack_int)
    proc LAPACK_ctpmqrt*(side: cstring; trans: cstring; m: ptr lapack_int;                        n: ptr lapack_int; k: ptr lapack_int; l: ptr lapack_int;                        nb: ptr lapack_int; v: ptr lapack_complex_float;                          ldv: ptr lapack_int; t: ptr lapack_complex_float;                          ldt: ptr lapack_int; a: ptr lapack_complex_float;                          lda: ptr lapack_int; b: ptr lapack_complex_float;                          ldb: ptr lapack_int; work: ptr lapack_complex_float;                          info: ptr lapack_int)
    proc LAPACK_ztpmqrt*(side: cstring; trans: cstring; m: ptr lapack_int;                        n: ptr lapack_int; k: ptr lapack_int; l: ptr lapack_int;                        nb: ptr lapack_int; v: ptr lapack_complex_double;                        ldv: ptr lapack_int; t: ptr lapack_complex_double;                        ldt: ptr lapack_int; a: ptr lapack_complex_double;                        lda: ptr lapack_int; b: ptr lapack_complex_double;                        ldb: ptr lapack_int; work: ptr lapack_complex_double;                        info: ptr lapack_int)
    proc LAPACK_dtpqrt*(m: ptr lapack_int; n: ptr lapack_int; l: ptr lapack_int;                       nb: ptr lapack_int; a: ptr cdouble; lda: ptr lapack_int;                       b: ptr cdouble; ldb: ptr lapack_int; t: ptr cdouble;                         ldt: ptr lapack_int; work: ptr cdouble;                         info: ptr lapack_int)
    proc LAPACK_ctpqrt*(m: ptr lapack_int; n: ptr lapack_int; l: ptr lapack_int;                       nb: ptr lapack_int; a: ptr lapack_complex_float;                         lda: ptr lapack_int; t: ptr lapack_complex_float;                         b: ptr lapack_complex_float; ldb: ptr lapack_int;                       ldt: ptr lapack_int; work: ptr lapack_complex_float;                         info: ptr lapack_int)
    proc LAPACK_ztpqrt*(m: ptr lapack_int; n: ptr lapack_int; l: ptr lapack_int;                       nb: ptr lapack_int; a: ptr lapack_complex_double;                       lda: ptr lapack_int; b: ptr lapack_complex_double;                       ldb: ptr lapack_int; t: ptr lapack_complex_double;                       ldt: ptr lapack_int; work: ptr lapack_complex_double;                       info: ptr lapack_int)
    proc LAPACK_stpqrt2*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cfloat;                          lda: ptr lapack_int; b: ptr cfloat; ldb: ptr lapack_int;                        t: ptr cfloat; ldt: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_dtpqrt2*(m: ptr lapack_int; n: ptr lapack_int; a: ptr cdouble;                          lda: ptr lapack_int; b: ptr cdouble; ldb: ptr lapack_int;                        t: ptr cdouble; ldt: ptr lapack_int; info: ptr lapack_int)
    proc LAPACK_ctpqrt2*(m: ptr lapack_int; n: ptr lapack_int;                        a: ptr lapack_complex_float; lda: ptr lapack_int;                        b: ptr lapack_complex_float; ldb: ptr lapack_int;                        t: ptr lapack_complex_float; ldt: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_ztpqrt2*(m: ptr lapack_int; n: ptr lapack_int;                        a: ptr lapack_complex_double; lda: ptr lapack_int;                        b: ptr lapack_complex_double; ldb: ptr lapack_int;                        t: ptr lapack_complex_double; ldt: ptr lapack_int;                        info: ptr lapack_int)
    proc LAPACK_stprfb*(side: cstring; trans: cstring; direct: cstring;                        storev: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int; v: ptr cfloat;                         ldv: ptr lapack_int; t: ptr cfloat; ldt: ptr lapack_int;                       a: ptr cfloat; lda: ptr lapack_int; b: ptr cfloat;                         ldb: ptr lapack_int; mywork: ptr cfloat;                         myldwork: ptr lapack_int)
    proc LAPACK_dtprfb*(side: cstring; trans: cstring; direct: cstring;                        storev: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int; v: ptr cdouble;                         ldv: ptr lapack_int; t: ptr cdouble; ldt: ptr lapack_int;                       a: ptr cdouble; lda: ptr lapack_int; b: ptr cdouble;                         ldb: ptr lapack_int; mywork: ptr cdouble;                         myldwork: ptr lapack_int)
    proc LAPACK_ctprfb*(side: cstring; trans: cstring; direct: cstring;                        storev: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int;                       v: ptr lapack_complex_float; ldv: ptr lapack_int;                       t: ptr lapack_complex_float; ldt: ptr lapack_int;                       a: ptr lapack_complex_float; lda: ptr lapack_int;                       b: ptr lapack_complex_float; ldb: ptr lapack_int;                       mywork: ptr cfloat; myldwork: ptr lapack_int)
    proc LAPACK_ztprfb*(side: cstring; trans: cstring; direct: cstring;                        storev: cstring; m: ptr lapack_int; n: ptr lapack_int;                       k: ptr lapack_int; l: ptr lapack_int;                       v: ptr lapack_complex_double; ldv: ptr lapack_int;                       t: ptr lapack_complex_double; ldt: ptr lapack_int;                       a: ptr lapack_complex_double; lda: ptr lapack_int;                       b: ptr lapack_complex_double; ldb: ptr lapack_int;                       mywork: ptr cdouble; myldwork: ptr lapack_int)
    # LAPACK 3.X.X
    proc LAPACK_csyr*(uplo: cstring; n: ptr lapack_int;                     alpha: ptr lapack_complex_float;                       x: ptr lapack_complex_float; incx: ptr lapack_int;                     a: ptr lapack_complex_float; lda: ptr lapack_int)
    proc LAPACK_zsyr*(uplo: cstring; n: ptr lapack_int;                     alpha: ptr lapack_complex_double;                     x: ptr lapack_complex_double; incx: ptr lapack_int;                     a: ptr lapack_complex_double; lda: ptr lapack_int)